// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_metadata.proto

package zproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RpcMetadata struct {
	ServerId        int32  `protobuf:"varint,1,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
	NetlibSessionId int64  `protobuf:"varint,2,opt,name=netlib_session_id,json=netlibSessionId" json:"netlib_session_id,omitempty"`
	ClientAddr      string `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr" json:"client_addr,omitempty"`
	AuthId          int64  `protobuf:"varint,4,opt,name=auth_id,json=authId" json:"auth_id,omitempty"`
	SessionId       int64  `protobuf:"varint,5,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	TraceId         int64  `protobuf:"varint,6,opt,name=trace_id,json=traceId" json:"trace_id,omitempty"`
	SpanId          int64  `protobuf:"varint,7,opt,name=span_id,json=spanId" json:"span_id,omitempty"`
	ReceiveTime     int64  `protobuf:"varint,8,opt,name=receive_time,json=receiveTime" json:"receive_time,omitempty"`
	From            string `protobuf:"bytes,9,opt,name=from" json:"from,omitempty"`
	To              string `protobuf:"bytes,10,opt,name=to" json:"to,omitempty"`
	// 用户ID
	UserId      int32 `protobuf:"varint,11,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientMsgId int64 `protobuf:"varint,12,opt,name=client_msg_id,json=clientMsgId" json:"client_msg_id,omitempty"`
}

func (m *RpcMetadata) Reset()                    { *m = RpcMetadata{} }
func (m *RpcMetadata) String() string            { return proto.CompactTextString(m) }
func (*RpcMetadata) ProtoMessage()               {}
func (*RpcMetadata) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RpcMetadata) GetServerId() int32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *RpcMetadata) GetNetlibSessionId() int64 {
	if m != nil {
		return m.NetlibSessionId
	}
	return 0
}

func (m *RpcMetadata) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

func (m *RpcMetadata) GetAuthId() int64 {
	if m != nil {
		return m.AuthId
	}
	return 0
}

func (m *RpcMetadata) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

func (m *RpcMetadata) GetTraceId() int64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *RpcMetadata) GetSpanId() int64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *RpcMetadata) GetReceiveTime() int64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

func (m *RpcMetadata) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RpcMetadata) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *RpcMetadata) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RpcMetadata) GetClientMsgId() int64 {
	if m != nil {
		return m.ClientMsgId
	}
	return 0
}

func init() {
	proto.RegisterType((*RpcMetadata)(nil), "zproto.RpcMetadata")
}

func init() { proto.RegisterFile("rpc_metadata.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 311 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xb4, 0x4d, 0x9b, 0x4b, 0x01, 0xd5, 0x0c, 0x04, 0x21, 0x44, 0xe9, 0x54, 0x21,
	0xd4, 0x85, 0x27, 0xa0, 0x62, 0xc0, 0x43, 0xa5, 0x2a, 0x30, 0xb1, 0x44, 0x6e, 0xee, 0x28, 0x96,
	0xea, 0x38, 0xb2, 0xdd, 0x0e, 0xbc, 0x30, 0xaf, 0x81, 0x6c, 0x47, 0x88, 0xe9, 0xfc, 0xff, 0x9f,
	0xfd, 0xdb, 0xbe, 0x03, 0x66, 0xba, 0xa6, 0x56, 0xe4, 0x04, 0x0a, 0x27, 0x56, 0x9d, 0xd1, 0x4e,
	0xb3, 0xec, 0x3b, 0xd4, 0xc5, 0x4f, 0x0a, 0x45, 0xd5, 0x35, 0x9b, 0x9e, 0xb2, 0x1b, 0xc8, 0x2d,
	0x99, 0x13, 0x99, 0x5a, 0x62, 0x99, 0xcc, 0x93, 0xe5, 0xa8, 0x9a, 0x44, 0x83, 0x23, 0x7b, 0x80,
	0x59, 0x4b, 0xee, 0x20, 0x77, 0xb5, 0x25, 0x6b, 0xa5, 0x6e, 0xfd, 0xa6, 0x74, 0x9e, 0x2c, 0x07,
	0xd5, 0x45, 0x04, 0x6f, 0xd1, 0xe7, 0xc8, 0xee, 0xa0, 0x68, 0x0e, 0x92, 0x5a, 0x57, 0x0b, 0x44,
	0x53, 0x0e, 0xe6, 0xc9, 0x32, 0xaf, 0x20, 0x5a, 0xcf, 0x88, 0x86, 0x5d, 0xc1, 0x58, 0x1c, 0xdd,
	0x97, 0x8f, 0x18, 0x86, 0x88, 0xcc, 0x4b, 0x8e, 0xec, 0x16, 0xe0, 0x5f, 0xfc, 0x28, 0xb0, 0xdc,
	0xfe, 0x05, 0x5f, 0xc3, 0xc4, 0x19, 0xd1, 0x90, 0x87, 0x59, 0x80, 0xe3, 0xa0, 0x39, 0xfa, 0x48,
	0xdb, 0x89, 0x70, 0x6c, 0x1c, 0x23, 0xbd, 0xe4, 0xc8, 0xee, 0x61, 0x6a, 0xa8, 0x21, 0x79, 0xa2,
	0xda, 0x49, 0x45, 0xe5, 0x24, 0xd0, 0xa2, 0xf7, 0xde, 0xa5, 0x22, 0xc6, 0x60, 0xf8, 0x69, 0xb4,
	0x2a, 0xf3, 0xf0, 0xd0, 0xb0, 0x66, 0xe7, 0x90, 0x3a, 0x5d, 0x42, 0x70, 0x52, 0xa7, 0x7d, 0xfe,
	0xd1, 0xc6, 0xd6, 0x14, 0xa1, 0x35, 0x99, 0x97, 0x1c, 0xd9, 0x02, 0xce, 0xfa, 0xcf, 0x2a, 0xbb,
	0xf7, 0x78, 0x1a, 0x2f, 0x88, 0xe6, 0xc6, 0xee, 0x39, 0xae, 0x1f, 0xe1, 0xb2, 0xd1, 0x6a, 0xd5,
	0xd2, 0xee, 0x78, 0x10, 0x52, 0xad, 0xe2, 0x00, 0xd6, 0xb3, 0x8f, 0xad, 0xaf, 0xfd, 0x0c, 0x5e,
	0x84, 0x13, 0xaf, 0xe9, 0x36, 0xd9, 0x65, 0x81, 0x3e, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff, 0x99,
	0x5b, 0xee, 0x47, 0xbc, 0x01, 0x00, 0x00,
}
