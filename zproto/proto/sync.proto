/*
 *  Copyright (c) 2016, https://github.com/nebula-im
 *  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.nebulaim.zproto";
option java_outer_classname = "ZProtoSync";
option optimize_for = CODE_SIZE;

package zproto;

///////////////////////////////////////////////////////////////////////
// ServerAuthReq ==> VoidRsp
// SERVER_AUTH_REQ
message ServerAuthReq {
    int32  server_id = 1;
    string server_name = 2;
}

message VoidRsp {
}

//
message DeliveryUpdatesToUsers {
    int64 my_auth_key_id = 1;
    int64 my_session_id = 2;
    int64 my_netlib_session_id = 3;
    repeated int32  sendto_user_id_list = 4;
    // uint32 raw_data_header = 4;
    bytes  raw_data = 5;
}

message PushUpdatesData {
    int64 auth_key_id = 1;
    int64 session_id = 2;
    int64 netlib_session_id = 3;
    uint32 raw_data_header = 4;
    bytes  raw_data = 5;
}

// Interface exported by the server.
service RPCSync {
    // frontend --> sync
    rpc PushUpdatesStream(ServerAuthReq) returns (stream PushUpdatesData);
    // rpc ServerAuth(ServerAuthReq) returns (VoidRsp);
    rpc DeliveryUpdates(DeliveryUpdatesToUsers) returns (VoidRsp);
}
