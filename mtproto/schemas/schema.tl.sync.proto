/*
 * WARNING! All changes made in this file will be lost!
 * Created from 'scheme.tl' by 'codegen_proto.py'
 *
 *  Copyright (c) 2017, https://github.com/nebulaim
 *  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3"; 

package mtproto; 

option java_package = "com.nebulaim.engine.mtproto";
option java_outer_classname = "MTProto";
option optimize_for = CODE_SIZE;

import "schema.tl.core_types.proto";

// Type forward declarations
message InputPeer {
  oneof payload {
    TL_inputPeerEmpty inputPeerEmpty = 1;
    TL_inputPeerSelf inputPeerSelf = 2;
    TL_inputPeerChat inputPeerChat = 3;
    TL_inputPeerUser inputPeerUser = 4;
    TL_inputPeerChannel inputPeerChannel = 5;
  }
}

message InputUser {
  oneof payload {
    TL_inputUserEmpty inputUserEmpty = 1;
    TL_inputUserSelf inputUserSelf = 2;
    TL_inputUser inputUser = 3;
  }
}

message InputContact {
  oneof payload {
    TL_inputPhoneContact inputPhoneContact = 1;
  }
}

message InputFile {
  oneof payload {
    TL_inputFile inputFile = 1;
    TL_inputFileBig inputFileBig = 2;
  }
}

message InputMedia {
  oneof payload {
    TL_inputMediaEmpty inputMediaEmpty = 1;
    TL_inputMediaUploadedPhoto inputMediaUploadedPhoto = 2;
    TL_inputMediaPhoto inputMediaPhoto = 3;
    TL_inputMediaGeoPoint inputMediaGeoPoint = 4;
    TL_inputMediaContact inputMediaContact = 5;
    TL_inputMediaUploadedDocument inputMediaUploadedDocument = 6;
    TL_inputMediaDocument inputMediaDocument = 7;
    TL_inputMediaVenue inputMediaVenue = 8;
    TL_inputMediaGifExternal inputMediaGifExternal = 9;
    TL_inputMediaPhotoExternal inputMediaPhotoExternal = 10;
    TL_inputMediaDocumentExternal inputMediaDocumentExternal = 11;
    TL_inputMediaGame inputMediaGame = 12;
    TL_inputMediaInvoice inputMediaInvoice = 13;
  }
}

message InputChatPhoto {
  oneof payload {
    TL_inputChatPhotoEmpty inputChatPhotoEmpty = 1;
    TL_inputChatUploadedPhoto inputChatUploadedPhoto = 2;
    TL_inputChatPhoto inputChatPhoto = 3;
  }
}

message InputGeoPoint {
  oneof payload {
    TL_inputGeoPointEmpty inputGeoPointEmpty = 1;
    TL_inputGeoPoint inputGeoPoint = 2;
  }
}

message InputPhoto {
  oneof payload {
    TL_inputPhotoEmpty inputPhotoEmpty = 1;
    TL_inputPhoto inputPhoto = 2;
  }
}

message InputFileLocation {
  oneof payload {
    TL_inputFileLocation inputFileLocation = 1;
    TL_inputEncryptedFileLocation inputEncryptedFileLocation = 2;
    TL_inputDocumentFileLocation inputDocumentFileLocation = 3;
  }
}

message InputAppEvent {
  oneof payload {
    TL_inputAppEvent inputAppEvent = 1;
  }
}

message Peer {
  oneof payload {
    TL_peerUser peerUser = 1;
    TL_peerChat peerChat = 2;
    TL_peerChannel peerChannel = 3;
  }
}

message storage_FileType {
  oneof payload {
    TL_storage_fileUnknown storage_fileUnknown = 1;
    TL_storage_filePartial storage_filePartial = 2;
    TL_storage_fileJpeg storage_fileJpeg = 3;
    TL_storage_fileGif storage_fileGif = 4;
    TL_storage_filePng storage_filePng = 5;
    TL_storage_filePdf storage_filePdf = 6;
    TL_storage_fileMp3 storage_fileMp3 = 7;
    TL_storage_fileMov storage_fileMov = 8;
    TL_storage_fileMp4 storage_fileMp4 = 9;
    TL_storage_fileWebp storage_fileWebp = 10;
  }
}

message FileLocation {
  oneof payload {
    TL_fileLocationUnavailable fileLocationUnavailable = 1;
    TL_fileLocation fileLocation = 2;
  }
}

message User {
  oneof payload {
    TL_userEmpty userEmpty = 1;
    TL_user user = 2;
  }
}

message UserProfilePhoto {
  oneof payload {
    TL_userProfilePhotoEmpty userProfilePhotoEmpty = 1;
    TL_userProfilePhoto userProfilePhoto = 2;
  }
}

message UserStatus {
  oneof payload {
    TL_userStatusEmpty userStatusEmpty = 1;
    TL_userStatusOnline userStatusOnline = 2;
    TL_userStatusOffline userStatusOffline = 3;
    TL_userStatusRecently userStatusRecently = 4;
    TL_userStatusLastWeek userStatusLastWeek = 5;
    TL_userStatusLastMonth userStatusLastMonth = 6;
  }
}

message Chat {
  oneof payload {
    TL_chatEmpty chatEmpty = 1;
    TL_chat chat = 2;
    TL_chatForbidden chatForbidden = 3;
    TL_channel channel = 4;
    TL_channelForbidden channelForbidden = 5;
  }
}

message ChatFull {
  oneof payload {
    TL_chatFull chatFull = 1;
    TL_channelFull channelFull = 2;
  }
}

message ChatParticipant {
  oneof payload {
    TL_chatParticipant chatParticipant = 1;
    TL_chatParticipantCreator chatParticipantCreator = 2;
    TL_chatParticipantAdmin chatParticipantAdmin = 3;
  }
}

message ChatParticipants {
  oneof payload {
    TL_chatParticipantsForbidden chatParticipantsForbidden = 1;
    TL_chatParticipants chatParticipants = 2;
  }
}

message ChatPhoto {
  oneof payload {
    TL_chatPhotoEmpty chatPhotoEmpty = 1;
    TL_chatPhoto chatPhoto = 2;
  }
}

message Message {
  oneof payload {
    TL_messageEmpty messageEmpty = 1;
    TL_message message = 2;
    TL_messageService messageService = 3;
  }
}

message MessageMedia {
  oneof payload {
    TL_messageMediaEmpty messageMediaEmpty = 1;
    TL_messageMediaPhoto messageMediaPhoto = 2;
    TL_messageMediaGeo messageMediaGeo = 3;
    TL_messageMediaContact messageMediaContact = 4;
    TL_messageMediaUnsupported messageMediaUnsupported = 5;
    TL_messageMediaDocument messageMediaDocument = 6;
    TL_messageMediaWebPage messageMediaWebPage = 7;
    TL_messageMediaVenue messageMediaVenue = 8;
    TL_messageMediaGame messageMediaGame = 9;
    TL_messageMediaInvoice messageMediaInvoice = 10;
  }
}

message MessageAction {
  oneof payload {
    TL_messageActionEmpty messageActionEmpty = 1;
    TL_messageActionChatCreate messageActionChatCreate = 2;
    TL_messageActionChatEditTitle messageActionChatEditTitle = 3;
    TL_messageActionChatEditPhoto messageActionChatEditPhoto = 4;
    TL_messageActionChatDeletePhoto messageActionChatDeletePhoto = 5;
    TL_messageActionChatAddUser messageActionChatAddUser = 6;
    TL_messageActionChatDeleteUser messageActionChatDeleteUser = 7;
    TL_messageActionChatJoinedByLink messageActionChatJoinedByLink = 8;
    TL_messageActionChannelCreate messageActionChannelCreate = 9;
    TL_messageActionChatMigrateTo messageActionChatMigrateTo = 10;
    TL_messageActionChannelMigrateFrom messageActionChannelMigrateFrom = 11;
    TL_messageActionPinMessage messageActionPinMessage = 12;
    TL_messageActionHistoryClear messageActionHistoryClear = 13;
    TL_messageActionGameScore messageActionGameScore = 14;
    TL_messageActionPaymentSentMe messageActionPaymentSentMe = 15;
    TL_messageActionPaymentSent messageActionPaymentSent = 16;
    TL_messageActionPhoneCall messageActionPhoneCall = 17;
    TL_messageActionScreenshotTaken messageActionScreenshotTaken = 18;
  }
}

message Dialog {
  oneof payload {
    TL_dialog dialog = 1;
  }
}

message Photo {
  oneof payload {
    TL_photoEmpty photoEmpty = 1;
    TL_photo photo = 2;
  }
}

message PhotoSize {
  oneof payload {
    TL_photoSizeEmpty photoSizeEmpty = 1;
    TL_photoSize photoSize = 2;
    TL_photoCachedSize photoCachedSize = 3;
  }
}

message GeoPoint {
  oneof payload {
    TL_geoPointEmpty geoPointEmpty = 1;
    TL_geoPoint geoPoint = 2;
  }
}

message auth_CheckedPhone {
  oneof payload {
    TL_auth_checkedPhone auth_checkedPhone = 1;
  }
}

message auth_SentCode {
  oneof payload {
    TL_auth_sentCode auth_sentCode = 1;
  }
}

message auth_Authorization {
  oneof payload {
    TL_auth_authorization auth_authorization = 1;
  }
}

message auth_ExportedAuthorization {
  oneof payload {
    TL_auth_exportedAuthorization auth_exportedAuthorization = 1;
  }
}

message InputNotifyPeer {
  oneof payload {
    TL_inputNotifyPeer inputNotifyPeer = 1;
    TL_inputNotifyUsers inputNotifyUsers = 2;
    TL_inputNotifyChats inputNotifyChats = 3;
    TL_inputNotifyAll inputNotifyAll = 4;
  }
}

message InputPeerNotifyEvents {
  oneof payload {
    TL_inputPeerNotifyEventsEmpty inputPeerNotifyEventsEmpty = 1;
    TL_inputPeerNotifyEventsAll inputPeerNotifyEventsAll = 2;
  }
}

message InputPeerNotifySettings {
  oneof payload {
    TL_inputPeerNotifySettings inputPeerNotifySettings = 1;
  }
}

message PeerNotifyEvents {
  oneof payload {
    TL_peerNotifyEventsEmpty peerNotifyEventsEmpty = 1;
    TL_peerNotifyEventsAll peerNotifyEventsAll = 2;
  }
}

message PeerNotifySettings {
  oneof payload {
    TL_peerNotifySettingsEmpty peerNotifySettingsEmpty = 1;
    TL_peerNotifySettings peerNotifySettings = 2;
  }
}

message PeerSettings {
  oneof payload {
    TL_peerSettings peerSettings = 1;
  }
}

message WallPaper {
  oneof payload {
    TL_wallPaper wallPaper = 1;
    TL_wallPaperSolid wallPaperSolid = 2;
  }
}

message ReportReason {
  oneof payload {
    TL_inputReportReasonSpam inputReportReasonSpam = 1;
    TL_inputReportReasonViolence inputReportReasonViolence = 2;
    TL_inputReportReasonPornography inputReportReasonPornography = 3;
    TL_inputReportReasonOther inputReportReasonOther = 4;
  }
}

message UserFull {
  oneof payload {
    TL_userFull userFull = 1;
  }
}

message Contact {
  oneof payload {
    TL_contact contact = 1;
  }
}

message ImportedContact {
  oneof payload {
    TL_importedContact importedContact = 1;
  }
}

message ContactBlocked {
  oneof payload {
    TL_contactBlocked contactBlocked = 1;
  }
}

message ContactStatus {
  oneof payload {
    TL_contactStatus contactStatus = 1;
  }
}

message contacts_Link {
  oneof payload {
    TL_contacts_link contacts_link = 1;
  }
}

message contacts_Contacts {
  oneof payload {
    TL_contacts_contactsNotModified contacts_contactsNotModified = 1;
    TL_contacts_contacts contacts_contacts = 2;
  }
}

message contacts_ImportedContacts {
  oneof payload {
    TL_contacts_importedContacts contacts_importedContacts = 1;
  }
}

message contacts_Blocked {
  oneof payload {
    TL_contacts_blocked contacts_blocked = 1;
    TL_contacts_blockedSlice contacts_blockedSlice = 2;
  }
}

message messages_Dialogs {
  oneof payload {
    TL_messages_dialogs messages_dialogs = 1;
    TL_messages_dialogsSlice messages_dialogsSlice = 2;
  }
}

message messages_Messages {
  oneof payload {
    TL_messages_messages messages_messages = 1;
    TL_messages_messagesSlice messages_messagesSlice = 2;
    TL_messages_channelMessages messages_channelMessages = 3;
  }
}

message messages_Chats {
  oneof payload {
    TL_messages_chats messages_chats = 1;
    TL_messages_chatsSlice messages_chatsSlice = 2;
  }
}

message messages_ChatFull {
  oneof payload {
    TL_messages_chatFull messages_chatFull = 1;
  }
}

message messages_AffectedHistory {
  oneof payload {
    TL_messages_affectedHistory messages_affectedHistory = 1;
  }
}

message MessagesFilter {
  oneof payload {
    TL_inputMessagesFilterEmpty inputMessagesFilterEmpty = 1;
    TL_inputMessagesFilterPhotos inputMessagesFilterPhotos = 2;
    TL_inputMessagesFilterVideo inputMessagesFilterVideo = 3;
    TL_inputMessagesFilterPhotoVideo inputMessagesFilterPhotoVideo = 4;
    TL_inputMessagesFilterPhotoVideoDocuments inputMessagesFilterPhotoVideoDocuments = 5;
    TL_inputMessagesFilterDocument inputMessagesFilterDocument = 6;
    TL_inputMessagesFilterUrl inputMessagesFilterUrl = 7;
    TL_inputMessagesFilterGif inputMessagesFilterGif = 8;
    TL_inputMessagesFilterVoice inputMessagesFilterVoice = 9;
    TL_inputMessagesFilterMusic inputMessagesFilterMusic = 10;
    TL_inputMessagesFilterChatPhotos inputMessagesFilterChatPhotos = 11;
    TL_inputMessagesFilterPhoneCalls inputMessagesFilterPhoneCalls = 12;
    TL_inputMessagesFilterRoundVoice inputMessagesFilterRoundVoice = 13;
    TL_inputMessagesFilterRoundVideo inputMessagesFilterRoundVideo = 14;
    TL_inputMessagesFilterMyMentions inputMessagesFilterMyMentions = 15;
  }
}

message Update {
  oneof payload {
    TL_updateNewMessage updateNewMessage = 1;
    TL_updateMessageID updateMessageID = 2;
    TL_updateDeleteMessages updateDeleteMessages = 3;
    TL_updateUserTyping updateUserTyping = 4;
    TL_updateChatUserTyping updateChatUserTyping = 5;
    TL_updateChatParticipants updateChatParticipants = 6;
    TL_updateUserStatus updateUserStatus = 7;
    TL_updateUserName updateUserName = 8;
    TL_updateUserPhoto updateUserPhoto = 9;
    TL_updateContactRegistered updateContactRegistered = 10;
    TL_updateContactLink updateContactLink = 11;
    TL_updateNewEncryptedMessage updateNewEncryptedMessage = 12;
    TL_updateEncryptedChatTyping updateEncryptedChatTyping = 13;
    TL_updateEncryption updateEncryption = 14;
    TL_updateEncryptedMessagesRead updateEncryptedMessagesRead = 15;
    TL_updateChatParticipantAdd updateChatParticipantAdd = 16;
    TL_updateChatParticipantDelete updateChatParticipantDelete = 17;
    TL_updateDcOptions updateDcOptions = 18;
    TL_updateUserBlocked updateUserBlocked = 19;
    TL_updateNotifySettings updateNotifySettings = 20;
    TL_updateServiceNotification updateServiceNotification = 21;
    TL_updatePrivacy updatePrivacy = 22;
    TL_updateUserPhone updateUserPhone = 23;
    TL_updateReadHistoryInbox updateReadHistoryInbox = 24;
    TL_updateReadHistoryOutbox updateReadHistoryOutbox = 25;
    TL_updateWebPage updateWebPage = 26;
    TL_updateReadMessagesContents updateReadMessagesContents = 27;
    TL_updateChannelTooLong updateChannelTooLong = 28;
    TL_updateChannel updateChannel = 29;
    TL_updateNewChannelMessage updateNewChannelMessage = 30;
    TL_updateReadChannelInbox updateReadChannelInbox = 31;
    TL_updateDeleteChannelMessages updateDeleteChannelMessages = 32;
    TL_updateChannelMessageViews updateChannelMessageViews = 33;
    TL_updateChatAdmins updateChatAdmins = 34;
    TL_updateChatParticipantAdmin updateChatParticipantAdmin = 35;
    TL_updateNewStickerSet updateNewStickerSet = 36;
    TL_updateStickerSetsOrder updateStickerSetsOrder = 37;
    TL_updateStickerSets updateStickerSets = 38;
    TL_updateSavedGifs updateSavedGifs = 39;
    TL_updateBotInlineQuery updateBotInlineQuery = 40;
    TL_updateBotInlineSend updateBotInlineSend = 41;
    TL_updateEditChannelMessage updateEditChannelMessage = 42;
    TL_updateChannelPinnedMessage updateChannelPinnedMessage = 43;
    TL_updateBotCallbackQuery updateBotCallbackQuery = 44;
    TL_updateEditMessage updateEditMessage = 45;
    TL_updateInlineBotCallbackQuery updateInlineBotCallbackQuery = 46;
    TL_updateReadChannelOutbox updateReadChannelOutbox = 47;
    TL_updateDraftMessage updateDraftMessage = 48;
    TL_updateReadFeaturedStickers updateReadFeaturedStickers = 49;
    TL_updateRecentStickers updateRecentStickers = 50;
    TL_updateConfig updateConfig = 51;
    TL_updatePtsChanged updatePtsChanged = 52;
    TL_updateChannelWebPage updateChannelWebPage = 53;
    TL_updateDialogPinned updateDialogPinned = 54;
    TL_updatePinnedDialogs updatePinnedDialogs = 55;
    TL_updateBotWebhookJSON updateBotWebhookJSON = 56;
    TL_updateBotWebhookJSONQuery updateBotWebhookJSONQuery = 57;
    TL_updateBotShippingQuery updateBotShippingQuery = 58;
    TL_updateBotPrecheckoutQuery updateBotPrecheckoutQuery = 59;
    TL_updatePhoneCall updatePhoneCall = 60;
    TL_updateLangPackTooLong updateLangPackTooLong = 61;
    TL_updateLangPack updateLangPack = 62;
    TL_updateFavedStickers updateFavedStickers = 63;
    TL_updateChannelReadMessagesContents updateChannelReadMessagesContents = 64;
    TL_updateContactsReset updateContactsReset = 65;
  }
}

message updates_State {
  oneof payload {
    TL_updates_state updates_state = 1;
  }
}

message updates_Difference {
  oneof payload {
    TL_updates_differenceEmpty updates_differenceEmpty = 1;
    TL_updates_difference updates_difference = 2;
    TL_updates_differenceSlice updates_differenceSlice = 3;
    TL_updates_differenceTooLong updates_differenceTooLong = 4;
  }
}

message Updates {
  oneof payload {
    TL_updatesTooLong updatesTooLong = 1;
    TL_updateShortMessage updateShortMessage = 2;
    TL_updateShortChatMessage updateShortChatMessage = 3;
    TL_updateShort updateShort = 4;
    TL_updatesCombined updatesCombined = 5;
    TL_updates updates = 6;
    TL_updateShortSentMessage updateShortSentMessage = 7;
  }
}

message photos_Photos {
  oneof payload {
    TL_photos_photos photos_photos = 1;
    TL_photos_photosSlice photos_photosSlice = 2;
  }
}

message photos_Photo {
  oneof payload {
    TL_photos_photo photos_photo = 1;
  }
}

message upload_File {
  oneof payload {
    TL_upload_file upload_file = 1;
    TL_upload_fileCdnRedirect upload_fileCdnRedirect = 2;
  }
}

message DcOption {
  oneof payload {
    TL_dcOption dcOption = 1;
  }
}

message Config {
  oneof payload {
    TL_config config = 1;
  }
}

message NearestDc {
  oneof payload {
    TL_nearestDc nearestDc = 1;
  }
}

message help_AppUpdate {
  oneof payload {
    TL_help_appUpdate help_appUpdate = 1;
    TL_help_noAppUpdate help_noAppUpdate = 2;
  }
}

message help_InviteText {
  oneof payload {
    TL_help_inviteText help_inviteText = 1;
  }
}

message EncryptedChat {
  oneof payload {
    TL_encryptedChatEmpty encryptedChatEmpty = 1;
    TL_encryptedChatWaiting encryptedChatWaiting = 2;
    TL_encryptedChatRequested encryptedChatRequested = 3;
    TL_encryptedChat encryptedChat = 4;
    TL_encryptedChatDiscarded encryptedChatDiscarded = 5;
  }
}

message InputEncryptedChat {
  oneof payload {
    TL_inputEncryptedChat inputEncryptedChat = 1;
  }
}

message EncryptedFile {
  oneof payload {
    TL_encryptedFileEmpty encryptedFileEmpty = 1;
    TL_encryptedFile encryptedFile = 2;
  }
}

message InputEncryptedFile {
  oneof payload {
    TL_inputEncryptedFileEmpty inputEncryptedFileEmpty = 1;
    TL_inputEncryptedFileUploaded inputEncryptedFileUploaded = 2;
    TL_inputEncryptedFile inputEncryptedFile = 3;
    TL_inputEncryptedFileBigUploaded inputEncryptedFileBigUploaded = 4;
  }
}

message EncryptedMessage {
  oneof payload {
    TL_encryptedMessage encryptedMessage = 1;
    TL_encryptedMessageService encryptedMessageService = 2;
  }
}

message messages_DhConfig {
  oneof payload {
    TL_messages_dhConfigNotModified messages_dhConfigNotModified = 1;
    TL_messages_dhConfig messages_dhConfig = 2;
  }
}

message messages_SentEncryptedMessage {
  oneof payload {
    TL_messages_sentEncryptedMessage messages_sentEncryptedMessage = 1;
    TL_messages_sentEncryptedFile messages_sentEncryptedFile = 2;
  }
}

message InputDocument {
  oneof payload {
    TL_inputDocumentEmpty inputDocumentEmpty = 1;
    TL_inputDocument inputDocument = 2;
  }
}

message Document {
  oneof payload {
    TL_documentEmpty documentEmpty = 1;
    TL_document document = 2;
  }
}

message help_Support {
  oneof payload {
    TL_help_support help_support = 1;
  }
}

message NotifyPeer {
  oneof payload {
    TL_notifyPeer notifyPeer = 1;
    TL_notifyUsers notifyUsers = 2;
    TL_notifyChats notifyChats = 3;
    TL_notifyAll notifyAll = 4;
  }
}

message SendMessageAction {
  oneof payload {
    TL_sendMessageTypingAction sendMessageTypingAction = 1;
    TL_sendMessageCancelAction sendMessageCancelAction = 2;
    TL_sendMessageRecordVideoAction sendMessageRecordVideoAction = 3;
    TL_sendMessageUploadVideoAction sendMessageUploadVideoAction = 4;
    TL_sendMessageRecordAudioAction sendMessageRecordAudioAction = 5;
    TL_sendMessageUploadAudioAction sendMessageUploadAudioAction = 6;
    TL_sendMessageUploadPhotoAction sendMessageUploadPhotoAction = 7;
    TL_sendMessageUploadDocumentAction sendMessageUploadDocumentAction = 8;
    TL_sendMessageGeoLocationAction sendMessageGeoLocationAction = 9;
    TL_sendMessageChooseContactAction sendMessageChooseContactAction = 10;
    TL_sendMessageGamePlayAction sendMessageGamePlayAction = 11;
    TL_sendMessageRecordRoundAction sendMessageRecordRoundAction = 12;
    TL_sendMessageUploadRoundAction sendMessageUploadRoundAction = 13;
  }
}

message contacts_Found {
  oneof payload {
    TL_contacts_found contacts_found = 1;
  }
}

message InputPrivacyKey {
  oneof payload {
    TL_inputPrivacyKeyStatusTimestamp inputPrivacyKeyStatusTimestamp = 1;
    TL_inputPrivacyKeyChatInvite inputPrivacyKeyChatInvite = 2;
    TL_inputPrivacyKeyPhoneCall inputPrivacyKeyPhoneCall = 3;
  }
}

message PrivacyKey {
  oneof payload {
    TL_privacyKeyStatusTimestamp privacyKeyStatusTimestamp = 1;
    TL_privacyKeyChatInvite privacyKeyChatInvite = 2;
    TL_privacyKeyPhoneCall privacyKeyPhoneCall = 3;
  }
}

message InputPrivacyRule {
  oneof payload {
    TL_inputPrivacyValueAllowContacts inputPrivacyValueAllowContacts = 1;
    TL_inputPrivacyValueAllowAll inputPrivacyValueAllowAll = 2;
    TL_inputPrivacyValueAllowUsers inputPrivacyValueAllowUsers = 3;
    TL_inputPrivacyValueDisallowContacts inputPrivacyValueDisallowContacts = 4;
    TL_inputPrivacyValueDisallowAll inputPrivacyValueDisallowAll = 5;
    TL_inputPrivacyValueDisallowUsers inputPrivacyValueDisallowUsers = 6;
  }
}

message PrivacyRule {
  oneof payload {
    TL_privacyValueAllowContacts privacyValueAllowContacts = 1;
    TL_privacyValueAllowAll privacyValueAllowAll = 2;
    TL_privacyValueAllowUsers privacyValueAllowUsers = 3;
    TL_privacyValueDisallowContacts privacyValueDisallowContacts = 4;
    TL_privacyValueDisallowAll privacyValueDisallowAll = 5;
    TL_privacyValueDisallowUsers privacyValueDisallowUsers = 6;
  }
}

message account_PrivacyRules {
  oneof payload {
    TL_account_privacyRules account_privacyRules = 1;
  }
}

message AccountDaysTTL {
  oneof payload {
    TL_accountDaysTTL accountDaysTTL = 1;
  }
}

message DocumentAttribute {
  oneof payload {
    TL_documentAttributeImageSize documentAttributeImageSize = 1;
    TL_documentAttributeAnimated documentAttributeAnimated = 2;
    TL_documentAttributeSticker documentAttributeSticker = 3;
    TL_documentAttributeVideo documentAttributeVideo = 4;
    TL_documentAttributeAudio documentAttributeAudio = 5;
    TL_documentAttributeFilename documentAttributeFilename = 6;
    TL_documentAttributeHasStickers documentAttributeHasStickers = 7;
  }
}

message messages_Stickers {
  oneof payload {
    TL_messages_stickersNotModified messages_stickersNotModified = 1;
    TL_messages_stickers messages_stickers = 2;
  }
}

message StickerPack {
  oneof payload {
    TL_stickerPack stickerPack = 1;
  }
}

message messages_AllStickers {
  oneof payload {
    TL_messages_allStickersNotModified messages_allStickersNotModified = 1;
    TL_messages_allStickers messages_allStickers = 2;
  }
}

message DisabledFeature {
  oneof payload {
    TL_disabledFeature disabledFeature = 1;
  }
}

message messages_AffectedMessages {
  oneof payload {
    TL_messages_affectedMessages messages_affectedMessages = 1;
  }
}

message ContactLink {
  oneof payload {
    TL_contactLinkUnknown contactLinkUnknown = 1;
    TL_contactLinkNone contactLinkNone = 2;
    TL_contactLinkHasPhone contactLinkHasPhone = 3;
    TL_contactLinkContact contactLinkContact = 4;
  }
}

message WebPage {
  oneof payload {
    TL_webPageEmpty webPageEmpty = 1;
    TL_webPagePending webPagePending = 2;
    TL_webPage webPage = 3;
    TL_webPageNotModified webPageNotModified = 4;
  }
}

message Authorization {
  oneof payload {
    TL_authorization authorization = 1;
  }
}

message account_Authorizations {
  oneof payload {
    TL_account_authorizations account_authorizations = 1;
  }
}

message account_Password {
  oneof payload {
    TL_account_noPassword account_noPassword = 1;
    TL_account_password account_password = 2;
  }
}

message account_PasswordSettings {
  oneof payload {
    TL_account_passwordSettings account_passwordSettings = 1;
  }
}

message account_PasswordInputSettings {
  oneof payload {
    TL_account_passwordInputSettings account_passwordInputSettings = 1;
  }
}

message auth_PasswordRecovery {
  oneof payload {
    TL_auth_passwordRecovery auth_passwordRecovery = 1;
  }
}

message ReceivedNotifyMessage {
  oneof payload {
    TL_receivedNotifyMessage receivedNotifyMessage = 1;
  }
}

message ExportedChatInvite {
  oneof payload {
    TL_chatInviteEmpty chatInviteEmpty = 1;
    TL_chatInviteExported chatInviteExported = 2;
  }
}

message ChatInvite {
  oneof payload {
    TL_chatInviteAlready chatInviteAlready = 1;
    TL_chatInvite chatInvite = 2;
  }
}

message InputStickerSet {
  oneof payload {
    TL_inputStickerSetEmpty inputStickerSetEmpty = 1;
    TL_inputStickerSetID inputStickerSetID = 2;
    TL_inputStickerSetShortName inputStickerSetShortName = 3;
  }
}

message StickerSet {
  oneof payload {
    TL_stickerSet stickerSet = 1;
  }
}

message messages_StickerSet {
  oneof payload {
    TL_messages_stickerSet messages_stickerSet = 1;
  }
}

message BotCommand {
  oneof payload {
    TL_botCommand botCommand = 1;
  }
}

message BotInfo {
  oneof payload {
    TL_botInfo botInfo = 1;
  }
}

message KeyboardButton {
  oneof payload {
    TL_keyboardButton keyboardButton = 1;
    TL_keyboardButtonUrl keyboardButtonUrl = 2;
    TL_keyboardButtonCallback keyboardButtonCallback = 3;
    TL_keyboardButtonRequestPhone keyboardButtonRequestPhone = 4;
    TL_keyboardButtonRequestGeoLocation keyboardButtonRequestGeoLocation = 5;
    TL_keyboardButtonSwitchInline keyboardButtonSwitchInline = 6;
    TL_keyboardButtonGame keyboardButtonGame = 7;
    TL_keyboardButtonBuy keyboardButtonBuy = 8;
  }
}

message KeyboardButtonRow {
  oneof payload {
    TL_keyboardButtonRow keyboardButtonRow = 1;
  }
}

message ReplyMarkup {
  oneof payload {
    TL_replyKeyboardHide replyKeyboardHide = 1;
    TL_replyKeyboardForceReply replyKeyboardForceReply = 2;
    TL_replyKeyboardMarkup replyKeyboardMarkup = 3;
    TL_replyInlineMarkup replyInlineMarkup = 4;
  }
}

message MessageEntity {
  oneof payload {
    TL_messageEntityUnknown messageEntityUnknown = 1;
    TL_messageEntityMention messageEntityMention = 2;
    TL_messageEntityHashtag messageEntityHashtag = 3;
    TL_messageEntityBotCommand messageEntityBotCommand = 4;
    TL_messageEntityUrl messageEntityUrl = 5;
    TL_messageEntityEmail messageEntityEmail = 6;
    TL_messageEntityBold messageEntityBold = 7;
    TL_messageEntityItalic messageEntityItalic = 8;
    TL_messageEntityCode messageEntityCode = 9;
    TL_messageEntityPre messageEntityPre = 10;
    TL_messageEntityTextUrl messageEntityTextUrl = 11;
    TL_messageEntityMentionName messageEntityMentionName = 12;
    TL_inputMessageEntityMentionName inputMessageEntityMentionName = 13;
  }
}

message InputChannel {
  oneof payload {
    TL_inputChannelEmpty inputChannelEmpty = 1;
    TL_inputChannel inputChannel = 2;
  }
}

message contacts_ResolvedPeer {
  oneof payload {
    TL_contacts_resolvedPeer contacts_resolvedPeer = 1;
  }
}

message MessageRange {
  oneof payload {
    TL_messageRange messageRange = 1;
  }
}

message updates_ChannelDifference {
  oneof payload {
    TL_updates_channelDifferenceEmpty updates_channelDifferenceEmpty = 1;
    TL_updates_channelDifferenceTooLong updates_channelDifferenceTooLong = 2;
    TL_updates_channelDifference updates_channelDifference = 3;
  }
}

message ChannelMessagesFilter {
  oneof payload {
    TL_channelMessagesFilterEmpty channelMessagesFilterEmpty = 1;
    TL_channelMessagesFilter channelMessagesFilter = 2;
  }
}

message ChannelParticipant {
  oneof payload {
    TL_channelParticipant channelParticipant = 1;
    TL_channelParticipantSelf channelParticipantSelf = 2;
    TL_channelParticipantCreator channelParticipantCreator = 3;
    TL_channelParticipantAdmin channelParticipantAdmin = 4;
    TL_channelParticipantBanned channelParticipantBanned = 5;
  }
}

message ChannelParticipantsFilter {
  oneof payload {
    TL_channelParticipantsRecent channelParticipantsRecent = 1;
    TL_channelParticipantsAdmins channelParticipantsAdmins = 2;
    TL_channelParticipantsKicked channelParticipantsKicked = 3;
    TL_channelParticipantsBots channelParticipantsBots = 4;
    TL_channelParticipantsBanned channelParticipantsBanned = 5;
    TL_channelParticipantsSearch channelParticipantsSearch = 6;
  }
}

message channels_ChannelParticipants {
  oneof payload {
    TL_channels_channelParticipants channels_channelParticipants = 1;
  }
}

message channels_ChannelParticipant {
  oneof payload {
    TL_channels_channelParticipant channels_channelParticipant = 1;
  }
}

message help_TermsOfService {
  oneof payload {
    TL_help_termsOfService help_termsOfService = 1;
  }
}

message FoundGif {
  oneof payload {
    TL_foundGif foundGif = 1;
    TL_foundGifCached foundGifCached = 2;
  }
}

message messages_FoundGifs {
  oneof payload {
    TL_messages_foundGifs messages_foundGifs = 1;
  }
}

message messages_SavedGifs {
  oneof payload {
    TL_messages_savedGifsNotModified messages_savedGifsNotModified = 1;
    TL_messages_savedGifs messages_savedGifs = 2;
  }
}

message InputBotInlineMessage {
  oneof payload {
    TL_inputBotInlineMessageMediaAuto inputBotInlineMessageMediaAuto = 1;
    TL_inputBotInlineMessageText inputBotInlineMessageText = 2;
    TL_inputBotInlineMessageMediaGeo inputBotInlineMessageMediaGeo = 3;
    TL_inputBotInlineMessageMediaVenue inputBotInlineMessageMediaVenue = 4;
    TL_inputBotInlineMessageMediaContact inputBotInlineMessageMediaContact = 5;
    TL_inputBotInlineMessageGame inputBotInlineMessageGame = 6;
  }
}

message InputBotInlineResult {
  oneof payload {
    TL_inputBotInlineResult inputBotInlineResult = 1;
    TL_inputBotInlineResultPhoto inputBotInlineResultPhoto = 2;
    TL_inputBotInlineResultDocument inputBotInlineResultDocument = 3;
    TL_inputBotInlineResultGame inputBotInlineResultGame = 4;
  }
}

message BotInlineMessage {
  oneof payload {
    TL_botInlineMessageMediaAuto botInlineMessageMediaAuto = 1;
    TL_botInlineMessageText botInlineMessageText = 2;
    TL_botInlineMessageMediaGeo botInlineMessageMediaGeo = 3;
    TL_botInlineMessageMediaVenue botInlineMessageMediaVenue = 4;
    TL_botInlineMessageMediaContact botInlineMessageMediaContact = 5;
  }
}

message BotInlineResult {
  oneof payload {
    TL_botInlineResult botInlineResult = 1;
    TL_botInlineMediaResult botInlineMediaResult = 2;
  }
}

message messages_BotResults {
  oneof payload {
    TL_messages_botResults messages_botResults = 1;
  }
}

message ExportedMessageLink {
  oneof payload {
    TL_exportedMessageLink exportedMessageLink = 1;
  }
}

message MessageFwdHeader {
  oneof payload {
    TL_messageFwdHeader messageFwdHeader = 1;
  }
}

message auth_CodeType {
  oneof payload {
    TL_auth_codeTypeSms auth_codeTypeSms = 1;
    TL_auth_codeTypeCall auth_codeTypeCall = 2;
    TL_auth_codeTypeFlashCall auth_codeTypeFlashCall = 3;
  }
}

message auth_SentCodeType {
  oneof payload {
    TL_auth_sentCodeTypeApp auth_sentCodeTypeApp = 1;
    TL_auth_sentCodeTypeSms auth_sentCodeTypeSms = 2;
    TL_auth_sentCodeTypeCall auth_sentCodeTypeCall = 3;
    TL_auth_sentCodeTypeFlashCall auth_sentCodeTypeFlashCall = 4;
  }
}

message messages_BotCallbackAnswer {
  oneof payload {
    TL_messages_botCallbackAnswer messages_botCallbackAnswer = 1;
  }
}

message messages_MessageEditData {
  oneof payload {
    TL_messages_messageEditData messages_messageEditData = 1;
  }
}

message InputBotInlineMessageID {
  oneof payload {
    TL_inputBotInlineMessageID inputBotInlineMessageID = 1;
  }
}

message InlineBotSwitchPM {
  oneof payload {
    TL_inlineBotSwitchPM inlineBotSwitchPM = 1;
  }
}

message messages_PeerDialogs {
  oneof payload {
    TL_messages_peerDialogs messages_peerDialogs = 1;
  }
}

message TopPeer {
  oneof payload {
    TL_topPeer topPeer = 1;
  }
}

message TopPeerCategory {
  oneof payload {
    TL_topPeerCategoryBotsPM topPeerCategoryBotsPM = 1;
    TL_topPeerCategoryBotsInline topPeerCategoryBotsInline = 2;
    TL_topPeerCategoryCorrespondents topPeerCategoryCorrespondents = 3;
    TL_topPeerCategoryGroups topPeerCategoryGroups = 4;
    TL_topPeerCategoryChannels topPeerCategoryChannels = 5;
    TL_topPeerCategoryPhoneCalls topPeerCategoryPhoneCalls = 6;
  }
}

message TopPeerCategoryPeers {
  oneof payload {
    TL_topPeerCategoryPeers topPeerCategoryPeers = 1;
  }
}

message contacts_TopPeers {
  oneof payload {
    TL_contacts_topPeersNotModified contacts_topPeersNotModified = 1;
    TL_contacts_topPeers contacts_topPeers = 2;
  }
}

message DraftMessage {
  oneof payload {
    TL_draftMessageEmpty draftMessageEmpty = 1;
    TL_draftMessage draftMessage = 2;
  }
}

message messages_FeaturedStickers {
  oneof payload {
    TL_messages_featuredStickersNotModified messages_featuredStickersNotModified = 1;
    TL_messages_featuredStickers messages_featuredStickers = 2;
  }
}

message messages_RecentStickers {
  oneof payload {
    TL_messages_recentStickersNotModified messages_recentStickersNotModified = 1;
    TL_messages_recentStickers messages_recentStickers = 2;
  }
}

message messages_ArchivedStickers {
  oneof payload {
    TL_messages_archivedStickers messages_archivedStickers = 1;
  }
}

message messages_StickerSetInstallResult {
  oneof payload {
    TL_messages_stickerSetInstallResultSuccess messages_stickerSetInstallResultSuccess = 1;
    TL_messages_stickerSetInstallResultArchive messages_stickerSetInstallResultArchive = 2;
  }
}

message StickerSetCovered {
  oneof payload {
    TL_stickerSetCovered stickerSetCovered = 1;
    TL_stickerSetMultiCovered stickerSetMultiCovered = 2;
  }
}

message MaskCoords {
  oneof payload {
    TL_maskCoords maskCoords = 1;
  }
}

message InputStickeredMedia {
  oneof payload {
    TL_inputStickeredMediaPhoto inputStickeredMediaPhoto = 1;
    TL_inputStickeredMediaDocument inputStickeredMediaDocument = 2;
  }
}

message Game {
  oneof payload {
    TL_game game = 1;
  }
}

message InputGame {
  oneof payload {
    TL_inputGameID inputGameID = 1;
    TL_inputGameShortName inputGameShortName = 2;
  }
}

message HighScore {
  oneof payload {
    TL_highScore highScore = 1;
  }
}

message messages_HighScores {
  oneof payload {
    TL_messages_highScores messages_highScores = 1;
  }
}

message RichText {
  oneof payload {
    TL_textEmpty textEmpty = 1;
    TL_textPlain textPlain = 2;
    TL_textBold textBold = 3;
    TL_textItalic textItalic = 4;
    TL_textUnderline textUnderline = 5;
    TL_textStrike textStrike = 6;
    TL_textFixed textFixed = 7;
    TL_textUrl textUrl = 8;
    TL_textEmail textEmail = 9;
    TL_textConcat textConcat = 10;
  }
}

message PageBlock {
  oneof payload {
    TL_pageBlockUnsupported pageBlockUnsupported = 1;
    TL_pageBlockTitle pageBlockTitle = 2;
    TL_pageBlockSubtitle pageBlockSubtitle = 3;
    TL_pageBlockAuthorDate pageBlockAuthorDate = 4;
    TL_pageBlockHeader pageBlockHeader = 5;
    TL_pageBlockSubheader pageBlockSubheader = 6;
    TL_pageBlockParagraph pageBlockParagraph = 7;
    TL_pageBlockPreformatted pageBlockPreformatted = 8;
    TL_pageBlockFooter pageBlockFooter = 9;
    TL_pageBlockDivider pageBlockDivider = 10;
    TL_pageBlockAnchor pageBlockAnchor = 11;
    TL_pageBlockList pageBlockList = 12;
    TL_pageBlockBlockquote pageBlockBlockquote = 13;
    TL_pageBlockPullquote pageBlockPullquote = 14;
    TL_pageBlockPhoto pageBlockPhoto = 15;
    TL_pageBlockVideo pageBlockVideo = 16;
    TL_pageBlockCover pageBlockCover = 17;
    TL_pageBlockEmbed pageBlockEmbed = 18;
    TL_pageBlockEmbedPost pageBlockEmbedPost = 19;
    TL_pageBlockCollage pageBlockCollage = 20;
    TL_pageBlockSlideshow pageBlockSlideshow = 21;
    TL_pageBlockChannel pageBlockChannel = 22;
    TL_pageBlockAudio pageBlockAudio = 23;
  }
}

message Page {
  oneof payload {
    TL_pagePart pagePart = 1;
    TL_pageFull pageFull = 2;
  }
}

message PhoneCallDiscardReason {
  oneof payload {
    TL_phoneCallDiscardReasonMissed phoneCallDiscardReasonMissed = 1;
    TL_phoneCallDiscardReasonDisconnect phoneCallDiscardReasonDisconnect = 2;
    TL_phoneCallDiscardReasonHangup phoneCallDiscardReasonHangup = 3;
    TL_phoneCallDiscardReasonBusy phoneCallDiscardReasonBusy = 4;
  }
}

message DataJSON {
  oneof payload {
    TL_dataJSON dataJSON = 1;
  }
}

message LabeledPrice {
  oneof payload {
    TL_labeledPrice labeledPrice = 1;
  }
}

message Invoice {
  oneof payload {
    TL_invoice invoice = 1;
  }
}

message PaymentCharge {
  oneof payload {
    TL_paymentCharge paymentCharge = 1;
  }
}

message PostAddress {
  oneof payload {
    TL_postAddress postAddress = 1;
  }
}

message PaymentRequestedInfo {
  oneof payload {
    TL_paymentRequestedInfo paymentRequestedInfo = 1;
  }
}

message PaymentSavedCredentials {
  oneof payload {
    TL_paymentSavedCredentialsCard paymentSavedCredentialsCard = 1;
  }
}

message WebDocument {
  oneof payload {
    TL_webDocument webDocument = 1;
  }
}

message InputWebDocument {
  oneof payload {
    TL_inputWebDocument inputWebDocument = 1;
  }
}

message InputWebFileLocation {
  oneof payload {
    TL_inputWebFileLocation inputWebFileLocation = 1;
  }
}

message upload_WebFile {
  oneof payload {
    TL_upload_webFile upload_webFile = 1;
  }
}

message payments_PaymentForm {
  oneof payload {
    TL_payments_paymentForm payments_paymentForm = 1;
  }
}

message payments_ValidatedRequestedInfo {
  oneof payload {
    TL_payments_validatedRequestedInfo payments_validatedRequestedInfo = 1;
  }
}

message payments_PaymentResult {
  oneof payload {
    TL_payments_paymentResult payments_paymentResult = 1;
    TL_payments_paymentVerficationNeeded payments_paymentVerficationNeeded = 2;
  }
}

message payments_PaymentReceipt {
  oneof payload {
    TL_payments_paymentReceipt payments_paymentReceipt = 1;
  }
}

message payments_SavedInfo {
  oneof payload {
    TL_payments_savedInfo payments_savedInfo = 1;
  }
}

message InputPaymentCredentials {
  oneof payload {
    TL_inputPaymentCredentialsSaved inputPaymentCredentialsSaved = 1;
    TL_inputPaymentCredentials inputPaymentCredentials = 2;
  }
}

message account_TmpPassword {
  oneof payload {
    TL_account_tmpPassword account_tmpPassword = 1;
  }
}

message ShippingOption {
  oneof payload {
    TL_shippingOption shippingOption = 1;
  }
}

message InputStickerSetItem {
  oneof payload {
    TL_inputStickerSetItem inputStickerSetItem = 1;
  }
}

message InputPhoneCall {
  oneof payload {
    TL_inputPhoneCall inputPhoneCall = 1;
  }
}

message PhoneCall {
  oneof payload {
    TL_phoneCallEmpty phoneCallEmpty = 1;
    TL_phoneCallWaiting phoneCallWaiting = 2;
    TL_phoneCallRequested phoneCallRequested = 3;
    TL_phoneCallAccepted phoneCallAccepted = 4;
    TL_phoneCall phoneCall = 5;
    TL_phoneCallDiscarded phoneCallDiscarded = 6;
  }
}

message PhoneConnection {
  oneof payload {
    TL_phoneConnection phoneConnection = 1;
  }
}

message PhoneCallProtocol {
  oneof payload {
    TL_phoneCallProtocol phoneCallProtocol = 1;
  }
}

message phone_PhoneCall {
  oneof payload {
    TL_phone_phoneCall phone_phoneCall = 1;
  }
}

message upload_CdnFile {
  oneof payload {
    TL_upload_cdnFileReuploadNeeded upload_cdnFileReuploadNeeded = 1;
    TL_upload_cdnFile upload_cdnFile = 2;
  }
}

message CdnPublicKey {
  oneof payload {
    TL_cdnPublicKey cdnPublicKey = 1;
  }
}

message CdnConfig {
  oneof payload {
    TL_cdnConfig cdnConfig = 1;
  }
}

message LangPackString {
  oneof payload {
    TL_langPackString langPackString = 1;
    TL_langPackStringPluralized langPackStringPluralized = 2;
    TL_langPackStringDeleted langPackStringDeleted = 3;
  }
}

message LangPackDifference {
  oneof payload {
    TL_langPackDifference langPackDifference = 1;
  }
}

message LangPackLanguage {
  oneof payload {
    TL_langPackLanguage langPackLanguage = 1;
  }
}

message ChannelAdminRights {
  oneof payload {
    TL_channelAdminRights channelAdminRights = 1;
  }
}

message ChannelBannedRights {
  oneof payload {
    TL_channelBannedRights channelBannedRights = 1;
  }
}

message ChannelAdminLogEventAction {
  oneof payload {
    TL_channelAdminLogEventActionChangeTitle channelAdminLogEventActionChangeTitle = 1;
    TL_channelAdminLogEventActionChangeAbout channelAdminLogEventActionChangeAbout = 2;
    TL_channelAdminLogEventActionChangeUsername channelAdminLogEventActionChangeUsername = 3;
    TL_channelAdminLogEventActionChangePhoto channelAdminLogEventActionChangePhoto = 4;
    TL_channelAdminLogEventActionToggleInvites channelAdminLogEventActionToggleInvites = 5;
    TL_channelAdminLogEventActionToggleSignatures channelAdminLogEventActionToggleSignatures = 6;
    TL_channelAdminLogEventActionUpdatePinned channelAdminLogEventActionUpdatePinned = 7;
    TL_channelAdminLogEventActionEditMessage channelAdminLogEventActionEditMessage = 8;
    TL_channelAdminLogEventActionDeleteMessage channelAdminLogEventActionDeleteMessage = 9;
    TL_channelAdminLogEventActionParticipantJoin channelAdminLogEventActionParticipantJoin = 10;
    TL_channelAdminLogEventActionParticipantLeave channelAdminLogEventActionParticipantLeave = 11;
    TL_channelAdminLogEventActionParticipantInvite channelAdminLogEventActionParticipantInvite = 12;
    TL_channelAdminLogEventActionParticipantToggleBan channelAdminLogEventActionParticipantToggleBan = 13;
    TL_channelAdminLogEventActionParticipantToggleAdmin channelAdminLogEventActionParticipantToggleAdmin = 14;
    TL_channelAdminLogEventActionChangeStickerSet channelAdminLogEventActionChangeStickerSet = 15;
  }
}

message ChannelAdminLogEvent {
  oneof payload {
    TL_channelAdminLogEvent channelAdminLogEvent = 1;
  }
}

message channels_AdminLogResults {
  oneof payload {
    TL_channels_adminLogResults channels_adminLogResults = 1;
  }
}

message ChannelAdminLogEventsFilter {
  oneof payload {
    TL_channelAdminLogEventsFilter channelAdminLogEventsFilter = 1;
  }
}

message PopularContact {
  oneof payload {
    TL_popularContact popularContact = 1;
  }
}

message CdnFileHash {
  oneof payload {
    TL_cdnFileHash cdnFileHash = 1;
  }
}

message messages_FavedStickers {
  oneof payload {
    TL_messages_favedStickersNotModified messages_favedStickersNotModified = 1;
    TL_messages_favedStickers messages_favedStickers = 2;
  }
}



// inputPeerEmpty#7f3b18ea = InputPeer;
message TL_inputPeerEmpty {
}

// inputPeerSelf#7da07ec9 = InputPeer;
message TL_inputPeerSelf {
}

// inputPeerChat#179be863 chat_id:int = InputPeer;
message TL_inputPeerChat {
  int32 chat_id = 1;
}

// inputPeerUser#7b8e7de6 user_id:int access_hash:long = InputPeer;
message TL_inputPeerUser {
  int32 user_id = 1;
  int64 access_hash = 2;
}

// inputPeerChannel#20adaef8 channel_id:int access_hash:long = InputPeer;
message TL_inputPeerChannel {
  int32 channel_id = 1;
  int64 access_hash = 2;
}

// inputUserEmpty#b98886cf = InputUser;
message TL_inputUserEmpty {
}

// inputUserSelf#f7c1b13f = InputUser;
message TL_inputUserSelf {
}

// inputUser#d8292816 user_id:int access_hash:long = InputUser;
message TL_inputUser {
  int32 user_id = 1;
  int64 access_hash = 2;
}

// inputPhoneContact#f392b7f4 client_id:long phone:string first_name:string last_name:string = InputContact;
message TL_inputPhoneContact {
  int64 client_id = 1;
  string phone = 2;
  string first_name = 3;
  string last_name = 4;
}

// inputFile#f52ff27f id:long parts:int name:string md5_checksum:string = InputFile;
message TL_inputFile {
  int64 id = 1;
  int32 parts = 2;
  string name = 3;
  string md5_checksum = 4;
}

// inputFileBig#fa4f0bb5 id:long parts:int name:string = InputFile;
message TL_inputFileBig {
  int64 id = 1;
  int32 parts = 2;
  string name = 3;
}

// inputMediaEmpty#9664f57f = InputMedia;
message TL_inputMediaEmpty {
}

// inputMediaUploadedPhoto#2f37e231 flags:# file:InputFile caption:string stickers:flags.0?Vector<InputDocument> ttl_seconds:flags.1?int = InputMedia;
message TL_inputMediaUploadedPhoto {
  InputFile file = 1;
  string caption = 2;
  repeated InputDocument stickers = 3;
  int32 ttl_seconds = 4;
}

// inputMediaPhoto#81fa373a flags:# id:InputPhoto caption:string ttl_seconds:flags.0?int = InputMedia;
message TL_inputMediaPhoto {
  InputPhoto id = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// inputMediaGeoPoint#f9c44144 geo_point:InputGeoPoint = InputMedia;
message TL_inputMediaGeoPoint {
  InputGeoPoint geo_point = 1;
}

// inputMediaContact#a6e45987 phone_number:string first_name:string last_name:string = InputMedia;
message TL_inputMediaContact {
  string phone_number = 1;
  string first_name = 2;
  string last_name = 3;
}

// inputMediaUploadedDocument#e39621fd flags:# file:InputFile thumb:flags.2?InputFile mime_type:string attributes:Vector<DocumentAttribute> caption:string stickers:flags.0?Vector<InputDocument> ttl_seconds:flags.1?int = InputMedia;
message TL_inputMediaUploadedDocument {
  InputFile file = 1;
  InputFile thumb = 2;
  string mime_type = 3;
  repeated DocumentAttribute attributes = 4;
  string caption = 5;
  repeated InputDocument stickers = 6;
  int32 ttl_seconds = 7;
}

// inputMediaDocument#5acb668e flags:# id:InputDocument caption:string ttl_seconds:flags.0?int = InputMedia;
message TL_inputMediaDocument {
  InputDocument id = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// inputMediaVenue#2827a81a geo_point:InputGeoPoint title:string address:string provider:string venue_id:string = InputMedia;
message TL_inputMediaVenue {
  InputGeoPoint geo_point = 1;
  string title = 2;
  string address = 3;
  string provider = 4;
  string venue_id = 5;
}

// inputMediaGifExternal#4843b0fd url:string q:string = InputMedia;
message TL_inputMediaGifExternal {
  string url = 1;
  string q = 2;
}

// inputMediaPhotoExternal#922aec1 flags:# url:string caption:string ttl_seconds:flags.0?int = InputMedia;
message TL_inputMediaPhotoExternal {
  string url = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// inputMediaDocumentExternal#b6f74335 flags:# url:string caption:string ttl_seconds:flags.0?int = InputMedia;
message TL_inputMediaDocumentExternal {
  string url = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// inputMediaGame#d33f43f3 id:InputGame = InputMedia;
message TL_inputMediaGame {
  InputGame id = 1;
}

// inputMediaInvoice#92153685 flags:# title:string description:string photo:flags.0?InputWebDocument invoice:Invoice payload:bytes provider:string start_param:string = InputMedia;
message TL_inputMediaInvoice {
  string title = 1;
  string description = 2;
  InputWebDocument photo = 3;
  Invoice invoice = 4;
  bytes payload = 5;
  string provider = 6;
  string start_param = 7;
}

// inputChatPhotoEmpty#1ca48f57 = InputChatPhoto;
message TL_inputChatPhotoEmpty {
}

// inputChatUploadedPhoto#927c55b4 file:InputFile = InputChatPhoto;
message TL_inputChatUploadedPhoto {
  InputFile file = 1;
}

// inputChatPhoto#8953ad37 id:InputPhoto = InputChatPhoto;
message TL_inputChatPhoto {
  InputPhoto id = 1;
}

// inputGeoPointEmpty#e4c123d6 = InputGeoPoint;
message TL_inputGeoPointEmpty {
}

// inputGeoPoint#f3b7acc9 lat:double long:double = InputGeoPoint;
message TL_inputGeoPoint {
  double lat = 1;
  double long = 2;
}

// inputPhotoEmpty#1cd7bf0d = InputPhoto;
message TL_inputPhotoEmpty {
}

// inputPhoto#fb95c6c4 id:long access_hash:long = InputPhoto;
message TL_inputPhoto {
  int64 id = 1;
  int64 access_hash = 2;
}

// inputFileLocation#14637196 volume_id:long local_id:int secret:long = InputFileLocation;
message TL_inputFileLocation {
  int64 volume_id = 1;
  int32 local_id = 2;
  int64 secret = 3;
}

// inputEncryptedFileLocation#f5235d55 id:long access_hash:long = InputFileLocation;
message TL_inputEncryptedFileLocation {
  int64 id = 1;
  int64 access_hash = 2;
}

// inputDocumentFileLocation#430f0724 id:long access_hash:long version:int = InputFileLocation;
message TL_inputDocumentFileLocation {
  int64 id = 1;
  int64 access_hash = 2;
  int32 version = 3;
}

// inputAppEvent#770656a8 time:double type:string peer:long data:string = InputAppEvent;
message TL_inputAppEvent {
  double time = 1;
  string type = 2;
  int64 peer = 3;
  string data = 4;
}

// peerUser#9db1bc6d user_id:int = Peer;
message TL_peerUser {
  int32 user_id = 1;
}

// peerChat#bad0e5bb chat_id:int = Peer;
message TL_peerChat {
  int32 chat_id = 1;
}

// peerChannel#bddde532 channel_id:int = Peer;
message TL_peerChannel {
  int32 channel_id = 1;
}

// storage.fileUnknown#aa963b05 = storage.FileType;
message TL_storage_fileUnknown {
}

// storage.filePartial#40bc6f52 = storage.FileType;
message TL_storage_filePartial {
}

// storage.fileJpeg#7efe0e = storage.FileType;
message TL_storage_fileJpeg {
}

// storage.fileGif#cae1aadf = storage.FileType;
message TL_storage_fileGif {
}

// storage.filePng#a4f63c0 = storage.FileType;
message TL_storage_filePng {
}

// storage.filePdf#ae1e508d = storage.FileType;
message TL_storage_filePdf {
}

// storage.fileMp3#528a0677 = storage.FileType;
message TL_storage_fileMp3 {
}

// storage.fileMov#4b09ebbc = storage.FileType;
message TL_storage_fileMov {
}

// storage.fileMp4#b3cea0e4 = storage.FileType;
message TL_storage_fileMp4 {
}

// storage.fileWebp#1081464c = storage.FileType;
message TL_storage_fileWebp {
}

// fileLocationUnavailable#7c596b46 volume_id:long local_id:int secret:long = FileLocation;
message TL_fileLocationUnavailable {
  int64 volume_id = 1;
  int32 local_id = 2;
  int64 secret = 3;
}

// fileLocation#53d69076 dc_id:int volume_id:long local_id:int secret:long = FileLocation;
message TL_fileLocation {
  int32 dc_id = 1;
  int64 volume_id = 2;
  int32 local_id = 3;
  int64 secret = 4;
}

// userEmpty#200250ba id:int = User;
message TL_userEmpty {
  int32 id = 1;
}

// user#2e13f4c3 flags:# self:flags.10?true contact:flags.11?true mutual_contact:flags.12?true deleted:flags.13?true bot:flags.14?true bot_chat_history:flags.15?true bot_nochats:flags.16?true verified:flags.17?true restricted:flags.18?true min:flags.20?true bot_inline_geo:flags.21?true id:int access_hash:flags.0?long first_name:flags.1?string last_name:flags.2?string username:flags.3?string phone:flags.4?string photo:flags.5?UserProfilePhoto status:flags.6?UserStatus bot_info_version:flags.14?int restriction_reason:flags.18?string bot_inline_placeholder:flags.19?string lang_code:flags.22?string = User;
message TL_user {
  bool self = 1;
  bool contact = 2;
  bool mutual_contact = 3;
  bool deleted = 4;
  bool bot = 5;
  bool bot_chat_history = 6;
  bool bot_nochats = 7;
  bool verified = 8;
  bool restricted = 9;
  bool min = 10;
  bool bot_inline_geo = 11;
  int32 id = 12;
  int64 access_hash = 13;
  string first_name = 14;
  string last_name = 15;
  string username = 16;
  string phone = 17;
  UserProfilePhoto photo = 18;
  UserStatus status = 19;
  int32 bot_info_version = 20;
  string restriction_reason = 21;
  string bot_inline_placeholder = 22;
  string lang_code = 23;
}

// userProfilePhotoEmpty#4f11bae1 = UserProfilePhoto;
message TL_userProfilePhotoEmpty {
}

// userProfilePhoto#d559d8c8 photo_id:long photo_small:FileLocation photo_big:FileLocation = UserProfilePhoto;
message TL_userProfilePhoto {
  int64 photo_id = 1;
  FileLocation photo_small = 2;
  FileLocation photo_big = 3;
}

// userStatusEmpty#9d05049 = UserStatus;
message TL_userStatusEmpty {
}

// userStatusOnline#edb93949 expires:int = UserStatus;
message TL_userStatusOnline {
  int32 expires = 1;
}

// userStatusOffline#8c703f was_online:int = UserStatus;
message TL_userStatusOffline {
  int32 was_online = 1;
}

// userStatusRecently#e26f42f1 = UserStatus;
message TL_userStatusRecently {
}

// userStatusLastWeek#7bf09fc = UserStatus;
message TL_userStatusLastWeek {
}

// userStatusLastMonth#77ebc742 = UserStatus;
message TL_userStatusLastMonth {
}

// chatEmpty#9ba2d800 id:int = Chat;
message TL_chatEmpty {
  int32 id = 1;
}

// chat#d91cdd54 flags:# creator:flags.0?true kicked:flags.1?true left:flags.2?true admins_enabled:flags.3?true admin:flags.4?true deactivated:flags.5?true id:int title:string photo:ChatPhoto participants_count:int date:int version:int migrated_to:flags.6?InputChannel = Chat;
message TL_chat {
  bool creator = 1;
  bool kicked = 2;
  bool left = 3;
  bool admins_enabled = 4;
  bool admin = 5;
  bool deactivated = 6;
  int32 id = 7;
  string title = 8;
  ChatPhoto photo = 9;
  int32 participants_count = 10;
  int32 date = 11;
  int32 version = 12;
  InputChannel migrated_to = 13;
}

// chatForbidden#7328bdb id:int title:string = Chat;
message TL_chatForbidden {
  int32 id = 1;
  string title = 2;
}

// channel#cb44b1c flags:# creator:flags.0?true left:flags.2?true editor:flags.3?true broadcast:flags.5?true verified:flags.7?true megagroup:flags.8?true restricted:flags.9?true democracy:flags.10?true signatures:flags.11?true min:flags.12?true id:int access_hash:flags.13?long title:string username:flags.6?string photo:ChatPhoto date:int version:int restriction_reason:flags.9?string admin_rights:flags.14?ChannelAdminRights banned_rights:flags.15?ChannelBannedRights = Chat;
message TL_channel {
  bool creator = 1;
  bool left = 2;
  bool editor = 3;
  bool broadcast = 4;
  bool verified = 5;
  bool megagroup = 6;
  bool restricted = 7;
  bool democracy = 8;
  bool signatures = 9;
  bool min = 10;
  int32 id = 11;
  int64 access_hash = 12;
  string title = 13;
  string username = 14;
  ChatPhoto photo = 15;
  int32 date = 16;
  int32 version = 17;
  string restriction_reason = 18;
  ChannelAdminRights admin_rights = 19;
  ChannelBannedRights banned_rights = 20;
}

// channelForbidden#289da732 flags:# broadcast:flags.5?true megagroup:flags.8?true id:int access_hash:long title:string until_date:flags.16?int = Chat;
message TL_channelForbidden {
  bool broadcast = 1;
  bool megagroup = 2;
  int32 id = 3;
  int64 access_hash = 4;
  string title = 5;
  int32 until_date = 6;
}

// chatFull#2e02a614 id:int participants:ChatParticipants chat_photo:Photo notify_settings:PeerNotifySettings exported_invite:ExportedChatInvite bot_info:Vector<BotInfo> = ChatFull;
message TL_chatFull {
  int32 id = 1;
  ChatParticipants participants = 2;
  Photo chat_photo = 3;
  PeerNotifySettings notify_settings = 4;
  ExportedChatInvite exported_invite = 5;
  repeated BotInfo bot_info = 6;
}

// channelFull#17f45fcf flags:# can_view_participants:flags.3?true can_set_username:flags.6?true can_set_stickers:flags.7?true id:int about:string participants_count:flags.0?int admins_count:flags.1?int kicked_count:flags.2?int banned_count:flags.2?int read_inbox_max_id:int read_outbox_max_id:int unread_count:int chat_photo:Photo notify_settings:PeerNotifySettings exported_invite:ExportedChatInvite bot_info:Vector<BotInfo> migrated_from_chat_id:flags.4?int migrated_from_max_id:flags.4?int pinned_msg_id:flags.5?int stickerset:flags.8?StickerSet = ChatFull;
message TL_channelFull {
  bool can_view_participants = 1;
  bool can_set_username = 2;
  bool can_set_stickers = 3;
  int32 id = 4;
  string about = 5;
  int32 participants_count = 6;
  int32 admins_count = 7;
  int32 kicked_count = 8;
  int32 banned_count = 9;
  int32 read_inbox_max_id = 10;
  int32 read_outbox_max_id = 11;
  int32 unread_count = 12;
  Photo chat_photo = 13;
  PeerNotifySettings notify_settings = 14;
  ExportedChatInvite exported_invite = 15;
  repeated BotInfo bot_info = 16;
  int32 migrated_from_chat_id = 17;
  int32 migrated_from_max_id = 18;
  int32 pinned_msg_id = 19;
  StickerSet stickerset = 20;
}

// chatParticipant#c8d7493e user_id:int inviter_id:int date:int = ChatParticipant;
message TL_chatParticipant {
  int32 user_id = 1;
  int32 inviter_id = 2;
  int32 date = 3;
}

// chatParticipantCreator#da13538a user_id:int = ChatParticipant;
message TL_chatParticipantCreator {
  int32 user_id = 1;
}

// chatParticipantAdmin#e2d6e436 user_id:int inviter_id:int date:int = ChatParticipant;
message TL_chatParticipantAdmin {
  int32 user_id = 1;
  int32 inviter_id = 2;
  int32 date = 3;
}

// chatParticipantsForbidden#fc900c2b flags:# chat_id:int self_participant:flags.0?ChatParticipant = ChatParticipants;
message TL_chatParticipantsForbidden {
  int32 chat_id = 1;
  ChatParticipant self_participant = 2;
}

// chatParticipants#3f460fed chat_id:int participants:Vector<ChatParticipant> version:int = ChatParticipants;
message TL_chatParticipants {
  int32 chat_id = 1;
  repeated ChatParticipant participants = 2;
  int32 version = 3;
}

// chatPhotoEmpty#37c1011c = ChatPhoto;
message TL_chatPhotoEmpty {
}

// chatPhoto#6153276a photo_small:FileLocation photo_big:FileLocation = ChatPhoto;
message TL_chatPhoto {
  FileLocation photo_small = 1;
  FileLocation photo_big = 2;
}

// messageEmpty#83e5de54 id:int = Message;
message TL_messageEmpty {
  int32 id = 1;
}

// message#90dddc11 flags:# out:flags.1?true mentioned:flags.4?true media_unread:flags.5?true silent:flags.13?true post:flags.14?true id:int from_id:flags.8?int to_id:Peer fwd_from:flags.2?MessageFwdHeader via_bot_id:flags.11?int reply_to_msg_id:flags.3?int date:int message:string media:flags.9?MessageMedia reply_markup:flags.6?ReplyMarkup entities:flags.7?Vector<MessageEntity> views:flags.10?int edit_date:flags.15?int post_author:flags.16?string = Message;
message TL_message {
  bool out = 1;
  bool mentioned = 2;
  bool media_unread = 3;
  bool silent = 4;
  bool post = 5;
  int32 id = 6;
  int32 from_id = 7;
  Peer to_id = 8;
  MessageFwdHeader fwd_from = 9;
  int32 via_bot_id = 10;
  int32 reply_to_msg_id = 11;
  int32 date = 12;
  string message = 13;
  MessageMedia media = 14;
  ReplyMarkup reply_markup = 15;
  repeated MessageEntity entities = 16;
  int32 views = 17;
  int32 edit_date = 18;
  string post_author = 19;
}

// messageService#9e19a1f6 flags:# out:flags.1?true mentioned:flags.4?true media_unread:flags.5?true silent:flags.13?true post:flags.14?true id:int from_id:flags.8?int to_id:Peer reply_to_msg_id:flags.3?int date:int action:MessageAction = Message;
message TL_messageService {
  bool out = 1;
  bool mentioned = 2;
  bool media_unread = 3;
  bool silent = 4;
  bool post = 5;
  int32 id = 6;
  int32 from_id = 7;
  Peer to_id = 8;
  int32 reply_to_msg_id = 9;
  int32 date = 10;
  MessageAction action = 11;
}

// messageMediaEmpty#3ded6320 = MessageMedia;
message TL_messageMediaEmpty {
}

// messageMediaPhoto#b5223b0f flags:# photo:flags.0?Photo caption:flags.1?string ttl_seconds:flags.2?int = MessageMedia;
message TL_messageMediaPhoto {
  Photo photo = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// messageMediaGeo#56e0d474 geo:GeoPoint = MessageMedia;
message TL_messageMediaGeo {
  GeoPoint geo = 1;
}

// messageMediaContact#5e7d2f39 phone_number:string first_name:string last_name:string user_id:int = MessageMedia;
message TL_messageMediaContact {
  string phone_number = 1;
  string first_name = 2;
  string last_name = 3;
  int32 user_id = 4;
}

// messageMediaUnsupported#9f84f49e = MessageMedia;
message TL_messageMediaUnsupported {
}

// messageMediaDocument#7c4414d3 flags:# document:flags.0?Document caption:flags.1?string ttl_seconds:flags.2?int = MessageMedia;
message TL_messageMediaDocument {
  Document document = 1;
  string caption = 2;
  int32 ttl_seconds = 3;
}

// messageMediaWebPage#a32dd600 webpage:WebPage = MessageMedia;
message TL_messageMediaWebPage {
  WebPage webpage = 1;
}

// messageMediaVenue#7912b71f geo:GeoPoint title:string address:string provider:string venue_id:string = MessageMedia;
message TL_messageMediaVenue {
  GeoPoint geo = 1;
  string title = 2;
  string address = 3;
  string provider = 4;
  string venue_id = 5;
}

// messageMediaGame#fdb19008 game:Game = MessageMedia;
message TL_messageMediaGame {
  Game game = 1;
}

// messageMediaInvoice#84551347 flags:# shipping_address_requested:flags.1?true test:flags.3?true title:string description:string photo:flags.0?WebDocument receipt_msg_id:flags.2?int currency:string total_amount:long start_param:string = MessageMedia;
message TL_messageMediaInvoice {
  bool shipping_address_requested = 1;
  bool test = 2;
  string title = 3;
  string description = 4;
  WebDocument photo = 5;
  int32 receipt_msg_id = 6;
  string currency = 7;
  int64 total_amount = 8;
  string start_param = 9;
}

// messageActionEmpty#b6aef7b0 = MessageAction;
message TL_messageActionEmpty {
}

// messageActionChatCreate#a6638b9a title:string users:Vector<int> = MessageAction;
message TL_messageActionChatCreate {
  string title = 1;
  repeated int32 users = 2;
}

// messageActionChatEditTitle#b5a1ce5a title:string = MessageAction;
message TL_messageActionChatEditTitle {
  string title = 1;
}

// messageActionChatEditPhoto#7fcb13a8 photo:Photo = MessageAction;
message TL_messageActionChatEditPhoto {
  Photo photo = 1;
}

// messageActionChatDeletePhoto#95e3fbef = MessageAction;
message TL_messageActionChatDeletePhoto {
}

// messageActionChatAddUser#488a7337 users:Vector<int> = MessageAction;
message TL_messageActionChatAddUser {
  repeated int32 users = 1;
}

// messageActionChatDeleteUser#b2ae9b0c user_id:int = MessageAction;
message TL_messageActionChatDeleteUser {
  int32 user_id = 1;
}

// messageActionChatJoinedByLink#f89cf5e8 inviter_id:int = MessageAction;
message TL_messageActionChatJoinedByLink {
  int32 inviter_id = 1;
}

// messageActionChannelCreate#95d2ac92 title:string = MessageAction;
message TL_messageActionChannelCreate {
  string title = 1;
}

// messageActionChatMigrateTo#51bdb021 channel_id:int = MessageAction;
message TL_messageActionChatMigrateTo {
  int32 channel_id = 1;
}

// messageActionChannelMigrateFrom#b055eaee title:string chat_id:int = MessageAction;
message TL_messageActionChannelMigrateFrom {
  string title = 1;
  int32 chat_id = 2;
}

// messageActionPinMessage#94bd38ed = MessageAction;
message TL_messageActionPinMessage {
}

// messageActionHistoryClear#9fbab604 = MessageAction;
message TL_messageActionHistoryClear {
}

// messageActionGameScore#92a72876 game_id:long score:int = MessageAction;
message TL_messageActionGameScore {
  int64 game_id = 1;
  int32 score = 2;
}

// messageActionPaymentSentMe#8f31b327 flags:# currency:string total_amount:long payload:bytes info:flags.0?PaymentRequestedInfo shipping_option_id:flags.1?string charge:PaymentCharge = MessageAction;
message TL_messageActionPaymentSentMe {
  string currency = 1;
  int64 total_amount = 2;
  bytes payload = 3;
  PaymentRequestedInfo info = 4;
  string shipping_option_id = 5;
  PaymentCharge charge = 6;
}

// messageActionPaymentSent#40699cd0 currency:string total_amount:long = MessageAction;
message TL_messageActionPaymentSent {
  string currency = 1;
  int64 total_amount = 2;
}

// messageActionPhoneCall#80e11a7f flags:# call_id:long reason:flags.0?PhoneCallDiscardReason duration:flags.1?int = MessageAction;
message TL_messageActionPhoneCall {
  int64 call_id = 1;
  PhoneCallDiscardReason reason = 2;
  int32 duration = 3;
}

// messageActionScreenshotTaken#4792929b = MessageAction;
message TL_messageActionScreenshotTaken {
}

// dialog#e4def5db flags:# pinned:flags.2?true peer:Peer top_message:int read_inbox_max_id:int read_outbox_max_id:int unread_count:int unread_mentions_count:int notify_settings:PeerNotifySettings pts:flags.0?int draft:flags.1?DraftMessage = Dialog;
message TL_dialog {
  bool pinned = 1;
  Peer peer = 2;
  int32 top_message = 3;
  int32 read_inbox_max_id = 4;
  int32 read_outbox_max_id = 5;
  int32 unread_count = 6;
  int32 unread_mentions_count = 7;
  PeerNotifySettings notify_settings = 8;
  int32 pts = 9;
  DraftMessage draft = 10;
}

// photoEmpty#2331b22d id:long = Photo;
message TL_photoEmpty {
  int64 id = 1;
}

// photo#9288dd29 flags:# has_stickers:flags.0?true id:long access_hash:long date:int sizes:Vector<PhotoSize> = Photo;
message TL_photo {
  bool has_stickers = 1;
  int64 id = 2;
  int64 access_hash = 3;
  int32 date = 4;
  repeated PhotoSize sizes = 5;
}

// photoSizeEmpty#e17e23c type:string = PhotoSize;
message TL_photoSizeEmpty {
  string type = 1;
}

// photoSize#77bfb61b type:string location:FileLocation w:int h:int size:int = PhotoSize;
message TL_photoSize {
  string type = 1;
  FileLocation location = 2;
  int32 w = 3;
  int32 h = 4;
  int32 size = 5;
}

// photoCachedSize#e9a734fa type:string location:FileLocation w:int h:int bytes:bytes = PhotoSize;
message TL_photoCachedSize {
  string type = 1;
  FileLocation location = 2;
  int32 w = 3;
  int32 h = 4;
  bytes bytes = 5;
}

// geoPointEmpty#1117dd5f = GeoPoint;
message TL_geoPointEmpty {
}

// geoPoint#2049d70c long:double lat:double = GeoPoint;
message TL_geoPoint {
  double long = 1;
  double lat = 2;
}

// auth.checkedPhone#811ea28e phone_registered:Bool = auth.CheckedPhone;
message TL_auth_checkedPhone {
  Bool phone_registered = 1;
}

// auth.sentCode#5e002502 flags:# phone_registered:flags.0?true type:auth.SentCodeType phone_code_hash:string next_type:flags.1?auth.CodeType timeout:flags.2?int = auth.SentCode;
message TL_auth_sentCode {
  bool phone_registered = 1;
  auth_SentCodeType type = 2;
  string phone_code_hash = 3;
  auth_CodeType next_type = 4;
  int32 timeout = 5;
}

// auth.authorization#cd050916 flags:# tmp_sessions:flags.0?int user:User = auth.Authorization;
message TL_auth_authorization {
  int32 tmp_sessions = 1;
  User user = 2;
}

// auth.exportedAuthorization#df969c2d id:int bytes:bytes = auth.ExportedAuthorization;
message TL_auth_exportedAuthorization {
  int32 id = 1;
  bytes bytes = 2;
}

// inputNotifyPeer#b8bc5b0c peer:InputPeer = InputNotifyPeer;
message TL_inputNotifyPeer {
  InputPeer peer = 1;
}

// inputNotifyUsers#193b4417 = InputNotifyPeer;
message TL_inputNotifyUsers {
}

// inputNotifyChats#4a95e84e = InputNotifyPeer;
message TL_inputNotifyChats {
}

// inputNotifyAll#a429b886 = InputNotifyPeer;
message TL_inputNotifyAll {
}

// inputPeerNotifyEventsEmpty#f03064d8 = InputPeerNotifyEvents;
message TL_inputPeerNotifyEventsEmpty {
}

// inputPeerNotifyEventsAll#e86a2c74 = InputPeerNotifyEvents;
message TL_inputPeerNotifyEventsAll {
}

// inputPeerNotifySettings#38935eb2 flags:# show_previews:flags.0?true silent:flags.1?true mute_until:int sound:string = InputPeerNotifySettings;
message TL_inputPeerNotifySettings {
  bool show_previews = 1;
  bool silent = 2;
  int32 mute_until = 3;
  string sound = 4;
}

// peerNotifyEventsEmpty#add53cb3 = PeerNotifyEvents;
message TL_peerNotifyEventsEmpty {
}

// peerNotifyEventsAll#6d1ded88 = PeerNotifyEvents;
message TL_peerNotifyEventsAll {
}

// peerNotifySettingsEmpty#70a68512 = PeerNotifySettings;
message TL_peerNotifySettingsEmpty {
}

// peerNotifySettings#9acda4c0 flags:# show_previews:flags.0?true silent:flags.1?true mute_until:int sound:string = PeerNotifySettings;
message TL_peerNotifySettings {
  bool show_previews = 1;
  bool silent = 2;
  int32 mute_until = 3;
  string sound = 4;
}

// peerSettings#818426cd flags:# report_spam:flags.0?true = PeerSettings;
message TL_peerSettings {
  bool report_spam = 1;
}

// wallPaper#ccb03657 id:int title:string sizes:Vector<PhotoSize> color:int = WallPaper;
message TL_wallPaper {
  int32 id = 1;
  string title = 2;
  repeated PhotoSize sizes = 3;
  int32 color = 4;
}

// wallPaperSolid#63117f24 id:int title:string bg_color:int color:int = WallPaper;
message TL_wallPaperSolid {
  int32 id = 1;
  string title = 2;
  int32 bg_color = 3;
  int32 color = 4;
}

// inputReportReasonSpam#58dbcab8 = ReportReason;
message TL_inputReportReasonSpam {
}

// inputReportReasonViolence#1e22c78d = ReportReason;
message TL_inputReportReasonViolence {
}

// inputReportReasonPornography#2e59d922 = ReportReason;
message TL_inputReportReasonPornography {
}

// inputReportReasonOther#e1746d0a text:string = ReportReason;
message TL_inputReportReasonOther {
  string text = 1;
}

// userFull#f220f3f flags:# blocked:flags.0?true phone_calls_available:flags.4?true phone_calls_private:flags.5?true user:User about:flags.1?string link:contacts.Link profile_photo:flags.2?Photo notify_settings:PeerNotifySettings bot_info:flags.3?BotInfo common_chats_count:int = UserFull;
message TL_userFull {
  bool blocked = 1;
  bool phone_calls_available = 2;
  bool phone_calls_private = 3;
  User user = 4;
  string about = 5;
  contacts_Link link = 6;
  Photo profile_photo = 7;
  PeerNotifySettings notify_settings = 8;
  BotInfo bot_info = 9;
  int32 common_chats_count = 10;
}

// contact#f911c994 user_id:int mutual:Bool = Contact;
message TL_contact {
  int32 user_id = 1;
  Bool mutual = 2;
}

// importedContact#d0028438 user_id:int client_id:long = ImportedContact;
message TL_importedContact {
  int32 user_id = 1;
  int64 client_id = 2;
}

// contactBlocked#561bc879 user_id:int date:int = ContactBlocked;
message TL_contactBlocked {
  int32 user_id = 1;
  int32 date = 2;
}

// contactStatus#d3680c61 user_id:int status:UserStatus = ContactStatus;
message TL_contactStatus {
  int32 user_id = 1;
  UserStatus status = 2;
}

// contacts.link#3ace484c my_link:ContactLink foreign_link:ContactLink user:User = contacts.Link;
message TL_contacts_link {
  ContactLink my_link = 1;
  ContactLink foreign_link = 2;
  User user = 3;
}

// contacts.contactsNotModified#b74ba9d2 = contacts.Contacts;
message TL_contacts_contactsNotModified {
}

// contacts.contacts#eae87e42 contacts:Vector<Contact> saved_count:int users:Vector<User> = contacts.Contacts;
message TL_contacts_contacts {
  repeated Contact contacts = 1;
  int32 saved_count = 2;
  repeated User users = 3;
}

// contacts.importedContacts#77d01c3b imported:Vector<ImportedContact> popular_invites:Vector<PopularContact> retry_contacts:Vector<long> users:Vector<User> = contacts.ImportedContacts;
message TL_contacts_importedContacts {
  repeated ImportedContact imported = 1;
  repeated PopularContact popular_invites = 2;
  repeated int64 retry_contacts = 3;
  repeated User users = 4;
}

// contacts.blocked#1c138d15 blocked:Vector<ContactBlocked> users:Vector<User> = contacts.Blocked;
message TL_contacts_blocked {
  repeated ContactBlocked blocked = 1;
  repeated User users = 2;
}

// contacts.blockedSlice#900802a1 count:int blocked:Vector<ContactBlocked> users:Vector<User> = contacts.Blocked;
message TL_contacts_blockedSlice {
  int32 count = 1;
  repeated ContactBlocked blocked = 2;
  repeated User users = 3;
}

// messages.dialogs#15ba6c40 dialogs:Vector<Dialog> messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = messages.Dialogs;
message TL_messages_dialogs {
  repeated Dialog dialogs = 1;
  repeated Message messages = 2;
  repeated Chat chats = 3;
  repeated User users = 4;
}

// messages.dialogsSlice#71e094f3 count:int dialogs:Vector<Dialog> messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = messages.Dialogs;
message TL_messages_dialogsSlice {
  int32 count = 1;
  repeated Dialog dialogs = 2;
  repeated Message messages = 3;
  repeated Chat chats = 4;
  repeated User users = 5;
}

// messages.messages#8c718e87 messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = messages.Messages;
message TL_messages_messages {
  repeated Message messages = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// messages.messagesSlice#b446ae3 count:int messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = messages.Messages;
message TL_messages_messagesSlice {
  int32 count = 1;
  repeated Message messages = 2;
  repeated Chat chats = 3;
  repeated User users = 4;
}

// messages.channelMessages#99262e37 flags:# pts:int count:int messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = messages.Messages;
message TL_messages_channelMessages {
  int32 pts = 1;
  int32 count = 2;
  repeated Message messages = 3;
  repeated Chat chats = 4;
  repeated User users = 5;
}

// messages.chats#64ff9fd5 chats:Vector<Chat> = messages.Chats;
message TL_messages_chats {
  repeated Chat chats = 1;
}

// messages.chatsSlice#9cd81144 count:int chats:Vector<Chat> = messages.Chats;
message TL_messages_chatsSlice {
  int32 count = 1;
  repeated Chat chats = 2;
}

// messages.chatFull#e5d7d19c full_chat:ChatFull chats:Vector<Chat> users:Vector<User> = messages.ChatFull;
message TL_messages_chatFull {
  ChatFull full_chat = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// messages.affectedHistory#b45c69d1 pts:int pts_count:int offset:int = messages.AffectedHistory;
message TL_messages_affectedHistory {
  int32 pts = 1;
  int32 pts_count = 2;
  int32 offset = 3;
}

// inputMessagesFilterEmpty#57e2f66c = MessagesFilter;
message TL_inputMessagesFilterEmpty {
}

// inputMessagesFilterPhotos#9609a51c = MessagesFilter;
message TL_inputMessagesFilterPhotos {
}

// inputMessagesFilterVideo#9fc00e65 = MessagesFilter;
message TL_inputMessagesFilterVideo {
}

// inputMessagesFilterPhotoVideo#56e9f0e4 = MessagesFilter;
message TL_inputMessagesFilterPhotoVideo {
}

// inputMessagesFilterPhotoVideoDocuments#d95e73bb = MessagesFilter;
message TL_inputMessagesFilterPhotoVideoDocuments {
}

// inputMessagesFilterDocument#9eddf188 = MessagesFilter;
message TL_inputMessagesFilterDocument {
}

// inputMessagesFilterUrl#7ef0dd87 = MessagesFilter;
message TL_inputMessagesFilterUrl {
}

// inputMessagesFilterGif#ffc86587 = MessagesFilter;
message TL_inputMessagesFilterGif {
}

// inputMessagesFilterVoice#50f5c392 = MessagesFilter;
message TL_inputMessagesFilterVoice {
}

// inputMessagesFilterMusic#3751b49e = MessagesFilter;
message TL_inputMessagesFilterMusic {
}

// inputMessagesFilterChatPhotos#3a20ecb8 = MessagesFilter;
message TL_inputMessagesFilterChatPhotos {
}

// inputMessagesFilterPhoneCalls#80c99768 flags:# missed:flags.0?true = MessagesFilter;
message TL_inputMessagesFilterPhoneCalls {
  bool missed = 1;
}

// inputMessagesFilterRoundVoice#7a7c17a4 = MessagesFilter;
message TL_inputMessagesFilterRoundVoice {
}

// inputMessagesFilterRoundVideo#b549da53 = MessagesFilter;
message TL_inputMessagesFilterRoundVideo {
}

// inputMessagesFilterMyMentions#c1f8e69a = MessagesFilter;
message TL_inputMessagesFilterMyMentions {
}

// updateNewMessage#1f2b0afd message:Message pts:int pts_count:int = Update;
message TL_updateNewMessage {
  Message message = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateMessageID#4e90bfd6 id:int random_id:long = Update;
message TL_updateMessageID {
  int32 id = 1;
  int64 random_id = 2;
}

// updateDeleteMessages#a20db0e5 messages:Vector<int> pts:int pts_count:int = Update;
message TL_updateDeleteMessages {
  repeated int32 messages = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateUserTyping#5c486927 user_id:int action:SendMessageAction = Update;
message TL_updateUserTyping {
  int32 user_id = 1;
  SendMessageAction action = 2;
}

// updateChatUserTyping#9a65ea1f chat_id:int user_id:int action:SendMessageAction = Update;
message TL_updateChatUserTyping {
  int32 chat_id = 1;
  int32 user_id = 2;
  SendMessageAction action = 3;
}

// updateChatParticipants#7761198 participants:ChatParticipants = Update;
message TL_updateChatParticipants {
  ChatParticipants participants = 1;
}

// updateUserStatus#1bfbd823 user_id:int status:UserStatus = Update;
message TL_updateUserStatus {
  int32 user_id = 1;
  UserStatus status = 2;
}

// updateUserName#a7332b73 user_id:int first_name:string last_name:string username:string = Update;
message TL_updateUserName {
  int32 user_id = 1;
  string first_name = 2;
  string last_name = 3;
  string username = 4;
}

// updateUserPhoto#95313b0c user_id:int date:int photo:UserProfilePhoto previous:Bool = Update;
message TL_updateUserPhoto {
  int32 user_id = 1;
  int32 date = 2;
  UserProfilePhoto photo = 3;
  Bool previous = 4;
}

// updateContactRegistered#2575bbb9 user_id:int date:int = Update;
message TL_updateContactRegistered {
  int32 user_id = 1;
  int32 date = 2;
}

// updateContactLink#9d2e67c5 user_id:int my_link:ContactLink foreign_link:ContactLink = Update;
message TL_updateContactLink {
  int32 user_id = 1;
  ContactLink my_link = 2;
  ContactLink foreign_link = 3;
}

// updateNewEncryptedMessage#12bcbd9a message:EncryptedMessage qts:int = Update;
message TL_updateNewEncryptedMessage {
  EncryptedMessage message = 1;
  int32 qts = 2;
}

// updateEncryptedChatTyping#1710f156 chat_id:int = Update;
message TL_updateEncryptedChatTyping {
  int32 chat_id = 1;
}

// updateEncryption#b4a2e88d chat:EncryptedChat date:int = Update;
message TL_updateEncryption {
  EncryptedChat chat = 1;
  int32 date = 2;
}

// updateEncryptedMessagesRead#38fe25b7 chat_id:int max_date:int date:int = Update;
message TL_updateEncryptedMessagesRead {
  int32 chat_id = 1;
  int32 max_date = 2;
  int32 date = 3;
}

// updateChatParticipantAdd#ea4b0e5c chat_id:int user_id:int inviter_id:int date:int version:int = Update;
message TL_updateChatParticipantAdd {
  int32 chat_id = 1;
  int32 user_id = 2;
  int32 inviter_id = 3;
  int32 date = 4;
  int32 version = 5;
}

// updateChatParticipantDelete#6e5f8c22 chat_id:int user_id:int version:int = Update;
message TL_updateChatParticipantDelete {
  int32 chat_id = 1;
  int32 user_id = 2;
  int32 version = 3;
}

// updateDcOptions#8e5e9873 dc_options:Vector<DcOption> = Update;
message TL_updateDcOptions {
  repeated DcOption dc_options = 1;
}

// updateUserBlocked#80ece81a user_id:int blocked:Bool = Update;
message TL_updateUserBlocked {
  int32 user_id = 1;
  Bool blocked = 2;
}

// updateNotifySettings#bec268ef peer:NotifyPeer notify_settings:PeerNotifySettings = Update;
message TL_updateNotifySettings {
  NotifyPeer peer = 1;
  PeerNotifySettings notify_settings = 2;
}

// updateServiceNotification#ebe46819 flags:# popup:flags.0?true inbox_date:flags.1?int type:string message:string media:MessageMedia entities:Vector<MessageEntity> = Update;
message TL_updateServiceNotification {
  bool popup = 1;
  int32 inbox_date = 2;
  string type = 3;
  string message = 4;
  MessageMedia media = 5;
  repeated MessageEntity entities = 6;
}

// updatePrivacy#ee3b272a key:PrivacyKey rules:Vector<PrivacyRule> = Update;
message TL_updatePrivacy {
  PrivacyKey key = 1;
  repeated PrivacyRule rules = 2;
}

// updateUserPhone#12b9417b user_id:int phone:string = Update;
message TL_updateUserPhone {
  int32 user_id = 1;
  string phone = 2;
}

// updateReadHistoryInbox#9961fd5c peer:Peer max_id:int pts:int pts_count:int = Update;
message TL_updateReadHistoryInbox {
  Peer peer = 1;
  int32 max_id = 2;
  int32 pts = 3;
  int32 pts_count = 4;
}

// updateReadHistoryOutbox#2f2f21bf peer:Peer max_id:int pts:int pts_count:int = Update;
message TL_updateReadHistoryOutbox {
  Peer peer = 1;
  int32 max_id = 2;
  int32 pts = 3;
  int32 pts_count = 4;
}

// updateWebPage#7f891213 webpage:WebPage pts:int pts_count:int = Update;
message TL_updateWebPage {
  WebPage webpage = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateReadMessagesContents#68c13933 messages:Vector<int> pts:int pts_count:int = Update;
message TL_updateReadMessagesContents {
  repeated int32 messages = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateChannelTooLong#eb0467fb flags:# channel_id:int pts:flags.0?int = Update;
message TL_updateChannelTooLong {
  int32 channel_id = 1;
  int32 pts = 2;
}

// updateChannel#b6d45656 channel_id:int = Update;
message TL_updateChannel {
  int32 channel_id = 1;
}

// updateNewChannelMessage#62ba04d9 message:Message pts:int pts_count:int = Update;
message TL_updateNewChannelMessage {
  Message message = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateReadChannelInbox#4214f37f channel_id:int max_id:int = Update;
message TL_updateReadChannelInbox {
  int32 channel_id = 1;
  int32 max_id = 2;
}

// updateDeleteChannelMessages#c37521c9 channel_id:int messages:Vector<int> pts:int pts_count:int = Update;
message TL_updateDeleteChannelMessages {
  int32 channel_id = 1;
  repeated int32 messages = 2;
  int32 pts = 3;
  int32 pts_count = 4;
}

// updateChannelMessageViews#98a12b4b channel_id:int id:int views:int = Update;
message TL_updateChannelMessageViews {
  int32 channel_id = 1;
  int32 id = 2;
  int32 views = 3;
}

// updateChatAdmins#6e947941 chat_id:int enabled:Bool version:int = Update;
message TL_updateChatAdmins {
  int32 chat_id = 1;
  Bool enabled = 2;
  int32 version = 3;
}

// updateChatParticipantAdmin#b6901959 chat_id:int user_id:int is_admin:Bool version:int = Update;
message TL_updateChatParticipantAdmin {
  int32 chat_id = 1;
  int32 user_id = 2;
  Bool is_admin = 3;
  int32 version = 4;
}

// updateNewStickerSet#688a30aa stickerset:messages.StickerSet = Update;
message TL_updateNewStickerSet {
  messages_StickerSet stickerset = 1;
}

// updateStickerSetsOrder#bb2d201 flags:# masks:flags.0?true order:Vector<long> = Update;
message TL_updateStickerSetsOrder {
  bool masks = 1;
  repeated int64 order = 2;
}

// updateStickerSets#43ae3dec = Update;
message TL_updateStickerSets {
}

// updateSavedGifs#9375341e = Update;
message TL_updateSavedGifs {
}

// updateBotInlineQuery#54826690 flags:# query_id:long user_id:int query:string geo:flags.0?GeoPoint offset:string = Update;
message TL_updateBotInlineQuery {
  int64 query_id = 1;
  int32 user_id = 2;
  string query = 3;
  GeoPoint geo = 4;
  string offset = 5;
}

// updateBotInlineSend#e48f964 flags:# user_id:int query:string geo:flags.0?GeoPoint id:string msg_id:flags.1?InputBotInlineMessageID = Update;
message TL_updateBotInlineSend {
  int32 user_id = 1;
  string query = 2;
  GeoPoint geo = 3;
  string id = 4;
  InputBotInlineMessageID msg_id = 5;
}

// updateEditChannelMessage#1b3f4df7 message:Message pts:int pts_count:int = Update;
message TL_updateEditChannelMessage {
  Message message = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateChannelPinnedMessage#98592475 channel_id:int id:int = Update;
message TL_updateChannelPinnedMessage {
  int32 channel_id = 1;
  int32 id = 2;
}

// updateBotCallbackQuery#e73547e1 flags:# query_id:long user_id:int peer:Peer msg_id:int chat_instance:long data:flags.0?bytes game_short_name:flags.1?string = Update;
message TL_updateBotCallbackQuery {
  int64 query_id = 1;
  int32 user_id = 2;
  Peer peer = 3;
  int32 msg_id = 4;
  int64 chat_instance = 5;
  bytes data = 6;
  string game_short_name = 7;
}

// updateEditMessage#e40370a3 message:Message pts:int pts_count:int = Update;
message TL_updateEditMessage {
  Message message = 1;
  int32 pts = 2;
  int32 pts_count = 3;
}

// updateInlineBotCallbackQuery#f9d27a5a flags:# query_id:long user_id:int msg_id:InputBotInlineMessageID chat_instance:long data:flags.0?bytes game_short_name:flags.1?string = Update;
message TL_updateInlineBotCallbackQuery {
  int64 query_id = 1;
  int32 user_id = 2;
  InputBotInlineMessageID msg_id = 3;
  int64 chat_instance = 4;
  bytes data = 5;
  string game_short_name = 6;
}

// updateReadChannelOutbox#25d6c9c7 channel_id:int max_id:int = Update;
message TL_updateReadChannelOutbox {
  int32 channel_id = 1;
  int32 max_id = 2;
}

// updateDraftMessage#ee2bb969 peer:Peer draft:DraftMessage = Update;
message TL_updateDraftMessage {
  Peer peer = 1;
  DraftMessage draft = 2;
}

// updateReadFeaturedStickers#571d2742 = Update;
message TL_updateReadFeaturedStickers {
}

// updateRecentStickers#9a422c20 = Update;
message TL_updateRecentStickers {
}

// updateConfig#a229dd06 = Update;
message TL_updateConfig {
}

// updatePtsChanged#3354678f = Update;
message TL_updatePtsChanged {
}

// updateChannelWebPage#40771900 channel_id:int webpage:WebPage pts:int pts_count:int = Update;
message TL_updateChannelWebPage {
  int32 channel_id = 1;
  WebPage webpage = 2;
  int32 pts = 3;
  int32 pts_count = 4;
}

// updateDialogPinned#d711a2cc flags:# pinned:flags.0?true peer:Peer = Update;
message TL_updateDialogPinned {
  bool pinned = 1;
  Peer peer = 2;
}

// updatePinnedDialogs#d8caf68d flags:# order:flags.0?Vector<Peer> = Update;
message TL_updatePinnedDialogs {
  repeated Peer order = 1;
}

// updateBotWebhookJSON#8317c0c3 data:DataJSON = Update;
message TL_updateBotWebhookJSON {
  DataJSON data = 1;
}

// updateBotWebhookJSONQuery#9b9240a6 query_id:long data:DataJSON timeout:int = Update;
message TL_updateBotWebhookJSONQuery {
  int64 query_id = 1;
  DataJSON data = 2;
  int32 timeout = 3;
}

// updateBotShippingQuery#e0cdc940 query_id:long user_id:int payload:bytes shipping_address:PostAddress = Update;
message TL_updateBotShippingQuery {
  int64 query_id = 1;
  int32 user_id = 2;
  bytes payload = 3;
  PostAddress shipping_address = 4;
}

// updateBotPrecheckoutQuery#5d2f3aa9 flags:# query_id:long user_id:int payload:bytes info:flags.0?PaymentRequestedInfo shipping_option_id:flags.1?string currency:string total_amount:long = Update;
message TL_updateBotPrecheckoutQuery {
  int64 query_id = 1;
  int32 user_id = 2;
  bytes payload = 3;
  PaymentRequestedInfo info = 4;
  string shipping_option_id = 5;
  string currency = 6;
  int64 total_amount = 7;
}

// updatePhoneCall#ab0f6b1e phone_call:PhoneCall = Update;
message TL_updatePhoneCall {
  PhoneCall phone_call = 1;
}

// updateLangPackTooLong#10c2404b = Update;
message TL_updateLangPackTooLong {
}

// updateLangPack#56022f4d difference:LangPackDifference = Update;
message TL_updateLangPack {
  LangPackDifference difference = 1;
}

// updateFavedStickers#e511996d = Update;
message TL_updateFavedStickers {
}

// updateChannelReadMessagesContents#89893b45 channel_id:int messages:Vector<int> = Update;
message TL_updateChannelReadMessagesContents {
  int32 channel_id = 1;
  repeated int32 messages = 2;
}

// updateContactsReset#7084a7be = Update;
message TL_updateContactsReset {
}

// updates.state#a56c2a3e pts:int qts:int date:int seq:int unread_count:int = updates.State;
message TL_updates_state {
  int32 pts = 1;
  int32 qts = 2;
  int32 date = 3;
  int32 seq = 4;
  int32 unread_count = 5;
}

// updates.differenceEmpty#5d75a138 date:int seq:int = updates.Difference;
message TL_updates_differenceEmpty {
  int32 date = 1;
  int32 seq = 2;
}

// updates.difference#f49ca0 new_messages:Vector<Message> new_encrypted_messages:Vector<EncryptedMessage> other_updates:Vector<Update> chats:Vector<Chat> users:Vector<User> state:updates.State = updates.Difference;
message TL_updates_difference {
  repeated Message new_messages = 1;
  repeated EncryptedMessage new_encrypted_messages = 2;
  repeated Update other_updates = 3;
  repeated Chat chats = 4;
  repeated User users = 5;
  updates_State state = 6;
}

// updates.differenceSlice#a8fb1981 new_messages:Vector<Message> new_encrypted_messages:Vector<EncryptedMessage> other_updates:Vector<Update> chats:Vector<Chat> users:Vector<User> intermediate_state:updates.State = updates.Difference;
message TL_updates_differenceSlice {
  repeated Message new_messages = 1;
  repeated EncryptedMessage new_encrypted_messages = 2;
  repeated Update other_updates = 3;
  repeated Chat chats = 4;
  repeated User users = 5;
  updates_State intermediate_state = 6;
}

// updates.differenceTooLong#4afe8f6d pts:int = updates.Difference;
message TL_updates_differenceTooLong {
  int32 pts = 1;
}

// updatesTooLong#e317af7e = Updates;
message TL_updatesTooLong {
}

// updateShortMessage#914fbf11 flags:# out:flags.1?true mentioned:flags.4?true media_unread:flags.5?true silent:flags.13?true id:int user_id:int message:string pts:int pts_count:int date:int fwd_from:flags.2?MessageFwdHeader via_bot_id:flags.11?int reply_to_msg_id:flags.3?int entities:flags.7?Vector<MessageEntity> = Updates;
message TL_updateShortMessage {
  bool out = 1;
  bool mentioned = 2;
  bool media_unread = 3;
  bool silent = 4;
  int32 id = 5;
  int32 user_id = 6;
  string message = 7;
  int32 pts = 8;
  int32 pts_count = 9;
  int32 date = 10;
  MessageFwdHeader fwd_from = 11;
  int32 via_bot_id = 12;
  int32 reply_to_msg_id = 13;
  repeated MessageEntity entities = 14;
}

// updateShortChatMessage#16812688 flags:# out:flags.1?true mentioned:flags.4?true media_unread:flags.5?true silent:flags.13?true id:int from_id:int chat_id:int message:string pts:int pts_count:int date:int fwd_from:flags.2?MessageFwdHeader via_bot_id:flags.11?int reply_to_msg_id:flags.3?int entities:flags.7?Vector<MessageEntity> = Updates;
message TL_updateShortChatMessage {
  bool out = 1;
  bool mentioned = 2;
  bool media_unread = 3;
  bool silent = 4;
  int32 id = 5;
  int32 from_id = 6;
  int32 chat_id = 7;
  string message = 8;
  int32 pts = 9;
  int32 pts_count = 10;
  int32 date = 11;
  MessageFwdHeader fwd_from = 12;
  int32 via_bot_id = 13;
  int32 reply_to_msg_id = 14;
  repeated MessageEntity entities = 15;
}

// updateShort#78d4dec1 update:Update date:int = Updates;
message TL_updateShort {
  Update update = 1;
  int32 date = 2;
}

// updatesCombined#725b04c3 updates:Vector<Update> users:Vector<User> chats:Vector<Chat> date:int seq_start:int seq:int = Updates;
message TL_updatesCombined {
  repeated Update updates = 1;
  repeated User users = 2;
  repeated Chat chats = 3;
  int32 date = 4;
  int32 seq_start = 5;
  int32 seq = 6;
}

// updates#74ae4240 updates:Vector<Update> users:Vector<User> chats:Vector<Chat> date:int seq:int = Updates;
message TL_updates {
  repeated Update updates = 1;
  repeated User users = 2;
  repeated Chat chats = 3;
  int32 date = 4;
  int32 seq = 5;
}

// updateShortSentMessage#11f1331c flags:# out:flags.1?true id:int pts:int pts_count:int date:int media:flags.9?MessageMedia entities:flags.7?Vector<MessageEntity> = Updates;
message TL_updateShortSentMessage {
  bool out = 1;
  int32 id = 2;
  int32 pts = 3;
  int32 pts_count = 4;
  int32 date = 5;
  MessageMedia media = 6;
  repeated MessageEntity entities = 7;
}

// photos.photos#8dca6aa5 photos:Vector<Photo> users:Vector<User> = photos.Photos;
message TL_photos_photos {
  repeated Photo photos = 1;
  repeated User users = 2;
}

// photos.photosSlice#15051f54 count:int photos:Vector<Photo> users:Vector<User> = photos.Photos;
message TL_photos_photosSlice {
  int32 count = 1;
  repeated Photo photos = 2;
  repeated User users = 3;
}

// photos.photo#20212ca8 photo:Photo users:Vector<User> = photos.Photo;
message TL_photos_photo {
  Photo photo = 1;
  repeated User users = 2;
}

// upload.file#96a18d5 type:storage.FileType mtime:int bytes:bytes = upload.File;
message TL_upload_file {
  storage_FileType type = 1;
  int32 mtime = 2;
  bytes bytes = 3;
}

// upload.fileCdnRedirect#ea52fe5a dc_id:int file_token:bytes encryption_key:bytes encryption_iv:bytes cdn_file_hashes:Vector<CdnFileHash> = upload.File;
message TL_upload_fileCdnRedirect {
  int32 dc_id = 1;
  bytes file_token = 2;
  bytes encryption_key = 3;
  bytes encryption_iv = 4;
  repeated CdnFileHash cdn_file_hashes = 5;
}

// dcOption#5d8c6cc flags:# ipv6:flags.0?true media_only:flags.1?true tcpo_only:flags.2?true cdn:flags.3?true static:flags.4?true id:int ip_address:string port:int = DcOption;
message TL_dcOption {
  bool ipv6 = 1;
  bool media_only = 2;
  bool tcpo_only = 3;
  bool cdn = 4;
  bool static = 5;
  int32 id = 6;
  string ip_address = 7;
  int32 port = 8;
}

// config#8df376a4 flags:# phonecalls_enabled:flags.1?true date:int expires:int test_mode:Bool this_dc:int dc_options:Vector<DcOption> chat_size_max:int megagroup_size_max:int forwarded_count_max:int online_update_period_ms:int offline_blur_timeout_ms:int offline_idle_timeout_ms:int online_cloud_timeout_ms:int notify_cloud_delay_ms:int notify_default_delay_ms:int chat_big_size:int push_chat_period_ms:int push_chat_limit:int saved_gifs_limit:int edit_time_limit:int rating_e_decay:int stickers_recent_limit:int stickers_faved_limit:int tmp_sessions:flags.0?int pinned_dialogs_count_max:int call_receive_timeout_ms:int call_ring_timeout_ms:int call_connect_timeout_ms:int call_packet_timeout_ms:int me_url_prefix:string suggested_lang_code:flags.2?string lang_pack_version:flags.2?int disabled_features:Vector<DisabledFeature> = Config;
message TL_config {
  bool phonecalls_enabled = 1;
  int32 date = 2;
  int32 expires = 3;
  Bool test_mode = 4;
  int32 this_dc = 5;
  repeated DcOption dc_options = 6;
  int32 chat_size_max = 7;
  int32 megagroup_size_max = 8;
  int32 forwarded_count_max = 9;
  int32 online_update_period_ms = 10;
  int32 offline_blur_timeout_ms = 11;
  int32 offline_idle_timeout_ms = 12;
  int32 online_cloud_timeout_ms = 13;
  int32 notify_cloud_delay_ms = 14;
  int32 notify_default_delay_ms = 15;
  int32 chat_big_size = 16;
  int32 push_chat_period_ms = 17;
  int32 push_chat_limit = 18;
  int32 saved_gifs_limit = 19;
  int32 edit_time_limit = 20;
  int32 rating_e_decay = 21;
  int32 stickers_recent_limit = 22;
  int32 stickers_faved_limit = 23;
  int32 tmp_sessions = 24;
  int32 pinned_dialogs_count_max = 25;
  int32 call_receive_timeout_ms = 26;
  int32 call_ring_timeout_ms = 27;
  int32 call_connect_timeout_ms = 28;
  int32 call_packet_timeout_ms = 29;
  string me_url_prefix = 30;
  string suggested_lang_code = 31;
  int32 lang_pack_version = 32;
  repeated DisabledFeature disabled_features = 33;
}

// nearestDc#8e1a1775 country:string this_dc:int nearest_dc:int = NearestDc;
message TL_nearestDc {
  string country = 1;
  int32 this_dc = 2;
  int32 nearest_dc = 3;
}

// help.appUpdate#8987f311 id:int critical:Bool url:string text:string = help.AppUpdate;
message TL_help_appUpdate {
  int32 id = 1;
  Bool critical = 2;
  string url = 3;
  string text = 4;
}

// help.noAppUpdate#c45a6536 = help.AppUpdate;
message TL_help_noAppUpdate {
}

// help.inviteText#18cb9f78 message:string = help.InviteText;
message TL_help_inviteText {
  string message = 1;
}

// encryptedChatEmpty#ab7ec0a0 id:int = EncryptedChat;
message TL_encryptedChatEmpty {
  int32 id = 1;
}

// encryptedChatWaiting#3bf703dc id:int access_hash:long date:int admin_id:int participant_id:int = EncryptedChat;
message TL_encryptedChatWaiting {
  int32 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
}

// encryptedChatRequested#c878527e id:int access_hash:long date:int admin_id:int participant_id:int g_a:bytes = EncryptedChat;
message TL_encryptedChatRequested {
  int32 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  bytes g_a = 6;
}

// encryptedChat#fa56ce36 id:int access_hash:long date:int admin_id:int participant_id:int g_a_or_b:bytes key_fingerprint:long = EncryptedChat;
message TL_encryptedChat {
  int32 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  bytes g_a_or_b = 6;
  int64 key_fingerprint = 7;
}

// encryptedChatDiscarded#13d6dd27 id:int = EncryptedChat;
message TL_encryptedChatDiscarded {
  int32 id = 1;
}

// inputEncryptedChat#f141b5e1 chat_id:int access_hash:long = InputEncryptedChat;
message TL_inputEncryptedChat {
  int32 chat_id = 1;
  int64 access_hash = 2;
}

// encryptedFileEmpty#c21f497e = EncryptedFile;
message TL_encryptedFileEmpty {
}

// encryptedFile#4a70994c id:long access_hash:long size:int dc_id:int key_fingerprint:int = EncryptedFile;
message TL_encryptedFile {
  int64 id = 1;
  int64 access_hash = 2;
  int32 size = 3;
  int32 dc_id = 4;
  int32 key_fingerprint = 5;
}

// inputEncryptedFileEmpty#1837c364 = InputEncryptedFile;
message TL_inputEncryptedFileEmpty {
}

// inputEncryptedFileUploaded#64bd0306 id:long parts:int md5_checksum:string key_fingerprint:int = InputEncryptedFile;
message TL_inputEncryptedFileUploaded {
  int64 id = 1;
  int32 parts = 2;
  string md5_checksum = 3;
  int32 key_fingerprint = 4;
}

// inputEncryptedFile#5a17b5e5 id:long access_hash:long = InputEncryptedFile;
message TL_inputEncryptedFile {
  int64 id = 1;
  int64 access_hash = 2;
}

// inputEncryptedFileBigUploaded#2dc173c8 id:long parts:int key_fingerprint:int = InputEncryptedFile;
message TL_inputEncryptedFileBigUploaded {
  int64 id = 1;
  int32 parts = 2;
  int32 key_fingerprint = 3;
}

// encryptedMessage#ed18c118 random_id:long chat_id:int date:int bytes:bytes file:EncryptedFile = EncryptedMessage;
message TL_encryptedMessage {
  int64 random_id = 1;
  int32 chat_id = 2;
  int32 date = 3;
  bytes bytes = 4;
  EncryptedFile file = 5;
}

// encryptedMessageService#23734b06 random_id:long chat_id:int date:int bytes:bytes = EncryptedMessage;
message TL_encryptedMessageService {
  int64 random_id = 1;
  int32 chat_id = 2;
  int32 date = 3;
  bytes bytes = 4;
}

// messages.dhConfigNotModified#c0e24635 random:bytes = messages.DhConfig;
message TL_messages_dhConfigNotModified {
  bytes random = 1;
}

// messages.dhConfig#2c221edd g:int p:bytes version:int random:bytes = messages.DhConfig;
message TL_messages_dhConfig {
  int32 g = 1;
  bytes p = 2;
  int32 version = 3;
  bytes random = 4;
}

// messages.sentEncryptedMessage#560f8935 date:int = messages.SentEncryptedMessage;
message TL_messages_sentEncryptedMessage {
  int32 date = 1;
}

// messages.sentEncryptedFile#9493ff32 date:int file:EncryptedFile = messages.SentEncryptedMessage;
message TL_messages_sentEncryptedFile {
  int32 date = 1;
  EncryptedFile file = 2;
}

// inputDocumentEmpty#72f0eaae = InputDocument;
message TL_inputDocumentEmpty {
}

// inputDocument#18798952 id:long access_hash:long = InputDocument;
message TL_inputDocument {
  int64 id = 1;
  int64 access_hash = 2;
}

// documentEmpty#36f8c871 id:long = Document;
message TL_documentEmpty {
  int64 id = 1;
}

// document#87232bc7 id:long access_hash:long date:int mime_type:string size:int thumb:PhotoSize dc_id:int version:int attributes:Vector<DocumentAttribute> = Document;
message TL_document {
  int64 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  string mime_type = 4;
  int32 size = 5;
  PhotoSize thumb = 6;
  int32 dc_id = 7;
  int32 version = 8;
  repeated DocumentAttribute attributes = 9;
}

// help.support#17c6b5f6 phone_number:string user:User = help.Support;
message TL_help_support {
  string phone_number = 1;
  User user = 2;
}

// notifyPeer#9fd40bd8 peer:Peer = NotifyPeer;
message TL_notifyPeer {
  Peer peer = 1;
}

// notifyUsers#b4c83b4c = NotifyPeer;
message TL_notifyUsers {
}

// notifyChats#c007cec3 = NotifyPeer;
message TL_notifyChats {
}

// notifyAll#74d07c60 = NotifyPeer;
message TL_notifyAll {
}

// sendMessageTypingAction#16bf744e = SendMessageAction;
message TL_sendMessageTypingAction {
}

// sendMessageCancelAction#fd5ec8f5 = SendMessageAction;
message TL_sendMessageCancelAction {
}

// sendMessageRecordVideoAction#a187d66f = SendMessageAction;
message TL_sendMessageRecordVideoAction {
}

// sendMessageUploadVideoAction#e9763aec progress:int = SendMessageAction;
message TL_sendMessageUploadVideoAction {
  int32 progress = 1;
}

// sendMessageRecordAudioAction#d52f73f7 = SendMessageAction;
message TL_sendMessageRecordAudioAction {
}

// sendMessageUploadAudioAction#f351d7ab progress:int = SendMessageAction;
message TL_sendMessageUploadAudioAction {
  int32 progress = 1;
}

// sendMessageUploadPhotoAction#d1d34a26 progress:int = SendMessageAction;
message TL_sendMessageUploadPhotoAction {
  int32 progress = 1;
}

// sendMessageUploadDocumentAction#aa0cd9e4 progress:int = SendMessageAction;
message TL_sendMessageUploadDocumentAction {
  int32 progress = 1;
}

// sendMessageGeoLocationAction#176f8ba1 = SendMessageAction;
message TL_sendMessageGeoLocationAction {
}

// sendMessageChooseContactAction#628cbc6f = SendMessageAction;
message TL_sendMessageChooseContactAction {
}

// sendMessageGamePlayAction#dd6a8f48 = SendMessageAction;
message TL_sendMessageGamePlayAction {
}

// sendMessageRecordRoundAction#88f27fbc = SendMessageAction;
message TL_sendMessageRecordRoundAction {
}

// sendMessageUploadRoundAction#243e1c66 progress:int = SendMessageAction;
message TL_sendMessageUploadRoundAction {
  int32 progress = 1;
}

// contacts.found#1aa1f784 results:Vector<Peer> chats:Vector<Chat> users:Vector<User> = contacts.Found;
message TL_contacts_found {
  repeated Peer results = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// inputPrivacyKeyStatusTimestamp#4f96cb18 = InputPrivacyKey;
message TL_inputPrivacyKeyStatusTimestamp {
}

// inputPrivacyKeyChatInvite#bdfb0426 = InputPrivacyKey;
message TL_inputPrivacyKeyChatInvite {
}

// inputPrivacyKeyPhoneCall#fabadc5f = InputPrivacyKey;
message TL_inputPrivacyKeyPhoneCall {
}

// privacyKeyStatusTimestamp#bc2eab30 = PrivacyKey;
message TL_privacyKeyStatusTimestamp {
}

// privacyKeyChatInvite#500e6dfa = PrivacyKey;
message TL_privacyKeyChatInvite {
}

// privacyKeyPhoneCall#3d662b7b = PrivacyKey;
message TL_privacyKeyPhoneCall {
}

// inputPrivacyValueAllowContacts#d09e07b = InputPrivacyRule;
message TL_inputPrivacyValueAllowContacts {
}

// inputPrivacyValueAllowAll#184b35ce = InputPrivacyRule;
message TL_inputPrivacyValueAllowAll {
}

// inputPrivacyValueAllowUsers#131cc67f users:Vector<InputUser> = InputPrivacyRule;
message TL_inputPrivacyValueAllowUsers {
  repeated InputUser users = 1;
}

// inputPrivacyValueDisallowContacts#ba52007 = InputPrivacyRule;
message TL_inputPrivacyValueDisallowContacts {
}

// inputPrivacyValueDisallowAll#d66b66c9 = InputPrivacyRule;
message TL_inputPrivacyValueDisallowAll {
}

// inputPrivacyValueDisallowUsers#90110467 users:Vector<InputUser> = InputPrivacyRule;
message TL_inputPrivacyValueDisallowUsers {
  repeated InputUser users = 1;
}

// privacyValueAllowContacts#fffe1bac = PrivacyRule;
message TL_privacyValueAllowContacts {
}

// privacyValueAllowAll#65427b82 = PrivacyRule;
message TL_privacyValueAllowAll {
}

// privacyValueAllowUsers#4d5bbe0c users:Vector<int> = PrivacyRule;
message TL_privacyValueAllowUsers {
  repeated int32 users = 1;
}

// privacyValueDisallowContacts#f888fa1a = PrivacyRule;
message TL_privacyValueDisallowContacts {
}

// privacyValueDisallowAll#8b73e763 = PrivacyRule;
message TL_privacyValueDisallowAll {
}

// privacyValueDisallowUsers#c7f49b7 users:Vector<int> = PrivacyRule;
message TL_privacyValueDisallowUsers {
  repeated int32 users = 1;
}

// account.privacyRules#554abb6f rules:Vector<PrivacyRule> users:Vector<User> = account.PrivacyRules;
message TL_account_privacyRules {
  repeated PrivacyRule rules = 1;
  repeated User users = 2;
}

// accountDaysTTL#b8d0afdf days:int = AccountDaysTTL;
message TL_accountDaysTTL {
  int32 days = 1;
}

// documentAttributeImageSize#6c37c15c w:int h:int = DocumentAttribute;
message TL_documentAttributeImageSize {
  int32 w = 1;
  int32 h = 2;
}

// documentAttributeAnimated#11b58939 = DocumentAttribute;
message TL_documentAttributeAnimated {
}

// documentAttributeSticker#6319d612 flags:# mask:flags.1?true alt:string stickerset:InputStickerSet mask_coords:flags.0?MaskCoords = DocumentAttribute;
message TL_documentAttributeSticker {
  bool mask = 1;
  string alt = 2;
  InputStickerSet stickerset = 3;
  MaskCoords mask_coords = 4;
}

// documentAttributeVideo#ef02ce6 flags:# round_message:flags.0?true duration:int w:int h:int = DocumentAttribute;
message TL_documentAttributeVideo {
  bool round_message = 1;
  int32 duration = 2;
  int32 w = 3;
  int32 h = 4;
}

// documentAttributeAudio#9852f9c6 flags:# voice:flags.10?true duration:int title:flags.0?string performer:flags.1?string waveform:flags.2?bytes = DocumentAttribute;
message TL_documentAttributeAudio {
  bool voice = 1;
  int32 duration = 2;
  string title = 3;
  string performer = 4;
  bytes waveform = 5;
}

// documentAttributeFilename#15590068 file_name:string = DocumentAttribute;
message TL_documentAttributeFilename {
  string file_name = 1;
}

// documentAttributeHasStickers#9801d2f7 = DocumentAttribute;
message TL_documentAttributeHasStickers {
}

// messages.stickersNotModified#f1749a22 = messages.Stickers;
message TL_messages_stickersNotModified {
}

// messages.stickers#8a8ecd32 hash:string stickers:Vector<Document> = messages.Stickers;
message TL_messages_stickers {
  string hash = 1;
  repeated Document stickers = 2;
}

// stickerPack#12b299d4 emoticon:string documents:Vector<long> = StickerPack;
message TL_stickerPack {
  string emoticon = 1;
  repeated int64 documents = 2;
}

// messages.allStickersNotModified#e86602c3 = messages.AllStickers;
message TL_messages_allStickersNotModified {
}

// messages.allStickers#edfd405f hash:int sets:Vector<StickerSet> = messages.AllStickers;
message TL_messages_allStickers {
  int32 hash = 1;
  repeated StickerSet sets = 2;
}

// disabledFeature#ae636f24 feature:string description:string = DisabledFeature;
message TL_disabledFeature {
  string feature = 1;
  string description = 2;
}

// messages.affectedMessages#84d19185 pts:int pts_count:int = messages.AffectedMessages;
message TL_messages_affectedMessages {
  int32 pts = 1;
  int32 pts_count = 2;
}

// contactLinkUnknown#5f4f9247 = ContactLink;
message TL_contactLinkUnknown {
}

// contactLinkNone#feedd3ad = ContactLink;
message TL_contactLinkNone {
}

// contactLinkHasPhone#268f3f59 = ContactLink;
message TL_contactLinkHasPhone {
}

// contactLinkContact#d502c2d0 = ContactLink;
message TL_contactLinkContact {
}

// webPageEmpty#eb1477e8 id:long = WebPage;
message TL_webPageEmpty {
  int64 id = 1;
}

// webPagePending#c586da1c id:long date:int = WebPage;
message TL_webPagePending {
  int64 id = 1;
  int32 date = 2;
}

// webPage#5f07b4bc flags:# id:long url:string display_url:string hash:int type:flags.0?string site_name:flags.1?string title:flags.2?string description:flags.3?string photo:flags.4?Photo embed_url:flags.5?string embed_type:flags.5?string embed_width:flags.6?int embed_height:flags.6?int duration:flags.7?int author:flags.8?string document:flags.9?Document cached_page:flags.10?Page = WebPage;
message TL_webPage {
  int64 id = 1;
  string url = 2;
  string display_url = 3;
  int32 hash = 4;
  string type = 5;
  string site_name = 6;
  string title = 7;
  string description = 8;
  Photo photo = 9;
  string embed_url = 10;
  string embed_type = 11;
  int32 embed_width = 12;
  int32 embed_height = 13;
  int32 duration = 14;
  string author = 15;
  Document document = 16;
  Page cached_page = 17;
}

// webPageNotModified#85849473 = WebPage;
message TL_webPageNotModified {
}

// authorization#7bf2e6f6 hash:long flags:int device_model:string platform:string system_version:string api_id:int app_name:string app_version:string date_created:int date_active:int ip:string country:string region:string = Authorization;
message TL_authorization {
  int64 hash = 1;
  string device_model = 2;
  string platform = 3;
  string system_version = 4;
  int32 api_id = 5;
  string app_name = 6;
  string app_version = 7;
  int32 date_created = 8;
  int32 date_active = 9;
  string ip = 10;
  string country = 11;
  string region = 12;
}

// account.authorizations#1250abde authorizations:Vector<Authorization> = account.Authorizations;
message TL_account_authorizations {
  repeated Authorization authorizations = 1;
}

// account.noPassword#96dabc18 new_salt:bytes email_unconfirmed_pattern:string = account.Password;
message TL_account_noPassword {
  bytes new_salt = 1;
  string email_unconfirmed_pattern = 2;
}

// account.password#7c18141c current_salt:bytes new_salt:bytes hint:string has_recovery:Bool email_unconfirmed_pattern:string = account.Password;
message TL_account_password {
  bytes current_salt = 1;
  bytes new_salt = 2;
  string hint = 3;
  Bool has_recovery = 4;
  string email_unconfirmed_pattern = 5;
}

// account.passwordSettings#b7b72ab3 email:string = account.PasswordSettings;
message TL_account_passwordSettings {
  string email = 1;
}

// account.passwordInputSettings#86916deb flags:# new_salt:flags.0?bytes new_password_hash:flags.0?bytes hint:flags.0?string email:flags.1?string = account.PasswordInputSettings;
message TL_account_passwordInputSettings {
  bytes new_salt = 1;
  bytes new_password_hash = 2;
  string hint = 3;
  string email = 4;
}

// auth.passwordRecovery#137948a5 email_pattern:string = auth.PasswordRecovery;
message TL_auth_passwordRecovery {
  string email_pattern = 1;
}

// receivedNotifyMessage#a384b779 id:int flags:int = ReceivedNotifyMessage;
message TL_receivedNotifyMessage {
  int32 id = 1;
}

// chatInviteEmpty#69df3769 = ExportedChatInvite;
message TL_chatInviteEmpty {
}

// chatInviteExported#fc2e05bc link:string = ExportedChatInvite;
message TL_chatInviteExported {
  string link = 1;
}

// chatInviteAlready#5a686d7c chat:Chat = ChatInvite;
message TL_chatInviteAlready {
  Chat chat = 1;
}

// chatInvite#db74f558 flags:# channel:flags.0?true broadcast:flags.1?true public:flags.2?true megagroup:flags.3?true title:string photo:ChatPhoto participants_count:int participants:flags.4?Vector<User> = ChatInvite;
message TL_chatInvite {
  bool channel = 1;
  bool broadcast = 2;
  bool public = 3;
  bool megagroup = 4;
  string title = 5;
  ChatPhoto photo = 6;
  int32 participants_count = 7;
  repeated User participants = 8;
}

// inputStickerSetEmpty#ffb62b95 = InputStickerSet;
message TL_inputStickerSetEmpty {
}

// inputStickerSetID#9de7a269 id:long access_hash:long = InputStickerSet;
message TL_inputStickerSetID {
  int64 id = 1;
  int64 access_hash = 2;
}

// inputStickerSetShortName#861cc8a0 short_name:string = InputStickerSet;
message TL_inputStickerSetShortName {
  string short_name = 1;
}

// stickerSet#cd303b41 flags:# installed:flags.0?true archived:flags.1?true official:flags.2?true masks:flags.3?true id:long access_hash:long title:string short_name:string count:int hash:int = StickerSet;
message TL_stickerSet {
  bool installed = 1;
  bool archived = 2;
  bool official = 3;
  bool masks = 4;
  int64 id = 5;
  int64 access_hash = 6;
  string title = 7;
  string short_name = 8;
  int32 count = 9;
  int32 hash = 10;
}

// messages.stickerSet#b60a24a6 set:StickerSet packs:Vector<StickerPack> documents:Vector<Document> = messages.StickerSet;
message TL_messages_stickerSet {
  StickerSet set = 1;
  repeated StickerPack packs = 2;
  repeated Document documents = 3;
}

// botCommand#c27ac8c7 command:string description:string = BotCommand;
message TL_botCommand {
  string command = 1;
  string description = 2;
}

// botInfo#98e81d3a user_id:int description:string commands:Vector<BotCommand> = BotInfo;
message TL_botInfo {
  int32 user_id = 1;
  string description = 2;
  repeated BotCommand commands = 3;
}

// keyboardButton#a2fa4880 text:string = KeyboardButton;
message TL_keyboardButton {
  string text = 1;
}

// keyboardButtonUrl#258aff05 text:string url:string = KeyboardButton;
message TL_keyboardButtonUrl {
  string text = 1;
  string url = 2;
}

// keyboardButtonCallback#683a5e46 text:string data:bytes = KeyboardButton;
message TL_keyboardButtonCallback {
  string text = 1;
  bytes data = 2;
}

// keyboardButtonRequestPhone#b16a6c29 text:string = KeyboardButton;
message TL_keyboardButtonRequestPhone {
  string text = 1;
}

// keyboardButtonRequestGeoLocation#fc796b3f text:string = KeyboardButton;
message TL_keyboardButtonRequestGeoLocation {
  string text = 1;
}

// keyboardButtonSwitchInline#568a748 flags:# same_peer:flags.0?true text:string query:string = KeyboardButton;
message TL_keyboardButtonSwitchInline {
  bool same_peer = 1;
  string text = 2;
  string query = 3;
}

// keyboardButtonGame#50f41ccf text:string = KeyboardButton;
message TL_keyboardButtonGame {
  string text = 1;
}

// keyboardButtonBuy#afd93fbb text:string = KeyboardButton;
message TL_keyboardButtonBuy {
  string text = 1;
}

// keyboardButtonRow#77608b83 buttons:Vector<KeyboardButton> = KeyboardButtonRow;
message TL_keyboardButtonRow {
  repeated KeyboardButton buttons = 1;
}

// replyKeyboardHide#a03e5b85 flags:# selective:flags.2?true = ReplyMarkup;
message TL_replyKeyboardHide {
  bool selective = 1;
}

// replyKeyboardForceReply#f4108aa0 flags:# single_use:flags.1?true selective:flags.2?true = ReplyMarkup;
message TL_replyKeyboardForceReply {
  bool single_use = 1;
  bool selective = 2;
}

// replyKeyboardMarkup#3502758c flags:# resize:flags.0?true single_use:flags.1?true selective:flags.2?true rows:Vector<KeyboardButtonRow> = ReplyMarkup;
message TL_replyKeyboardMarkup {
  bool resize = 1;
  bool single_use = 2;
  bool selective = 3;
  repeated KeyboardButtonRow rows = 4;
}

// replyInlineMarkup#48a30254 rows:Vector<KeyboardButtonRow> = ReplyMarkup;
message TL_replyInlineMarkup {
  repeated KeyboardButtonRow rows = 1;
}

// messageEntityUnknown#bb92ba95 offset:int length:int = MessageEntity;
message TL_messageEntityUnknown {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityMention#fa04579d offset:int length:int = MessageEntity;
message TL_messageEntityMention {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityHashtag#6f635b0d offset:int length:int = MessageEntity;
message TL_messageEntityHashtag {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityBotCommand#6cef8ac7 offset:int length:int = MessageEntity;
message TL_messageEntityBotCommand {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityUrl#6ed02538 offset:int length:int = MessageEntity;
message TL_messageEntityUrl {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityEmail#64e475c2 offset:int length:int = MessageEntity;
message TL_messageEntityEmail {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityBold#bd610bc9 offset:int length:int = MessageEntity;
message TL_messageEntityBold {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityItalic#826f8b60 offset:int length:int = MessageEntity;
message TL_messageEntityItalic {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityCode#28a20571 offset:int length:int = MessageEntity;
message TL_messageEntityCode {
  int32 offset = 1;
  int32 length = 2;
}

// messageEntityPre#73924be0 offset:int length:int language:string = MessageEntity;
message TL_messageEntityPre {
  int32 offset = 1;
  int32 length = 2;
  string language = 3;
}

// messageEntityTextUrl#76a6d327 offset:int length:int url:string = MessageEntity;
message TL_messageEntityTextUrl {
  int32 offset = 1;
  int32 length = 2;
  string url = 3;
}

// messageEntityMentionName#352dca58 offset:int length:int user_id:int = MessageEntity;
message TL_messageEntityMentionName {
  int32 offset = 1;
  int32 length = 2;
  int32 user_id = 3;
}

// inputMessageEntityMentionName#208e68c9 offset:int length:int user_id:InputUser = MessageEntity;
message TL_inputMessageEntityMentionName {
  int32 offset = 1;
  int32 length = 2;
  InputUser user_id = 3;
}

// inputChannelEmpty#ee8c1e86 = InputChannel;
message TL_inputChannelEmpty {
}

// inputChannel#afeb712e channel_id:int access_hash:long = InputChannel;
message TL_inputChannel {
  int32 channel_id = 1;
  int64 access_hash = 2;
}

// contacts.resolvedPeer#7f077ad9 peer:Peer chats:Vector<Chat> users:Vector<User> = contacts.ResolvedPeer;
message TL_contacts_resolvedPeer {
  Peer peer = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// messageRange#ae30253 min_id:int max_id:int = MessageRange;
message TL_messageRange {
  int32 min_id = 1;
  int32 max_id = 2;
}

// updates.channelDifferenceEmpty#3e11affb flags:# final:flags.0?true pts:int timeout:flags.1?int = updates.ChannelDifference;
message TL_updates_channelDifferenceEmpty {
  bool final = 1;
  int32 pts = 2;
  int32 timeout = 3;
}

// updates.channelDifferenceTooLong#6a9d7b35 flags:# final:flags.0?true pts:int timeout:flags.1?int top_message:int read_inbox_max_id:int read_outbox_max_id:int unread_count:int unread_mentions_count:int messages:Vector<Message> chats:Vector<Chat> users:Vector<User> = updates.ChannelDifference;
message TL_updates_channelDifferenceTooLong {
  bool final = 1;
  int32 pts = 2;
  int32 timeout = 3;
  int32 top_message = 4;
  int32 read_inbox_max_id = 5;
  int32 read_outbox_max_id = 6;
  int32 unread_count = 7;
  int32 unread_mentions_count = 8;
  repeated Message messages = 9;
  repeated Chat chats = 10;
  repeated User users = 11;
}

// updates.channelDifference#2064674e flags:# final:flags.0?true pts:int timeout:flags.1?int new_messages:Vector<Message> other_updates:Vector<Update> chats:Vector<Chat> users:Vector<User> = updates.ChannelDifference;
message TL_updates_channelDifference {
  bool final = 1;
  int32 pts = 2;
  int32 timeout = 3;
  repeated Message new_messages = 4;
  repeated Update other_updates = 5;
  repeated Chat chats = 6;
  repeated User users = 7;
}

// channelMessagesFilterEmpty#94d42ee7 = ChannelMessagesFilter;
message TL_channelMessagesFilterEmpty {
}

// channelMessagesFilter#cd77d957 flags:# exclude_new_messages:flags.1?true ranges:Vector<MessageRange> = ChannelMessagesFilter;
message TL_channelMessagesFilter {
  bool exclude_new_messages = 1;
  repeated MessageRange ranges = 2;
}

// channelParticipant#15ebac1d user_id:int date:int = ChannelParticipant;
message TL_channelParticipant {
  int32 user_id = 1;
  int32 date = 2;
}

// channelParticipantSelf#a3289a6d user_id:int inviter_id:int date:int = ChannelParticipant;
message TL_channelParticipantSelf {
  int32 user_id = 1;
  int32 inviter_id = 2;
  int32 date = 3;
}

// channelParticipantCreator#e3e2e1f9 user_id:int = ChannelParticipant;
message TL_channelParticipantCreator {
  int32 user_id = 1;
}

// channelParticipantAdmin#a82fa898 flags:# can_edit:flags.0?true user_id:int inviter_id:int promoted_by:int date:int admin_rights:ChannelAdminRights = ChannelParticipant;
message TL_channelParticipantAdmin {
  bool can_edit = 1;
  int32 user_id = 2;
  int32 inviter_id = 3;
  int32 promoted_by = 4;
  int32 date = 5;
  ChannelAdminRights admin_rights = 6;
}

// channelParticipantBanned#222c1886 flags:# left:flags.0?true user_id:int kicked_by:int date:int banned_rights:ChannelBannedRights = ChannelParticipant;
message TL_channelParticipantBanned {
  bool left = 1;
  int32 user_id = 2;
  int32 kicked_by = 3;
  int32 date = 4;
  ChannelBannedRights banned_rights = 5;
}

// channelParticipantsRecent#de3f3c79 = ChannelParticipantsFilter;
message TL_channelParticipantsRecent {
}

// channelParticipantsAdmins#b4608969 = ChannelParticipantsFilter;
message TL_channelParticipantsAdmins {
}

// channelParticipantsKicked#a3b54985 q:string = ChannelParticipantsFilter;
message TL_channelParticipantsKicked {
  string q = 1;
}

// channelParticipantsBots#b0d1865b = ChannelParticipantsFilter;
message TL_channelParticipantsBots {
}

// channelParticipantsBanned#1427a5e1 q:string = ChannelParticipantsFilter;
message TL_channelParticipantsBanned {
  string q = 1;
}

// channelParticipantsSearch#656ac4b q:string = ChannelParticipantsFilter;
message TL_channelParticipantsSearch {
  string q = 1;
}

// channels.channelParticipants#f56ee2a8 count:int participants:Vector<ChannelParticipant> users:Vector<User> = channels.ChannelParticipants;
message TL_channels_channelParticipants {
  int32 count = 1;
  repeated ChannelParticipant participants = 2;
  repeated User users = 3;
}

// channels.channelParticipant#d0d9b163 participant:ChannelParticipant users:Vector<User> = channels.ChannelParticipant;
message TL_channels_channelParticipant {
  ChannelParticipant participant = 1;
  repeated User users = 2;
}

// help.termsOfService#f1ee3e90 text:string = help.TermsOfService;
message TL_help_termsOfService {
  string text = 1;
}

// foundGif#162ecc1f url:string thumb_url:string content_url:string content_type:string w:int h:int = FoundGif;
message TL_foundGif {
  string url = 1;
  string thumb_url = 2;
  string content_url = 3;
  string content_type = 4;
  int32 w = 5;
  int32 h = 6;
}

// foundGifCached#9c750409 url:string photo:Photo document:Document = FoundGif;
message TL_foundGifCached {
  string url = 1;
  Photo photo = 2;
  Document document = 3;
}

// messages.foundGifs#450a1c0a next_offset:int results:Vector<FoundGif> = messages.FoundGifs;
message TL_messages_foundGifs {
  int32 next_offset = 1;
  repeated FoundGif results = 2;
}

// messages.savedGifsNotModified#e8025ca2 = messages.SavedGifs;
message TL_messages_savedGifsNotModified {
}

// messages.savedGifs#2e0709a5 hash:int gifs:Vector<Document> = messages.SavedGifs;
message TL_messages_savedGifs {
  int32 hash = 1;
  repeated Document gifs = 2;
}

// inputBotInlineMessageMediaAuto#292fed13 flags:# caption:string reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageMediaAuto {
  string caption = 1;
  ReplyMarkup reply_markup = 2;
}

// inputBotInlineMessageText#3dcd7a87 flags:# no_webpage:flags.0?true message:string entities:flags.1?Vector<MessageEntity> reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageText {
  bool no_webpage = 1;
  string message = 2;
  repeated MessageEntity entities = 3;
  ReplyMarkup reply_markup = 4;
}

// inputBotInlineMessageMediaGeo#f4a59de1 flags:# geo_point:InputGeoPoint reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageMediaGeo {
  InputGeoPoint geo_point = 1;
  ReplyMarkup reply_markup = 2;
}

// inputBotInlineMessageMediaVenue#aaafadc8 flags:# geo_point:InputGeoPoint title:string address:string provider:string venue_id:string reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageMediaVenue {
  InputGeoPoint geo_point = 1;
  string title = 2;
  string address = 3;
  string provider = 4;
  string venue_id = 5;
  ReplyMarkup reply_markup = 6;
}

// inputBotInlineMessageMediaContact#2daf01a7 flags:# phone_number:string first_name:string last_name:string reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageMediaContact {
  string phone_number = 1;
  string first_name = 2;
  string last_name = 3;
  ReplyMarkup reply_markup = 4;
}

// inputBotInlineMessageGame#4b425864 flags:# reply_markup:flags.2?ReplyMarkup = InputBotInlineMessage;
message TL_inputBotInlineMessageGame {
  ReplyMarkup reply_markup = 1;
}

// inputBotInlineResult#2cbbe15a flags:# id:string type:string title:flags.1?string description:flags.2?string url:flags.3?string thumb_url:flags.4?string content_url:flags.5?string content_type:flags.5?string w:flags.6?int h:flags.6?int duration:flags.7?int send_message:InputBotInlineMessage = InputBotInlineResult;
message TL_inputBotInlineResult {
  string id = 1;
  string type = 2;
  string title = 3;
  string description = 4;
  string url = 5;
  string thumb_url = 6;
  string content_url = 7;
  string content_type = 8;
  int32 w = 9;
  int32 h = 10;
  int32 duration = 11;
  InputBotInlineMessage send_message = 12;
}

// inputBotInlineResultPhoto#a8d864a7 id:string type:string photo:InputPhoto send_message:InputBotInlineMessage = InputBotInlineResult;
message TL_inputBotInlineResultPhoto {
  string id = 1;
  string type = 2;
  InputPhoto photo = 3;
  InputBotInlineMessage send_message = 4;
}

// inputBotInlineResultDocument#fff8fdc4 flags:# id:string type:string title:flags.1?string description:flags.2?string document:InputDocument send_message:InputBotInlineMessage = InputBotInlineResult;
message TL_inputBotInlineResultDocument {
  string id = 1;
  string type = 2;
  string title = 3;
  string description = 4;
  InputDocument document = 5;
  InputBotInlineMessage send_message = 6;
}

// inputBotInlineResultGame#4fa417f2 id:string short_name:string send_message:InputBotInlineMessage = InputBotInlineResult;
message TL_inputBotInlineResultGame {
  string id = 1;
  string short_name = 2;
  InputBotInlineMessage send_message = 3;
}

// botInlineMessageMediaAuto#a74b15b flags:# caption:string reply_markup:flags.2?ReplyMarkup = BotInlineMessage;
message TL_botInlineMessageMediaAuto {
  string caption = 1;
  ReplyMarkup reply_markup = 2;
}

// botInlineMessageText#8c7f65e2 flags:# no_webpage:flags.0?true message:string entities:flags.1?Vector<MessageEntity> reply_markup:flags.2?ReplyMarkup = BotInlineMessage;
message TL_botInlineMessageText {
  bool no_webpage = 1;
  string message = 2;
  repeated MessageEntity entities = 3;
  ReplyMarkup reply_markup = 4;
}

// botInlineMessageMediaGeo#3a8fd8b8 flags:# geo:GeoPoint reply_markup:flags.2?ReplyMarkup = BotInlineMessage;
message TL_botInlineMessageMediaGeo {
  GeoPoint geo = 1;
  ReplyMarkup reply_markup = 2;
}

// botInlineMessageMediaVenue#4366232e flags:# geo:GeoPoint title:string address:string provider:string venue_id:string reply_markup:flags.2?ReplyMarkup = BotInlineMessage;
message TL_botInlineMessageMediaVenue {
  GeoPoint geo = 1;
  string title = 2;
  string address = 3;
  string provider = 4;
  string venue_id = 5;
  ReplyMarkup reply_markup = 6;
}

// botInlineMessageMediaContact#35edb4d4 flags:# phone_number:string first_name:string last_name:string reply_markup:flags.2?ReplyMarkup = BotInlineMessage;
message TL_botInlineMessageMediaContact {
  string phone_number = 1;
  string first_name = 2;
  string last_name = 3;
  ReplyMarkup reply_markup = 4;
}

// botInlineResult#9bebaeb9 flags:# id:string type:string title:flags.1?string description:flags.2?string url:flags.3?string thumb_url:flags.4?string content_url:flags.5?string content_type:flags.5?string w:flags.6?int h:flags.6?int duration:flags.7?int send_message:BotInlineMessage = BotInlineResult;
message TL_botInlineResult {
  string id = 1;
  string type = 2;
  string title = 3;
  string description = 4;
  string url = 5;
  string thumb_url = 6;
  string content_url = 7;
  string content_type = 8;
  int32 w = 9;
  int32 h = 10;
  int32 duration = 11;
  BotInlineMessage send_message = 12;
}

// botInlineMediaResult#17db940b flags:# id:string type:string photo:flags.0?Photo document:flags.1?Document title:flags.2?string description:flags.3?string send_message:BotInlineMessage = BotInlineResult;
message TL_botInlineMediaResult {
  string id = 1;
  string type = 2;
  Photo photo = 3;
  Document document = 4;
  string title = 5;
  string description = 6;
  BotInlineMessage send_message = 7;
}

// messages.botResults#ccd3563d flags:# gallery:flags.0?true query_id:long next_offset:flags.1?string switch_pm:flags.2?InlineBotSwitchPM results:Vector<BotInlineResult> cache_time:int = messages.BotResults;
message TL_messages_botResults {
  bool gallery = 1;
  int64 query_id = 2;
  string next_offset = 3;
  InlineBotSwitchPM switch_pm = 4;
  repeated BotInlineResult results = 5;
  int32 cache_time = 6;
}

// exportedMessageLink#1f486803 link:string = ExportedMessageLink;
message TL_exportedMessageLink {
  string link = 1;
}

// messageFwdHeader#fadff4ac flags:# from_id:flags.0?int date:int channel_id:flags.1?int channel_post:flags.2?int post_author:flags.3?string = MessageFwdHeader;
message TL_messageFwdHeader {
  int32 from_id = 1;
  int32 date = 2;
  int32 channel_id = 3;
  int32 channel_post = 4;
  string post_author = 5;
}

// auth.codeTypeSms#72a3158c = auth.CodeType;
message TL_auth_codeTypeSms {
}

// auth.codeTypeCall#741cd3e3 = auth.CodeType;
message TL_auth_codeTypeCall {
}

// auth.codeTypeFlashCall#226ccefb = auth.CodeType;
message TL_auth_codeTypeFlashCall {
}

// auth.sentCodeTypeApp#3dbb5986 length:int = auth.SentCodeType;
message TL_auth_sentCodeTypeApp {
  int32 length = 1;
}

// auth.sentCodeTypeSms#c000bba2 length:int = auth.SentCodeType;
message TL_auth_sentCodeTypeSms {
  int32 length = 1;
}

// auth.sentCodeTypeCall#5353e5a7 length:int = auth.SentCodeType;
message TL_auth_sentCodeTypeCall {
  int32 length = 1;
}

// auth.sentCodeTypeFlashCall#ab03c6d9 pattern:string = auth.SentCodeType;
message TL_auth_sentCodeTypeFlashCall {
  string pattern = 1;
}

// messages.botCallbackAnswer#36585ea4 flags:# alert:flags.1?true has_url:flags.3?true message:flags.0?string url:flags.2?string cache_time:int = messages.BotCallbackAnswer;
message TL_messages_botCallbackAnswer {
  bool alert = 1;
  bool has_url = 2;
  string message = 3;
  string url = 4;
  int32 cache_time = 5;
}

// messages.messageEditData#26b5dde6 flags:# caption:flags.0?true = messages.MessageEditData;
message TL_messages_messageEditData {
  bool caption = 1;
}

// inputBotInlineMessageID#890c3d89 dc_id:int id:long access_hash:long = InputBotInlineMessageID;
message TL_inputBotInlineMessageID {
  int32 dc_id = 1;
  int64 id = 2;
  int64 access_hash = 3;
}

// inlineBotSwitchPM#3c20629f text:string start_param:string = InlineBotSwitchPM;
message TL_inlineBotSwitchPM {
  string text = 1;
  string start_param = 2;
}

// messages.peerDialogs#3371c354 dialogs:Vector<Dialog> messages:Vector<Message> chats:Vector<Chat> users:Vector<User> state:updates.State = messages.PeerDialogs;
message TL_messages_peerDialogs {
  repeated Dialog dialogs = 1;
  repeated Message messages = 2;
  repeated Chat chats = 3;
  repeated User users = 4;
  updates_State state = 5;
}

// topPeer#edcdc05b peer:Peer rating:double = TopPeer;
message TL_topPeer {
  Peer peer = 1;
  double rating = 2;
}

// topPeerCategoryBotsPM#ab661b5b = TopPeerCategory;
message TL_topPeerCategoryBotsPM {
}

// topPeerCategoryBotsInline#148677e2 = TopPeerCategory;
message TL_topPeerCategoryBotsInline {
}

// topPeerCategoryCorrespondents#637b7ed = TopPeerCategory;
message TL_topPeerCategoryCorrespondents {
}

// topPeerCategoryGroups#bd17a14a = TopPeerCategory;
message TL_topPeerCategoryGroups {
}

// topPeerCategoryChannels#161d9628 = TopPeerCategory;
message TL_topPeerCategoryChannels {
}

// topPeerCategoryPhoneCalls#1e76a78c = TopPeerCategory;
message TL_topPeerCategoryPhoneCalls {
}

// topPeerCategoryPeers#fb834291 category:TopPeerCategory count:int peers:Vector<TopPeer> = TopPeerCategoryPeers;
message TL_topPeerCategoryPeers {
  TopPeerCategory category = 1;
  int32 count = 2;
  repeated TopPeer peers = 3;
}

// contacts.topPeersNotModified#de266ef5 = contacts.TopPeers;
message TL_contacts_topPeersNotModified {
}

// contacts.topPeers#70b772a8 categories:Vector<TopPeerCategoryPeers> chats:Vector<Chat> users:Vector<User> = contacts.TopPeers;
message TL_contacts_topPeers {
  repeated TopPeerCategoryPeers categories = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// draftMessageEmpty#ba4baec5 = DraftMessage;
message TL_draftMessageEmpty {
}

// draftMessage#fd8e711f flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int message:string entities:flags.3?Vector<MessageEntity> date:int = DraftMessage;
message TL_draftMessage {
  bool no_webpage = 1;
  int32 reply_to_msg_id = 2;
  string message = 3;
  repeated MessageEntity entities = 4;
  int32 date = 5;
}

// messages.featuredStickersNotModified#4ede3cf = messages.FeaturedStickers;
message TL_messages_featuredStickersNotModified {
}

// messages.featuredStickers#f89d88e5 hash:int sets:Vector<StickerSetCovered> unread:Vector<long> = messages.FeaturedStickers;
message TL_messages_featuredStickers {
  int32 hash = 1;
  repeated StickerSetCovered sets = 2;
  repeated int64 unread = 3;
}

// messages.recentStickersNotModified#b17f890 = messages.RecentStickers;
message TL_messages_recentStickersNotModified {
}

// messages.recentStickers#5ce20970 hash:int stickers:Vector<Document> = messages.RecentStickers;
message TL_messages_recentStickers {
  int32 hash = 1;
  repeated Document stickers = 2;
}

// messages.archivedStickers#4fcba9c8 count:int sets:Vector<StickerSetCovered> = messages.ArchivedStickers;
message TL_messages_archivedStickers {
  int32 count = 1;
  repeated StickerSetCovered sets = 2;
}

// messages.stickerSetInstallResultSuccess#38641628 = messages.StickerSetInstallResult;
message TL_messages_stickerSetInstallResultSuccess {
}

// messages.stickerSetInstallResultArchive#35e410a8 sets:Vector<StickerSetCovered> = messages.StickerSetInstallResult;
message TL_messages_stickerSetInstallResultArchive {
  repeated StickerSetCovered sets = 1;
}

// stickerSetCovered#6410a5d2 set:StickerSet cover:Document = StickerSetCovered;
message TL_stickerSetCovered {
  StickerSet set = 1;
  Document cover = 2;
}

// stickerSetMultiCovered#3407e51b set:StickerSet covers:Vector<Document> = StickerSetCovered;
message TL_stickerSetMultiCovered {
  StickerSet set = 1;
  repeated Document covers = 2;
}

// maskCoords#aed6dbb2 n:int x:double y:double zoom:double = MaskCoords;
message TL_maskCoords {
  int32 n = 1;
  double x = 2;
  double y = 3;
  double zoom = 4;
}

// inputStickeredMediaPhoto#4a992157 id:InputPhoto = InputStickeredMedia;
message TL_inputStickeredMediaPhoto {
  InputPhoto id = 1;
}

// inputStickeredMediaDocument#438865b id:InputDocument = InputStickeredMedia;
message TL_inputStickeredMediaDocument {
  InputDocument id = 1;
}

// game#bdf9653b flags:# id:long access_hash:long short_name:string title:string description:string photo:Photo document:flags.0?Document = Game;
message TL_game {
  int64 id = 1;
  int64 access_hash = 2;
  string short_name = 3;
  string title = 4;
  string description = 5;
  Photo photo = 6;
  Document document = 7;
}

// inputGameID#32c3e77 id:long access_hash:long = InputGame;
message TL_inputGameID {
  int64 id = 1;
  int64 access_hash = 2;
}

// inputGameShortName#c331e80a bot_id:InputUser short_name:string = InputGame;
message TL_inputGameShortName {
  InputUser bot_id = 1;
  string short_name = 2;
}

// highScore#58fffcd0 pos:int user_id:int score:int = HighScore;
message TL_highScore {
  int32 pos = 1;
  int32 user_id = 2;
  int32 score = 3;
}

// messages.highScores#9a3bfd99 scores:Vector<HighScore> users:Vector<User> = messages.HighScores;
message TL_messages_highScores {
  repeated HighScore scores = 1;
  repeated User users = 2;
}

// textEmpty#dc3d824f = RichText;
message TL_textEmpty {
}

// textPlain#744694e0 text:string = RichText;
message TL_textPlain {
  string text = 1;
}

// textBold#6724abc4 text:RichText = RichText;
message TL_textBold {
  RichText text = 1;
}

// textItalic#d912a59c text:RichText = RichText;
message TL_textItalic {
  RichText text = 1;
}

// textUnderline#c12622c4 text:RichText = RichText;
message TL_textUnderline {
  RichText text = 1;
}

// textStrike#9bf8bb95 text:RichText = RichText;
message TL_textStrike {
  RichText text = 1;
}

// textFixed#6c3f19b9 text:RichText = RichText;
message TL_textFixed {
  RichText text = 1;
}

// textUrl#3c2884c1 text:RichText url:string webpage_id:long = RichText;
message TL_textUrl {
  RichText text = 1;
  string url = 2;
  int64 webpage_id = 3;
}

// textEmail#de5a0dd6 text:RichText email:string = RichText;
message TL_textEmail {
  RichText text = 1;
  string email = 2;
}

// textConcat#7e6260d7 texts:Vector<RichText> = RichText;
message TL_textConcat {
  repeated RichText texts = 1;
}

// pageBlockUnsupported#13567e8a = PageBlock;
message TL_pageBlockUnsupported {
}

// pageBlockTitle#70abc3fd text:RichText = PageBlock;
message TL_pageBlockTitle {
  RichText text = 1;
}

// pageBlockSubtitle#8ffa9a1f text:RichText = PageBlock;
message TL_pageBlockSubtitle {
  RichText text = 1;
}

// pageBlockAuthorDate#baafe5e0 author:RichText published_date:int = PageBlock;
message TL_pageBlockAuthorDate {
  RichText author = 1;
  int32 published_date = 2;
}

// pageBlockHeader#bfd064ec text:RichText = PageBlock;
message TL_pageBlockHeader {
  RichText text = 1;
}

// pageBlockSubheader#f12bb6e1 text:RichText = PageBlock;
message TL_pageBlockSubheader {
  RichText text = 1;
}

// pageBlockParagraph#467a0766 text:RichText = PageBlock;
message TL_pageBlockParagraph {
  RichText text = 1;
}

// pageBlockPreformatted#c070d93e text:RichText language:string = PageBlock;
message TL_pageBlockPreformatted {
  RichText text = 1;
  string language = 2;
}

// pageBlockFooter#48870999 text:RichText = PageBlock;
message TL_pageBlockFooter {
  RichText text = 1;
}

// pageBlockDivider#db20b188 = PageBlock;
message TL_pageBlockDivider {
}

// pageBlockAnchor#ce0d37b0 name:string = PageBlock;
message TL_pageBlockAnchor {
  string name = 1;
}

// pageBlockList#3a58c7f4 ordered:Bool items:Vector<RichText> = PageBlock;
message TL_pageBlockList {
  Bool ordered = 1;
  repeated RichText items = 2;
}

// pageBlockBlockquote#263d7c26 text:RichText caption:RichText = PageBlock;
message TL_pageBlockBlockquote {
  RichText text = 1;
  RichText caption = 2;
}

// pageBlockPullquote#4f4456d3 text:RichText caption:RichText = PageBlock;
message TL_pageBlockPullquote {
  RichText text = 1;
  RichText caption = 2;
}

// pageBlockPhoto#e9c69982 photo_id:long caption:RichText = PageBlock;
message TL_pageBlockPhoto {
  int64 photo_id = 1;
  RichText caption = 2;
}

// pageBlockVideo#d9d71866 flags:# autoplay:flags.0?true loop:flags.1?true video_id:long caption:RichText = PageBlock;
message TL_pageBlockVideo {
  bool autoplay = 1;
  bool loop = 2;
  int64 video_id = 3;
  RichText caption = 4;
}

// pageBlockCover#39f23300 cover:PageBlock = PageBlock;
message TL_pageBlockCover {
  PageBlock cover = 1;
}

// pageBlockEmbed#cde200d1 flags:# full_width:flags.0?true allow_scrolling:flags.3?true url:flags.1?string html:flags.2?string poster_photo_id:flags.4?long w:int h:int caption:RichText = PageBlock;
message TL_pageBlockEmbed {
  bool full_width = 1;
  bool allow_scrolling = 2;
  string url = 3;
  string html = 4;
  int64 poster_photo_id = 5;
  int32 w = 6;
  int32 h = 7;
  RichText caption = 8;
}

// pageBlockEmbedPost#292c7be9 url:string webpage_id:long author_photo_id:long author:string date:int blocks:Vector<PageBlock> caption:RichText = PageBlock;
message TL_pageBlockEmbedPost {
  string url = 1;
  int64 webpage_id = 2;
  int64 author_photo_id = 3;
  string author = 4;
  int32 date = 5;
  repeated PageBlock blocks = 6;
  RichText caption = 7;
}

// pageBlockCollage#8b31c4f items:Vector<PageBlock> caption:RichText = PageBlock;
message TL_pageBlockCollage {
  repeated PageBlock items = 1;
  RichText caption = 2;
}

// pageBlockSlideshow#130c8963 items:Vector<PageBlock> caption:RichText = PageBlock;
message TL_pageBlockSlideshow {
  repeated PageBlock items = 1;
  RichText caption = 2;
}

// pageBlockChannel#ef1751b5 channel:Chat = PageBlock;
message TL_pageBlockChannel {
  Chat channel = 1;
}

// pageBlockAudio#31b81a7f audio_id:long caption:RichText = PageBlock;
message TL_pageBlockAudio {
  int64 audio_id = 1;
  RichText caption = 2;
}

// pagePart#8e3f9ebe blocks:Vector<PageBlock> photos:Vector<Photo> documents:Vector<Document> = Page;
message TL_pagePart {
  repeated PageBlock blocks = 1;
  repeated Photo photos = 2;
  repeated Document documents = 3;
}

// pageFull#556ec7aa blocks:Vector<PageBlock> photos:Vector<Photo> documents:Vector<Document> = Page;
message TL_pageFull {
  repeated PageBlock blocks = 1;
  repeated Photo photos = 2;
  repeated Document documents = 3;
}

// phoneCallDiscardReasonMissed#85e42301 = PhoneCallDiscardReason;
message TL_phoneCallDiscardReasonMissed {
}

// phoneCallDiscardReasonDisconnect#e095c1a0 = PhoneCallDiscardReason;
message TL_phoneCallDiscardReasonDisconnect {
}

// phoneCallDiscardReasonHangup#57adc690 = PhoneCallDiscardReason;
message TL_phoneCallDiscardReasonHangup {
}

// phoneCallDiscardReasonBusy#faf7e8c9 = PhoneCallDiscardReason;
message TL_phoneCallDiscardReasonBusy {
}

// dataJSON#7d748d04 data:string = DataJSON;
message TL_dataJSON {
  string data = 1;
}

// labeledPrice#cb296bf8 label:string amount:long = LabeledPrice;
message TL_labeledPrice {
  string label = 1;
  int64 amount = 2;
}

// invoice#c30aa358 flags:# test:flags.0?true name_requested:flags.1?true phone_requested:flags.2?true email_requested:flags.3?true shipping_address_requested:flags.4?true flexible:flags.5?true currency:string prices:Vector<LabeledPrice> = Invoice;
message TL_invoice {
  bool test = 1;
  bool name_requested = 2;
  bool phone_requested = 3;
  bool email_requested = 4;
  bool shipping_address_requested = 5;
  bool flexible = 6;
  string currency = 7;
  repeated LabeledPrice prices = 8;
}

// paymentCharge#ea02c27e id:string provider_charge_id:string = PaymentCharge;
message TL_paymentCharge {
  string id = 1;
  string provider_charge_id = 2;
}

// postAddress#1e8caaeb street_line1:string street_line2:string city:string state:string country_iso2:string post_code:string = PostAddress;
message TL_postAddress {
  string street_line1 = 1;
  string street_line2 = 2;
  string city = 3;
  string state = 4;
  string country_iso2 = 5;
  string post_code = 6;
}

// paymentRequestedInfo#909c3f94 flags:# name:flags.0?string phone:flags.1?string email:flags.2?string shipping_address:flags.3?PostAddress = PaymentRequestedInfo;
message TL_paymentRequestedInfo {
  string name = 1;
  string phone = 2;
  string email = 3;
  PostAddress shipping_address = 4;
}

// paymentSavedCredentialsCard#cdc27a1f id:string title:string = PaymentSavedCredentials;
message TL_paymentSavedCredentialsCard {
  string id = 1;
  string title = 2;
}

// webDocument#c61acbd8 url:string access_hash:long size:int mime_type:string attributes:Vector<DocumentAttribute> dc_id:int = WebDocument;
message TL_webDocument {
  string url = 1;
  int64 access_hash = 2;
  int32 size = 3;
  string mime_type = 4;
  repeated DocumentAttribute attributes = 5;
  int32 dc_id = 6;
}

// inputWebDocument#9bed434d url:string size:int mime_type:string attributes:Vector<DocumentAttribute> = InputWebDocument;
message TL_inputWebDocument {
  string url = 1;
  int32 size = 2;
  string mime_type = 3;
  repeated DocumentAttribute attributes = 4;
}

// inputWebFileLocation#c239d686 url:string access_hash:long = InputWebFileLocation;
message TL_inputWebFileLocation {
  string url = 1;
  int64 access_hash = 2;
}

// upload.webFile#21e753bc size:int mime_type:string file_type:storage.FileType mtime:int bytes:bytes = upload.WebFile;
message TL_upload_webFile {
  int32 size = 1;
  string mime_type = 2;
  storage_FileType file_type = 3;
  int32 mtime = 4;
  bytes bytes = 5;
}

// payments.paymentForm#3f56aea3 flags:# can_save_credentials:flags.2?true password_missing:flags.3?true bot_id:int invoice:Invoice provider_id:int url:string native_provider:flags.4?string native_params:flags.4?DataJSON saved_info:flags.0?PaymentRequestedInfo saved_credentials:flags.1?PaymentSavedCredentials users:Vector<User> = payments.PaymentForm;
message TL_payments_paymentForm {
  bool can_save_credentials = 1;
  bool password_missing = 2;
  int32 bot_id = 3;
  Invoice invoice = 4;
  int32 provider_id = 5;
  string url = 6;
  string native_provider = 7;
  DataJSON native_params = 8;
  PaymentRequestedInfo saved_info = 9;
  PaymentSavedCredentials saved_credentials = 10;
  repeated User users = 11;
}

// payments.validatedRequestedInfo#d1451883 flags:# id:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = payments.ValidatedRequestedInfo;
message TL_payments_validatedRequestedInfo {
  string id = 1;
  repeated ShippingOption shipping_options = 2;
}

// payments.paymentResult#4e5f810d updates:Updates = payments.PaymentResult;
message TL_payments_paymentResult {
  Updates updates = 1;
}

// payments.paymentVerficationNeeded#6b56b921 url:string = payments.PaymentResult;
message TL_payments_paymentVerficationNeeded {
  string url = 1;
}

// payments.paymentReceipt#500911e1 flags:# date:int bot_id:int invoice:Invoice provider_id:int info:flags.0?PaymentRequestedInfo shipping:flags.1?ShippingOption currency:string total_amount:long credentials_title:string users:Vector<User> = payments.PaymentReceipt;
message TL_payments_paymentReceipt {
  int32 date = 1;
  int32 bot_id = 2;
  Invoice invoice = 3;
  int32 provider_id = 4;
  PaymentRequestedInfo info = 5;
  ShippingOption shipping = 6;
  string currency = 7;
  int64 total_amount = 8;
  string credentials_title = 9;
  repeated User users = 10;
}

// payments.savedInfo#fb8fe43c flags:# has_saved_credentials:flags.1?true saved_info:flags.0?PaymentRequestedInfo = payments.SavedInfo;
message TL_payments_savedInfo {
  bool has_saved_credentials = 1;
  PaymentRequestedInfo saved_info = 2;
}

// inputPaymentCredentialsSaved#c10eb2cf id:string tmp_password:bytes = InputPaymentCredentials;
message TL_inputPaymentCredentialsSaved {
  string id = 1;
  bytes tmp_password = 2;
}

// inputPaymentCredentials#3417d728 flags:# save:flags.0?true data:DataJSON = InputPaymentCredentials;
message TL_inputPaymentCredentials {
  bool save = 1;
  DataJSON data = 2;
}

// account.tmpPassword#db64fd34 tmp_password:bytes valid_until:int = account.TmpPassword;
message TL_account_tmpPassword {
  bytes tmp_password = 1;
  int32 valid_until = 2;
}

// shippingOption#b6213cdf id:string title:string prices:Vector<LabeledPrice> = ShippingOption;
message TL_shippingOption {
  string id = 1;
  string title = 2;
  repeated LabeledPrice prices = 3;
}

// inputStickerSetItem#ffa0a496 flags:# document:InputDocument emoji:string mask_coords:flags.0?MaskCoords = InputStickerSetItem;
message TL_inputStickerSetItem {
  InputDocument document = 1;
  string emoji = 2;
  MaskCoords mask_coords = 3;
}

// inputPhoneCall#1e36fded id:long access_hash:long = InputPhoneCall;
message TL_inputPhoneCall {
  int64 id = 1;
  int64 access_hash = 2;
}

// phoneCallEmpty#5366c915 id:long = PhoneCall;
message TL_phoneCallEmpty {
  int64 id = 1;
}

// phoneCallWaiting#1b8f4ad1 flags:# id:long access_hash:long date:int admin_id:int participant_id:int protocol:PhoneCallProtocol receive_date:flags.0?int = PhoneCall;
message TL_phoneCallWaiting {
  int64 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  PhoneCallProtocol protocol = 6;
  int32 receive_date = 7;
}

// phoneCallRequested#83761ce4 id:long access_hash:long date:int admin_id:int participant_id:int g_a_hash:bytes protocol:PhoneCallProtocol = PhoneCall;
message TL_phoneCallRequested {
  int64 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  bytes g_a_hash = 6;
  PhoneCallProtocol protocol = 7;
}

// phoneCallAccepted#6d003d3f id:long access_hash:long date:int admin_id:int participant_id:int g_b:bytes protocol:PhoneCallProtocol = PhoneCall;
message TL_phoneCallAccepted {
  int64 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  bytes g_b = 6;
  PhoneCallProtocol protocol = 7;
}

// phoneCall#ffe6ab67 id:long access_hash:long date:int admin_id:int participant_id:int g_a_or_b:bytes key_fingerprint:long protocol:PhoneCallProtocol connection:PhoneConnection alternative_connections:Vector<PhoneConnection> start_date:int = PhoneCall;
message TL_phoneCall {
  int64 id = 1;
  int64 access_hash = 2;
  int32 date = 3;
  int32 admin_id = 4;
  int32 participant_id = 5;
  bytes g_a_or_b = 6;
  int64 key_fingerprint = 7;
  PhoneCallProtocol protocol = 8;
  PhoneConnection connection = 9;
  repeated PhoneConnection alternative_connections = 10;
  int32 start_date = 11;
}

// phoneCallDiscarded#50ca4de1 flags:# need_rating:flags.2?true need_debug:flags.3?true id:long reason:flags.0?PhoneCallDiscardReason duration:flags.1?int = PhoneCall;
message TL_phoneCallDiscarded {
  bool need_rating = 1;
  bool need_debug = 2;
  int64 id = 3;
  PhoneCallDiscardReason reason = 4;
  int32 duration = 5;
}

// phoneConnection#9d4c17c0 id:long ip:string ipv6:string port:int peer_tag:bytes = PhoneConnection;
message TL_phoneConnection {
  int64 id = 1;
  string ip = 2;
  string ipv6 = 3;
  int32 port = 4;
  bytes peer_tag = 5;
}

// phoneCallProtocol#a2bb35cb flags:# udp_p2p:flags.0?true udp_reflector:flags.1?true min_layer:int max_layer:int = PhoneCallProtocol;
message TL_phoneCallProtocol {
  bool udp_p2p = 1;
  bool udp_reflector = 2;
  int32 min_layer = 3;
  int32 max_layer = 4;
}

// phone.phoneCall#ec82e140 phone_call:PhoneCall users:Vector<User> = phone.PhoneCall;
message TL_phone_phoneCall {
  PhoneCall phone_call = 1;
  repeated User users = 2;
}

// upload.cdnFileReuploadNeeded#eea8e46e request_token:bytes = upload.CdnFile;
message TL_upload_cdnFileReuploadNeeded {
  bytes request_token = 1;
}

// upload.cdnFile#a99fca4f bytes:bytes = upload.CdnFile;
message TL_upload_cdnFile {
  bytes bytes = 1;
}

// cdnPublicKey#c982eaba dc_id:int public_key:string = CdnPublicKey;
message TL_cdnPublicKey {
  int32 dc_id = 1;
  string public_key = 2;
}

// cdnConfig#5725e40a public_keys:Vector<CdnPublicKey> = CdnConfig;
message TL_cdnConfig {
  repeated CdnPublicKey public_keys = 1;
}

// langPackString#cad181f6 key:string value:string = LangPackString;
message TL_langPackString {
  string key = 1;
  string value = 2;
}

// langPackStringPluralized#6c47ac9f flags:# key:string zero_value:flags.0?string one_value:flags.1?string two_value:flags.2?string few_value:flags.3?string many_value:flags.4?string other_value:string = LangPackString;
message TL_langPackStringPluralized {
  string key = 1;
  string zero_value = 2;
  string one_value = 3;
  string two_value = 4;
  string few_value = 5;
  string many_value = 6;
  string other_value = 7;
}

// langPackStringDeleted#2979eeb2 key:string = LangPackString;
message TL_langPackStringDeleted {
  string key = 1;
}

// langPackDifference#f385c1f6 lang_code:string from_version:int version:int strings:Vector<LangPackString> = LangPackDifference;
message TL_langPackDifference {
  string lang_code = 1;
  int32 from_version = 2;
  int32 version = 3;
  repeated LangPackString strings = 4;
}

// langPackLanguage#117698f1 name:string native_name:string lang_code:string = LangPackLanguage;
message TL_langPackLanguage {
  string name = 1;
  string native_name = 2;
  string lang_code = 3;
}

// channelAdminRights#5d7ceba5 flags:# change_info:flags.0?true post_messages:flags.1?true edit_messages:flags.2?true delete_messages:flags.3?true ban_users:flags.4?true invite_users:flags.5?true invite_link:flags.6?true pin_messages:flags.7?true add_admins:flags.9?true = ChannelAdminRights;
message TL_channelAdminRights {
  bool change_info = 1;
  bool post_messages = 2;
  bool edit_messages = 3;
  bool delete_messages = 4;
  bool ban_users = 5;
  bool invite_users = 6;
  bool invite_link = 7;
  bool pin_messages = 8;
  bool add_admins = 9;
}

// channelBannedRights#58cf4249 flags:# view_messages:flags.0?true send_messages:flags.1?true send_media:flags.2?true send_stickers:flags.3?true send_gifs:flags.4?true send_games:flags.5?true send_inline:flags.6?true embed_links:flags.7?true until_date:int = ChannelBannedRights;
message TL_channelBannedRights {
  bool view_messages = 1;
  bool send_messages = 2;
  bool send_media = 3;
  bool send_stickers = 4;
  bool send_gifs = 5;
  bool send_games = 6;
  bool send_inline = 7;
  bool embed_links = 8;
  int32 until_date = 9;
}

// channelAdminLogEventActionChangeTitle#e6dfb825 prev_value:string new_value:string = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionChangeTitle {
  string prev_value = 1;
  string new_value = 2;
}

// channelAdminLogEventActionChangeAbout#55188a2e prev_value:string new_value:string = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionChangeAbout {
  string prev_value = 1;
  string new_value = 2;
}

// channelAdminLogEventActionChangeUsername#6a4afc38 prev_value:string new_value:string = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionChangeUsername {
  string prev_value = 1;
  string new_value = 2;
}

// channelAdminLogEventActionChangePhoto#b82f55c3 prev_photo:ChatPhoto new_photo:ChatPhoto = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionChangePhoto {
  ChatPhoto prev_photo = 1;
  ChatPhoto new_photo = 2;
}

// channelAdminLogEventActionToggleInvites#1b7907ae new_value:Bool = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionToggleInvites {
  Bool new_value = 1;
}

// channelAdminLogEventActionToggleSignatures#26ae0971 new_value:Bool = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionToggleSignatures {
  Bool new_value = 1;
}

// channelAdminLogEventActionUpdatePinned#e9e82c18 message:Message = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionUpdatePinned {
  Message message = 1;
}

// channelAdminLogEventActionEditMessage#709b2405 prev_message:Message new_message:Message = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionEditMessage {
  Message prev_message = 1;
  Message new_message = 2;
}

// channelAdminLogEventActionDeleteMessage#42e047bb message:Message = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionDeleteMessage {
  Message message = 1;
}

// channelAdminLogEventActionParticipantJoin#183040d3 = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionParticipantJoin {
}

// channelAdminLogEventActionParticipantLeave#f89777f2 = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionParticipantLeave {
}

// channelAdminLogEventActionParticipantInvite#e31c34d8 participant:ChannelParticipant = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionParticipantInvite {
  ChannelParticipant participant = 1;
}

// channelAdminLogEventActionParticipantToggleBan#e6d83d7e prev_participant:ChannelParticipant new_participant:ChannelParticipant = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionParticipantToggleBan {
  ChannelParticipant prev_participant = 1;
  ChannelParticipant new_participant = 2;
}

// channelAdminLogEventActionParticipantToggleAdmin#d5676710 prev_participant:ChannelParticipant new_participant:ChannelParticipant = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionParticipantToggleAdmin {
  ChannelParticipant prev_participant = 1;
  ChannelParticipant new_participant = 2;
}

// channelAdminLogEventActionChangeStickerSet#b1c3caa7 prev_stickerset:InputStickerSet new_stickerset:InputStickerSet = ChannelAdminLogEventAction;
message TL_channelAdminLogEventActionChangeStickerSet {
  InputStickerSet prev_stickerset = 1;
  InputStickerSet new_stickerset = 2;
}

// channelAdminLogEvent#3b5a3e40 id:long date:int user_id:int action:ChannelAdminLogEventAction = ChannelAdminLogEvent;
message TL_channelAdminLogEvent {
  int64 id = 1;
  int32 date = 2;
  int32 user_id = 3;
  ChannelAdminLogEventAction action = 4;
}

// channels.adminLogResults#ed8af74d events:Vector<ChannelAdminLogEvent> chats:Vector<Chat> users:Vector<User> = channels.AdminLogResults;
message TL_channels_adminLogResults {
  repeated ChannelAdminLogEvent events = 1;
  repeated Chat chats = 2;
  repeated User users = 3;
}

// channelAdminLogEventsFilter#ea107ae4 flags:# join:flags.0?true leave:flags.1?true invite:flags.2?true ban:flags.3?true unban:flags.4?true kick:flags.5?true unkick:flags.6?true promote:flags.7?true demote:flags.8?true info:flags.9?true settings:flags.10?true pinned:flags.11?true edit:flags.12?true delete:flags.13?true = ChannelAdminLogEventsFilter;
message TL_channelAdminLogEventsFilter {
  bool join = 1;
  bool leave = 2;
  bool invite = 3;
  bool ban = 4;
  bool unban = 5;
  bool kick = 6;
  bool unkick = 7;
  bool promote = 8;
  bool demote = 9;
  bool info = 10;
  bool settings = 11;
  bool pinned = 12;
  bool edit = 13;
  bool delete = 14;
}

// popularContact#5ce14175 client_id:long importers:int = PopularContact;
message TL_popularContact {
  int64 client_id = 1;
  int32 importers = 2;
}

// cdnFileHash#77eec38f offset:int limit:int hash:bytes = CdnFileHash;
message TL_cdnFileHash {
  int32 offset = 1;
  int32 limit = 2;
  bytes hash = 3;
}

// messages.favedStickersNotModified#9e8fa6d3 = messages.FavedStickers;
message TL_messages_favedStickersNotModified {
}

// messages.favedStickers#f37f2f16 hash:int packs:Vector<StickerPack> stickers:Vector<Document> = messages.FavedStickers;
message TL_messages_favedStickers {
  int32 hash = 1;
  repeated StickerPack packs = 2;
  repeated Document stickers = 3;
}


// RPC
// invokeAfterMsg#cb9f372d {X:Type} msg_id:long query:!X = X;
message TL_invokeAfterMsg {
  int64 msg_id = 1;
  bytes query = 2;
};

// invokeAfterMsgs#3dc4b4f0 {X:Type} msg_ids:Vector<long> query:!X = X;
message TL_invokeAfterMsgs {
  repeated int64 msg_ids = 1;
  bytes query = 2;
};

// initConnection#c7481da6 {X:Type} api_id:int device_model:string system_version:string app_version:string system_lang_code:string lang_pack:string lang_code:string query:!X = X;
message TL_initConnection {
  int32 api_id = 1;
  string device_model = 2;
  string system_version = 3;
  string app_version = 4;
  string system_lang_code = 5;
  string lang_pack = 6;
  string lang_code = 7;
  bytes query = 8;
};

// invokeWithLayer#da9b0d0d {X:Type} layer:int query:!X = X;
message TL_invokeWithLayer {
  int32 layer = 1;
  bytes query = 2;
};

// invokeWithoutUpdates#bf9459b7 {X:Type} query:!X = X;
message TL_invokeWithoutUpdates {
  bytes query = 1;
};

// auth.checkPhone#6fe51dfb phone_number:string = auth.CheckedPhone;
message TL_auth_checkPhone {
  string phone_number = 1;
};

// auth.sendCode#86aef0ec flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string = auth.SentCode;
message TL_auth_sendCode {
  bool allow_flashcall = 1;
  string phone_number = 2;
  Bool current_number = 3;
  int32 api_id = 4;
  string api_hash = 5;
};

// auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
message TL_auth_resendCode {
  string phone_number = 1;
  string phone_code_hash = 2;
};

// account.sendChangePhoneCode#8e57deb flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
message TL_account_sendChangePhoneCode {
  bool allow_flashcall = 1;
  string phone_number = 2;
  Bool current_number = 3;
};

// account.sendConfirmPhoneCode#1516d7bd flags:# allow_flashcall:flags.0?true hash:string current_number:flags.0?Bool = auth.SentCode;
message TL_account_sendConfirmPhoneCode {
  bool allow_flashcall = 1;
  string hash = 2;
  Bool current_number = 3;
};

// auth.signUp#1b067634 phone_number:string phone_code_hash:string phone_code:string first_name:string last_name:string = auth.Authorization;
message TL_auth_signUp {
  string phone_number = 1;
  string phone_code_hash = 2;
  string phone_code = 3;
  string first_name = 4;
  string last_name = 5;
};

// auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
message TL_auth_signIn {
  string phone_number = 1;
  string phone_code_hash = 2;
  string phone_code = 3;
};

// auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
message TL_auth_importAuthorization {
  int32 id = 1;
  bytes bytes = 2;
};

// auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
message TL_auth_importBotAuthorization {
  int32 api_id = 1;
  string api_hash = 2;
  string bot_auth_token = 3;
};

// auth.checkPassword#a63011e password_hash:bytes = auth.Authorization;
message TL_auth_checkPassword {
  bytes password_hash = 1;
};

// auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
message TL_auth_recoverPassword {
  string code = 1;
};

// auth.logOut#5717da40 = Bool;
message TL_auth_logOut {
};

// auth.resetAuthorizations#9fab0d1a = Bool;
message TL_auth_resetAuthorizations {
};

// auth.sendInvites#771c1d97 phone_numbers:Vector<string> message:string = Bool;
message TL_auth_sendInvites {
  repeated string phone_numbers = 1;
  string message = 2;
};

// auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
message TL_auth_bindTempAuthKey {
  int64 perm_auth_key_id = 1;
  int64 nonce = 2;
  int32 expires_at = 3;
  bytes encrypted_message = 4;
};

// auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
message TL_auth_cancelCode {
  string phone_number = 1;
  string phone_code_hash = 2;
};

// auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
message TL_auth_dropTempAuthKeys {
  repeated int64 except_auth_keys = 1;
};

// account.registerDevice#637ea878 token_type:int token:string = Bool;
message TL_account_registerDevice {
  int32 token_type = 1;
  string token = 2;
};

// account.unregisterDevice#65c55b40 token_type:int token:string = Bool;
message TL_account_unregisterDevice {
  int32 token_type = 1;
  string token = 2;
};

// account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
message TL_account_updateNotifySettings {
  InputNotifyPeer peer = 1;
  InputPeerNotifySettings settings = 2;
};

// account.resetNotifySettings#db7e1747 = Bool;
message TL_account_resetNotifySettings {
};

// account.updateStatus#6628562c offline:Bool = Bool;
message TL_account_updateStatus {
  Bool offline = 1;
};

// account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
message TL_account_reportPeer {
  InputPeer peer = 1;
  ReportReason reason = 2;
};

// account.checkUsername#2714d86c username:string = Bool;
message TL_account_checkUsername {
  string username = 1;
};

// account.deleteAccount#418d4e0b reason:string = Bool;
message TL_account_deleteAccount {
  string reason = 1;
};

// account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
message TL_account_setAccountTTL {
  AccountDaysTTL ttl = 1;
};

// account.updateDeviceLocked#38df3532 period:int = Bool;
message TL_account_updateDeviceLocked {
  int32 period = 1;
};

// account.resetAuthorization#df77f3bc hash:long = Bool;
message TL_account_resetAuthorization {
  int64 hash = 1;
};

// account.updatePasswordSettings#fa7c4b86 current_password_hash:bytes new_settings:account.PasswordInputSettings = Bool;
message TL_account_updatePasswordSettings {
  bytes current_password_hash = 1;
  account_PasswordInputSettings new_settings = 2;
};

// account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
message TL_account_confirmPhone {
  string phone_code_hash = 1;
  string phone_code = 2;
};

// contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
message TL_contacts_deleteContacts {
  repeated InputUser id = 1;
};

// contacts.block#332b49fc id:InputUser = Bool;
message TL_contacts_block {
  InputUser id = 1;
};

// contacts.unblock#e54100bd id:InputUser = Bool;
message TL_contacts_unblock {
  InputUser id = 1;
};

// contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
message TL_contacts_resetTopPeerRating {
  TopPeerCategory category = 1;
  InputPeer peer = 2;
};

// contacts.resetSaved#879537f1 = Bool;
message TL_contacts_resetSaved {
};

// messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool;
message TL_messages_setTyping {
  InputPeer peer = 1;
  SendMessageAction action = 2;
};

// messages.reportSpam#cf1592db peer:InputPeer = Bool;
message TL_messages_reportSpam {
  InputPeer peer = 1;
};

// messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
message TL_messages_hideReportSpam {
  InputPeer peer = 1;
};

// messages.discardEncryption#edd923c5 chat_id:int = Bool;
message TL_messages_discardEncryption {
  int32 chat_id = 1;
};

// messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
message TL_messages_setEncryptedTyping {
  InputEncryptedChat peer = 1;
  Bool typing = 2;
};

// messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
message TL_messages_readEncryptedHistory {
  InputEncryptedChat peer = 1;
  int32 max_date = 2;
};

// messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
message TL_messages_reportEncryptedSpam {
  InputEncryptedChat peer = 1;
};

// messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
message TL_messages_uninstallStickerSet {
  InputStickerSet stickerset = 1;
};

// messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
message TL_messages_editChatAdmin {
  int32 chat_id = 1;
  InputUser user_id = 2;
  Bool is_admin = 3;
};

// messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
message TL_messages_reorderStickerSets {
  bool masks = 1;
  repeated int64 order = 2;
};

// messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
message TL_messages_saveGif {
  InputDocument id = 1;
  Bool unsave = 2;
};

// messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
message TL_messages_setInlineBotResults {
  bool gallery = 1;
  bool private = 2;
  int64 query_id = 3;
  repeated InputBotInlineResult results = 4;
  int32 cache_time = 5;
  string next_offset = 6;
  InlineBotSwitchPM switch_pm = 7;
};

// messages.editInlineBotMessage#130c2c85 flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
message TL_messages_editInlineBotMessage {
  bool no_webpage = 1;
  InputBotInlineMessageID id = 2;
  string message = 3;
  ReplyMarkup reply_markup = 4;
  repeated MessageEntity entities = 5;
};

// messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
message TL_messages_setBotCallbackAnswer {
  bool alert = 1;
  int64 query_id = 2;
  string message = 3;
  string url = 4;
  int32 cache_time = 5;
};

// messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
message TL_messages_saveDraft {
  bool no_webpage = 1;
  int32 reply_to_msg_id = 2;
  InputPeer peer = 3;
  string message = 4;
  repeated MessageEntity entities = 5;
};

// messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
message TL_messages_readFeaturedStickers {
  repeated int64 id = 1;
};

// messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
message TL_messages_saveRecentSticker {
  bool attached = 1;
  InputDocument id = 2;
  Bool unsave = 3;
};

// messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
message TL_messages_clearRecentStickers {
  bool attached = 1;
};

// messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
message TL_messages_setInlineGameScore {
  bool edit_message = 1;
  bool force = 2;
  InputBotInlineMessageID id = 3;
  InputUser user_id = 4;
  int32 score = 5;
};

// messages.toggleDialogPin#3289be6a flags:# pinned:flags.0?true peer:InputPeer = Bool;
message TL_messages_toggleDialogPin {
  bool pinned = 1;
  InputPeer peer = 2;
};

// messages.reorderPinnedDialogs#959ff644 flags:# force:flags.0?true order:Vector<InputPeer> = Bool;
message TL_messages_reorderPinnedDialogs {
  bool force = 1;
  repeated InputPeer order = 2;
};

// messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
message TL_messages_setBotShippingResults {
  int64 query_id = 1;
  string error = 2;
  repeated ShippingOption shipping_options = 3;
};

// messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
message TL_messages_setBotPrecheckoutResults {
  bool success = 1;
  int64 query_id = 2;
  string error = 3;
};

// messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
message TL_messages_faveSticker {
  InputDocument id = 1;
  Bool unfave = 2;
};

// upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
message TL_upload_saveFilePart {
  int64 file_id = 1;
  int32 file_part = 2;
  bytes bytes = 3;
};

// upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
message TL_upload_saveBigFilePart {
  int64 file_id = 1;
  int32 file_part = 2;
  int32 file_total_parts = 3;
  bytes bytes = 4;
};

// help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
message TL_help_saveAppLog {
  repeated InputAppEvent events = 1;
};

// help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
message TL_help_setBotUpdatesStatus {
  int32 pending_updates_count = 1;
  string message = 2;
};

// channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
message TL_channels_readHistory {
  InputChannel channel = 1;
  int32 max_id = 2;
};

// channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
message TL_channels_reportSpam {
  InputChannel channel = 1;
  InputUser user_id = 2;
  repeated int32 id = 3;
};

// channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
message TL_channels_editAbout {
  InputChannel channel = 1;
  string about = 2;
};

// channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
message TL_channels_checkUsername {
  InputChannel channel = 1;
  string username = 2;
};

// channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
message TL_channels_updateUsername {
  InputChannel channel = 1;
  string username = 2;
};

// channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
message TL_channels_setStickers {
  InputChannel channel = 1;
  InputStickerSet stickerset = 2;
};

// channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
message TL_channels_readMessageContents {
  InputChannel channel = 1;
  repeated int32 id = 2;
};

// bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
message TL_bots_answerWebhookJSONQuery {
  int64 query_id = 1;
  DataJSON data = 2;
};

// payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
message TL_payments_clearSavedInfo {
  bool credentials = 1;
  bool info = 2;
};

// phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
message TL_phone_receivedCall {
  InputPhoneCall peer = 1;
};

// phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
message TL_phone_saveCallDebug {
  InputPhoneCall peer = 1;
  DataJSON debug = 2;
};

// auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
message TL_auth_exportAuthorization {
  int32 dc_id = 1;
};

// auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
message TL_auth_requestPasswordRecovery {
};

// account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
message TL_account_getNotifySettings {
  InputNotifyPeer peer = 1;
};

// account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
message TL_account_updateProfile {
  string first_name = 1;
  string last_name = 2;
  string about = 3;
};

// account.updateUsername#3e0bdd7c username:string = User;
message TL_account_updateUsername {
  string username = 1;
};

// account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
message TL_account_changePhone {
  string phone_number = 1;
  string phone_code_hash = 2;
  string phone_code = 3;
};

// contacts.importCard#4fe196fe export_card:Vector<int> = User;
message TL_contacts_importCard {
  repeated int32 export_card = 1;
};

// account.getWallPapers#c04cfac2 = Vector<WallPaper>;
message TL_account_getWallPapers {
};

// account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
message TL_account_getPrivacy {
  InputPrivacyKey key = 1;
};

// account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
message TL_account_setPrivacy {
  InputPrivacyKey key = 1;
  repeated InputPrivacyRule rules = 2;
};

// account.getAccountTTL#8fc711d = AccountDaysTTL;
message TL_account_getAccountTTL {
};

// account.getAuthorizations#e320c158 = account.Authorizations;
message TL_account_getAuthorizations {
};

// account.getPassword#548a30f5 = account.Password;
message TL_account_getPassword {
};

// account.getPasswordSettings#bc8d11bb current_password_hash:bytes = account.PasswordSettings;
message TL_account_getPasswordSettings {
  bytes current_password_hash = 1;
};

// account.getTmpPassword#4a82327e password_hash:bytes period:int = account.TmpPassword;
message TL_account_getTmpPassword {
  bytes password_hash = 1;
  int32 period = 2;
};

// users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
message TL_users_getUsers {
  repeated InputUser id = 1;
};

// users.getFullUser#ca30a5b1 id:InputUser = UserFull;
message TL_users_getFullUser {
  InputUser id = 1;
};

// contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
message TL_contacts_getStatuses {
};

// contacts.getContacts#c023849f hash:int = contacts.Contacts;
message TL_contacts_getContacts {
  int32 hash = 1;
};

// contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
message TL_contacts_importContacts {
  repeated InputContact contacts = 1;
};

// contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
message TL_contacts_deleteContact {
  InputUser id = 1;
};

// contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
message TL_contacts_getBlocked {
  int32 offset = 1;
  int32 limit = 2;
};

// contacts.exportCard#84e53737 = Vector<int>;
message TL_contacts_exportCard {
};

// messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
message TL_messages_getMessagesViews {
  InputPeer peer = 1;
  repeated int32 id = 2;
  Bool increment = 3;
};

// contacts.search#11f812d8 q:string limit:int = contacts.Found;
message TL_contacts_search {
  string q = 1;
  int32 limit = 2;
};

// contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
message TL_contacts_resolveUsername {
  string username = 1;
};

// contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
message TL_contacts_getTopPeers {
  bool correspondents = 1;
  bool bots_pm = 2;
  bool bots_inline = 3;
  bool phone_calls = 4;
  bool groups = 5;
  bool channels = 6;
  int32 offset = 7;
  int32 limit = 8;
  int32 hash = 9;
};

// messages.getMessages#4222fa74 id:Vector<int> = messages.Messages;
message TL_messages_getMessages {
  repeated int32 id = 1;
};

// messages.getHistory#afa92846 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
message TL_messages_getHistory {
  InputPeer peer = 1;
  int32 offset_id = 2;
  int32 offset_date = 3;
  int32 add_offset = 4;
  int32 limit = 5;
  int32 max_id = 6;
  int32 min_id = 7;
};

// messages.search#39e9ea0 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
message TL_messages_search {
  InputPeer peer = 1;
  string q = 2;
  InputUser from_id = 3;
  MessagesFilter filter = 4;
  int32 min_date = 5;
  int32 max_date = 6;
  int32 offset_id = 7;
  int32 add_offset = 8;
  int32 limit = 9;
  int32 max_id = 10;
  int32 min_id = 11;
};

// messages.searchGlobal#9e3cacb0 q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
message TL_messages_searchGlobal {
  string q = 1;
  int32 offset_date = 2;
  InputPeer offset_peer = 3;
  int32 offset_id = 4;
  int32 limit = 5;
};

// messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
message TL_messages_getUnreadMentions {
  InputPeer peer = 1;
  int32 offset_id = 2;
  int32 add_offset = 3;
  int32 limit = 4;
  int32 max_id = 5;
  int32 min_id = 6;
};

// channels.getMessages#93d7b347 channel:InputChannel id:Vector<int> = messages.Messages;
message TL_channels_getMessages {
  InputChannel channel = 1;
  repeated int32 id = 2;
};

// messages.getDialogs#191ba9c5 flags:# exclude_pinned:flags.0?true offset_date:int offset_id:int offset_peer:InputPeer limit:int = messages.Dialogs;
message TL_messages_getDialogs {
  bool exclude_pinned = 1;
  int32 offset_date = 2;
  int32 offset_id = 3;
  InputPeer offset_peer = 4;
  int32 limit = 5;
};

// messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
message TL_messages_readHistory {
  InputPeer peer = 1;
  int32 max_id = 2;
};

// messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
message TL_messages_deleteMessages {
  bool revoke = 1;
  repeated int32 id = 2;
};

// messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
message TL_messages_readMessageContents {
  repeated int32 id = 1;
};

// channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
message TL_channels_deleteMessages {
  InputChannel channel = 1;
  repeated int32 id = 2;
};

// messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true peer:InputPeer max_id:int = messages.AffectedHistory;
message TL_messages_deleteHistory {
  bool just_clear = 1;
  InputPeer peer = 2;
  int32 max_id = 3;
};

// channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
message TL_channels_deleteUserHistory {
  InputChannel channel = 1;
  InputUser user_id = 2;
};

// messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
message TL_messages_receivedMessages {
  int32 max_id = 1;
};

// messages.sendMessage#fa88427a flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
message TL_messages_sendMessage {
  bool no_webpage = 1;
  bool silent = 2;
  bool background = 3;
  bool clear_draft = 4;
  InputPeer peer = 5;
  int32 reply_to_msg_id = 6;
  string message = 7;
  int64 random_id = 8;
  ReplyMarkup reply_markup = 9;
  repeated MessageEntity entities = 10;
};

// messages.sendMedia#c8f16791 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia random_id:long reply_markup:flags.2?ReplyMarkup = Updates;
message TL_messages_sendMedia {
  bool silent = 1;
  bool background = 2;
  bool clear_draft = 3;
  InputPeer peer = 4;
  int32 reply_to_msg_id = 5;
  InputMedia media = 6;
  int64 random_id = 7;
  ReplyMarkup reply_markup = 8;
};

// messages.forwardMessages#708e0195 flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer = Updates;
message TL_messages_forwardMessages {
  bool silent = 1;
  bool background = 2;
  bool with_my_score = 3;
  InputPeer from_peer = 4;
  repeated int32 id = 5;
  repeated int64 random_id = 6;
  InputPeer to_peer = 7;
};

// messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
message TL_messages_editChatTitle {
  int32 chat_id = 1;
  string title = 2;
};

// messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
message TL_messages_editChatPhoto {
  int32 chat_id = 1;
  InputChatPhoto photo = 2;
};

// messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
message TL_messages_addChatUser {
  int32 chat_id = 1;
  InputUser user_id = 2;
  int32 fwd_limit = 3;
};

// messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
message TL_messages_deleteChatUser {
  int32 chat_id = 1;
  InputUser user_id = 2;
};

// messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
message TL_messages_createChat {
  repeated InputUser users = 1;
  string title = 2;
};

// messages.forwardMessage#33963bf9 peer:InputPeer id:int random_id:long = Updates;
message TL_messages_forwardMessage {
  InputPeer peer = 1;
  int32 id = 2;
  int64 random_id = 3;
};

// messages.importChatInvite#6c50051c hash:string = Updates;
message TL_messages_importChatInvite {
  string hash = 1;
};

// messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
message TL_messages_startBot {
  InputUser bot = 1;
  InputPeer peer = 2;
  int64 random_id = 3;
  string start_param = 4;
};

// messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
message TL_messages_toggleChatAdmins {
  int32 chat_id = 1;
  Bool enabled = 2;
};

// messages.migrateChat#15a3b8e3 chat_id:int = Updates;
message TL_messages_migrateChat {
  int32 chat_id = 1;
};

// messages.sendInlineBotResult#b16e06fe flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string = Updates;
message TL_messages_sendInlineBotResult {
  bool silent = 1;
  bool background = 2;
  bool clear_draft = 3;
  InputPeer peer = 4;
  int32 reply_to_msg_id = 5;
  int64 random_id = 6;
  int64 query_id = 7;
  string id = 8;
};

// messages.editMessage#ce91e4ca flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
message TL_messages_editMessage {
  bool no_webpage = 1;
  InputPeer peer = 2;
  int32 id = 3;
  string message = 4;
  ReplyMarkup reply_markup = 5;
  repeated MessageEntity entities = 6;
};

// messages.getAllDrafts#6a3f8d65 = Updates;
message TL_messages_getAllDrafts {
};

// messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
message TL_messages_setGameScore {
  bool edit_message = 1;
  bool force = 2;
  InputPeer peer = 3;
  int32 id = 4;
  InputUser user_id = 5;
  int32 score = 6;
};

// messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
message TL_messages_sendScreenshotNotification {
  InputPeer peer = 1;
  int32 reply_to_msg_id = 2;
  int64 random_id = 3;
};

// help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
message TL_help_getAppChangelog {
  string prev_app_version = 1;
};

// channels.createChannel#f4893d7f flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string = Updates;
message TL_channels_createChannel {
  bool broadcast = 1;
  bool megagroup = 2;
  string title = 3;
  string about = 4;
};

// channels.editAdmin#20b88214 channel:InputChannel user_id:InputUser admin_rights:ChannelAdminRights = Updates;
message TL_channels_editAdmin {
  InputChannel channel = 1;
  InputUser user_id = 2;
  ChannelAdminRights admin_rights = 3;
};

// channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
message TL_channels_editTitle {
  InputChannel channel = 1;
  string title = 2;
};

// channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
message TL_channels_editPhoto {
  InputChannel channel = 1;
  InputChatPhoto photo = 2;
};

// channels.joinChannel#24b524c5 channel:InputChannel = Updates;
message TL_channels_joinChannel {
  InputChannel channel = 1;
};

// channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
message TL_channels_leaveChannel {
  InputChannel channel = 1;
};

// channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
message TL_channels_inviteToChannel {
  InputChannel channel = 1;
  repeated InputUser users = 2;
};

// channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
message TL_channels_deleteChannel {
  InputChannel channel = 1;
};

// channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
message TL_channels_toggleInvites {
  InputChannel channel = 1;
  Bool enabled = 2;
};

// channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
message TL_channels_toggleSignatures {
  InputChannel channel = 1;
  Bool enabled = 2;
};

// channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
message TL_channels_updatePinnedMessage {
  bool silent = 1;
  InputChannel channel = 2;
  int32 id = 3;
};

// channels.editBanned#bfd915cd channel:InputChannel user_id:InputUser banned_rights:ChannelBannedRights = Updates;
message TL_channels_editBanned {
  InputChannel channel = 1;
  InputUser user_id = 2;
  ChannelBannedRights banned_rights = 3;
};

// phone.discardCall#78d413a6 peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
message TL_phone_discardCall {
  InputPhoneCall peer = 1;
  int32 duration = 2;
  PhoneCallDiscardReason reason = 3;
  int64 connection_id = 4;
};

// phone.setCallRating#1c536a34 peer:InputPhoneCall rating:int comment:string = Updates;
message TL_phone_setCallRating {
  InputPhoneCall peer = 1;
  int32 rating = 2;
  string comment = 3;
};

// messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
message TL_messages_getPeerSettings {
  InputPeer peer = 1;
};

// messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
message TL_messages_getChats {
  repeated int32 id = 1;
};

// messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
message TL_messages_getCommonChats {
  InputUser user_id = 1;
  int32 max_id = 2;
  int32 limit = 3;
};

// messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
message TL_messages_getAllChats {
  repeated int32 except_ids = 1;
};

// channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
message TL_channels_getChannels {
  repeated InputChannel id = 1;
};

// channels.getAdminedPublicChannels#8d8d82d7 = messages.Chats;
message TL_channels_getAdminedPublicChannels {
};

// messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
message TL_messages_getFullChat {
  int32 chat_id = 1;
};

// channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
message TL_channels_getFullChannel {
  InputChannel channel = 1;
};

// messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
message TL_messages_getDhConfig {
  int32 version = 1;
  int32 random_length = 2;
};

// messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
message TL_messages_requestEncryption {
  InputUser user_id = 1;
  int32 random_id = 2;
  bytes g_a = 3;
};

// messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
message TL_messages_acceptEncryption {
  InputEncryptedChat peer = 1;
  bytes g_b = 2;
  int64 key_fingerprint = 3;
};

// messages.sendEncrypted#a9776773 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
message TL_messages_sendEncrypted {
  InputEncryptedChat peer = 1;
  int64 random_id = 2;
  bytes data = 3;
};

// messages.sendEncryptedFile#9a901b66 peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
message TL_messages_sendEncryptedFile {
  InputEncryptedChat peer = 1;
  int64 random_id = 2;
  bytes data = 3;
  InputEncryptedFile file = 4;
};

// messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
message TL_messages_sendEncryptedService {
  InputEncryptedChat peer = 1;
  int64 random_id = 2;
  bytes data = 3;
};

// messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
message TL_messages_receivedQueue {
  int32 max_qts = 1;
};

// photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
message TL_photos_deletePhotos {
  repeated InputPhoto id = 1;
};

// messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
message TL_messages_getAllStickers {
  int32 hash = 1;
};

// messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
message TL_messages_getMaskStickers {
  int32 hash = 1;
};

// messages.getWebPagePreview#25223e24 message:string = MessageMedia;
message TL_messages_getWebPagePreview {
  string message = 1;
};

// messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
message TL_messages_uploadMedia {
  InputPeer peer = 1;
  InputMedia media = 2;
};

// messages.exportChatInvite#7d885289 chat_id:int = ExportedChatInvite;
message TL_messages_exportChatInvite {
  int32 chat_id = 1;
};

// channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
message TL_channels_exportInvite {
  InputChannel channel = 1;
};

// messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
message TL_messages_checkChatInvite {
  string hash = 1;
};

// messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
message TL_messages_getStickerSet {
  InputStickerSet stickerset = 1;
};

// stickers.createStickerSet#9bd86e6a flags:# masks:flags.0?true user_id:InputUser title:string short_name:string stickers:Vector<InputStickerSetItem> = messages.StickerSet;
message TL_stickers_createStickerSet {
  bool masks = 1;
  InputUser user_id = 2;
  string title = 3;
  string short_name = 4;
  repeated InputStickerSetItem stickers = 5;
};

// stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
message TL_stickers_removeStickerFromSet {
  InputDocument sticker = 1;
};

// stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
message TL_stickers_changeStickerPosition {
  InputDocument sticker = 1;
  int32 position = 2;
};

// stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
message TL_stickers_addStickerToSet {
  InputStickerSet stickerset = 1;
  InputStickerSetItem sticker = 2;
};

// messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
message TL_messages_installStickerSet {
  InputStickerSet stickerset = 1;
  Bool archived = 2;
};

// messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
message TL_messages_getDocumentByHash {
  bytes sha256 = 1;
  int32 size = 2;
  string mime_type = 3;
};

// messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
message TL_messages_searchGifs {
  string q = 1;
  int32 offset = 2;
};

// messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
message TL_messages_getSavedGifs {
  int32 hash = 1;
};

// messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
message TL_messages_getInlineBotResults {
  InputUser bot = 1;
  InputPeer peer = 2;
  InputGeoPoint geo_point = 3;
  string query = 4;
  string offset = 5;
};

// messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
message TL_messages_getMessageEditData {
  InputPeer peer = 1;
  int32 id = 2;
};

// messages.getBotCallbackAnswer#810a9fec flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes = messages.BotCallbackAnswer;
message TL_messages_getBotCallbackAnswer {
  bool game = 1;
  InputPeer peer = 2;
  int32 msg_id = 3;
  bytes data = 4;
};

// messages.getPeerDialogs#2d9776b9 peers:Vector<InputPeer> = messages.PeerDialogs;
message TL_messages_getPeerDialogs {
  repeated InputPeer peers = 1;
};

// messages.getPinnedDialogs#e254d64e = messages.PeerDialogs;
message TL_messages_getPinnedDialogs {
};

// messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
message TL_messages_getFeaturedStickers {
  int32 hash = 1;
};

// messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
message TL_messages_getRecentStickers {
  bool attached = 1;
  int32 hash = 2;
};

// messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
message TL_messages_getArchivedStickers {
  bool masks = 1;
  int64 offset_id = 2;
  int32 limit = 3;
};

// messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
message TL_messages_getAttachedStickers {
  InputStickeredMedia media = 1;
};

// messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
message TL_messages_getGameHighScores {
  InputPeer peer = 1;
  int32 id = 2;
  InputUser user_id = 3;
};

// messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
message TL_messages_getInlineGameHighScores {
  InputBotInlineMessageID id = 1;
  InputUser user_id = 2;
};

// messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
message TL_messages_getWebPage {
  string url = 1;
  int32 hash = 2;
};

// messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
message TL_messages_getFavedStickers {
  int32 hash = 1;
};

// updates.getState#edd4882a = updates.State;
message TL_updates_getState {
};

// updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
message TL_updates_getDifference {
  int32 pts = 1;
  int32 pts_total_limit = 2;
  int32 date = 3;
  int32 qts = 4;
};

// updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
message TL_updates_getChannelDifference {
  bool force = 1;
  InputChannel channel = 2;
  ChannelMessagesFilter filter = 3;
  int32 pts = 4;
  int32 limit = 5;
};

// photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
message TL_photos_updateProfilePhoto {
  InputPhoto id = 1;
};

// photos.uploadProfilePhoto#4f32c098 file:InputFile = photos.Photo;
message TL_photos_uploadProfilePhoto {
  InputFile file = 1;
};

// photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
message TL_photos_getUserPhotos {
  InputUser user_id = 1;
  int32 offset = 2;
  int64 max_id = 3;
  int32 limit = 4;
};

// upload.getFile#e3a6cfb5 location:InputFileLocation offset:int limit:int = upload.File;
message TL_upload_getFile {
  InputFileLocation location = 1;
  int32 offset = 2;
  int32 limit = 3;
};

// upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
message TL_upload_getWebFile {
  InputWebFileLocation location = 1;
  int32 offset = 2;
  int32 limit = 3;
};

// upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
message TL_upload_getCdnFile {
  bytes file_token = 1;
  int32 offset = 2;
  int32 limit = 3;
};

// upload.reuploadCdnFile#1af91c09 file_token:bytes request_token:bytes = Vector<CdnFileHash>;
message TL_upload_reuploadCdnFile {
  bytes file_token = 1;
  bytes request_token = 2;
};

// upload.getCdnFileHashes#f715c87b file_token:bytes offset:int = Vector<CdnFileHash>;
message TL_upload_getCdnFileHashes {
  bytes file_token = 1;
  int32 offset = 2;
};

// help.getConfig#c4f9186b = Config;
message TL_help_getConfig {
};

// help.getNearestDc#1fb33026 = NearestDc;
message TL_help_getNearestDc {
};

// help.getAppUpdate#ae2de196 = help.AppUpdate;
message TL_help_getAppUpdate {
};

// help.getInviteText#4d392343 = help.InviteText;
message TL_help_getInviteText {
};

// help.getSupport#9cdf08cd = help.Support;
message TL_help_getSupport {
};

// help.getTermsOfService#350170f3 = help.TermsOfService;
message TL_help_getTermsOfService {
};

// help.getCdnConfig#52029342 = CdnConfig;
message TL_help_getCdnConfig {
};

// channels.getParticipants#24d98f92 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int = channels.ChannelParticipants;
message TL_channels_getParticipants {
  InputChannel channel = 1;
  ChannelParticipantsFilter filter = 2;
  int32 offset = 3;
  int32 limit = 4;
};

// channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
message TL_channels_getParticipant {
  InputChannel channel = 1;
  InputUser user_id = 2;
};

// channels.exportMessageLink#c846d22d channel:InputChannel id:int = ExportedMessageLink;
message TL_channels_exportMessageLink {
  InputChannel channel = 1;
  int32 id = 2;
};

// channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
message TL_channels_getAdminLog {
  InputChannel channel = 1;
  string q = 2;
  ChannelAdminLogEventsFilter events_filter = 3;
  repeated InputUser admins = 4;
  int64 max_id = 5;
  int64 min_id = 6;
  int32 limit = 7;
};

// bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
message TL_bots_sendCustomRequest {
  string custom_method = 1;
  DataJSON params = 2;
};

// phone.getCallConfig#55451fa9 = DataJSON;
message TL_phone_getCallConfig {
};

// payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
message TL_payments_getPaymentForm {
  int32 msg_id = 1;
};

// payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
message TL_payments_getPaymentReceipt {
  int32 msg_id = 1;
};

// payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
message TL_payments_validateRequestedInfo {
  bool save = 1;
  int32 msg_id = 2;
  PaymentRequestedInfo info = 3;
};

// payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
message TL_payments_sendPaymentForm {
  int32 msg_id = 1;
  string requested_info_id = 2;
  string shipping_option_id = 3;
  InputPaymentCredentials credentials = 4;
};

// payments.getSavedInfo#227d824b = payments.SavedInfo;
message TL_payments_getSavedInfo {
};

// phone.requestCall#5b95b3d4 user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_requestCall {
  InputUser user_id = 1;
  int32 random_id = 2;
  bytes g_a_hash = 3;
  PhoneCallProtocol protocol = 4;
};

// phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_acceptCall {
  InputPhoneCall peer = 1;
  bytes g_b = 2;
  PhoneCallProtocol protocol = 3;
};

// phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
message TL_phone_confirmCall {
  InputPhoneCall peer = 1;
  bytes g_a = 2;
  int64 key_fingerprint = 3;
  PhoneCallProtocol protocol = 4;
};

// langpack.getLangPack#9ab5c58e lang_code:string = LangPackDifference;
message TL_langpack_getLangPack {
  string lang_code = 1;
};

// langpack.getDifference#b2e4d7d from_version:int = LangPackDifference;
message TL_langpack_getDifference {
  int32 from_version = 1;
};

// langpack.getStrings#2e1ee318 lang_code:string keys:Vector<string> = Vector<LangPackString>;
message TL_langpack_getStrings {
  string lang_code = 1;
  repeated string keys = 2;
};

// langpack.getLanguages#800fd57d = Vector<LangPackLanguage>;
message TL_langpack_getLanguages {
};

